function[0] top-level {
  Entry[-1] -> [0]

  Block[0] -> [2], [1], ExitExc
    [0] noop(StartOfFile)
    [1] <>Global<>ignore2 := 42
    [2] <>Global<>ignore4 := "hello!"
    [3] <>Global<>ignore6 := "there!"

  Block[1] -> [3], ExitExc
    [0] assert(x)
    [1] <>obj<>1 := @ToObject(y) @ #1
    [2] <>arguments<>2 := allocArg(0) @ #2
    [3] <>fun<>3 := @GetBase(y)
    [4] <>this<> := enterCode(<>fun<>3)

  Block[2] -> [6], ExitExc
    [0] assert(! x)

  Call[3] -> ExitExc
    [0] call(<>obj<>1, <>this<>, <>arguments<>2) @ #3

  AfterCall[4] -> [6]

  AfterCatch[5] -> ExitExc

  Block[6] -> [7], ExitExc
    [0] <>obj<>4 := @ToObject(getNode) @ #4
    [1] <>arguments<>5 := allocArg(0) @ #5
    [2] <>fun<>6 := @GetBase(getNode)
    [3] <>this<> := enterCode(<>fun<>6)

  Call[7] -> ExitExc
    [0] call(<>obj<>4, <>this<>, <>arguments<>5) @ #6

  AfterCall[8] -> [10]

  AfterCatch[9] -> ExitExc

  Block[10] -> [11], ExitExc
    [0] node := <>Global<>ignore8
    [1] <>Global<>ignore9 := <>Global<>ignore8
    [2] <>obj<>7 := @ToObject(node) @ #7

  LoopHead[11] -> [13], [12]

  Block[12] -> [14], ExitExc
    [0] assert(<>obj<>7["parent"])

  Block[13] -> [15], ExitExc
    [0] assert(! <>obj<>7["parent"])

  LCont[14] -> [11], ExitExc
    [0] <>obj<>8 := @ToObject(node) @ #8
    [1] node := <>obj<>8["parent"]
    [2] <>Global<>ignore11 := <>obj<>8["parent"]
    [3] <>obj<>7 := @ToObject(node) @ #9

  LBreak[15] -> Exit, ExitExc
    [0] <>Global<>ignore13 := i
    [1] <>old<>9 := j
    [2] <>new<>10 := @ToNumber(<>old<>9)
    [3] j := <>new<>10 + 1
    [4] <>Global<>ignore15 := <>new<>10 + 1
    [5] noop(EndOfFile)

  Exit[-2]

  ExitExc[-3]

}

