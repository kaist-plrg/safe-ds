function[0] top-level {
  Entry[-1] -> [0]

  Block[0] -> [1], ExitExc
    [0] pay := function (1) @ #4, #5
    [1] noop(StartOfFile)
    [2] <>Global<>ignore1 := alloc() @ #6
    [3] <>Global<>ignore1["apple"] := 100
    [4] <>Global<>ignore1["banana"] := 200
    [5] <>Global<>ignore1["melon"] := 300
    [6] productlist := <>Global<>ignore1
    [7] money := 1000
    [8] fruit := "melon"
    [9] <>obj<>10 := @ToObject(print) @ #7
    [10] <>y<>11 := "I had " + money + " won. I bought " + fruit + ", and now I have "
    [11] <>obj<>12 := @ToObject(pay) @ #8
    [12] <>temp<>13 := money
    [13] <>temp<>14 := fruit
    [14] <>arguments<>15 := allocArg(2) @ #9
    [15] <>arguments<>15["0"] := <>temp<>13
    [16] <>arguments<>15["1"] := <>temp<>14
    [17] <>fun<>16 := @GetBase(pay)
    [18] <>this<> := enterCode(<>fun<>16)

  Call[1] -> ExitExc
    [0] call(<>obj<>12, <>this<>, <>arguments<>15) @ #10

  AfterCall[2] -> [4]

  AfterCatch[3] -> ExitExc

  Block[4] -> [5], ExitExc
    [0] <>temp<>18 := <>y<>11 + <>z<>17 + " won."
    [1] <>arguments<>19 := allocArg(1) @ #11
    [2] <>arguments<>19["0"] := <>temp<>18
    [3] <>fun<>20 := @GetBase(print)
    [4] <>this<> := enterCode(<>fun<>20)

  Call[5] -> ExitExc
    [0] call(<>obj<>10, <>this<>, <>arguments<>19) @ #12

  AfterCall[6] -> [8]

  AfterCatch[7] -> ExitExc

  Block[8] -> Exit
    [0] noop(EndOfFile)

  Exit[-2]

  ExitExc[-3]

}

function[1] pay {
  Entry[-1] -> [0]

  Block[0] -> [2], [1]

  Block[1] -> Exit, ExitExc
    [0] assert(<>budget<>1 <= 0)
    [1] return(<>budget<>1)

  Block[2] -> [5], [4], ExitExc
    [0] assert(! <>budget<>1 <= 0)

  Block[3] -> Exit

  Block[4] -> Exit, ExitExc
    [0] assert(<>product<>2 == "apple")
    [1] <>y<>4 := <>budget<>1
    [2] <>obj<>5 := @ToObject(productlist) @ #1
    [3] return(<>y<>4 - <>obj<>5["apple"])

  Block[5] -> [8], [7], ExitExc
    [0] assert(<>product<>2 != "apple")

  Block[6] -> [3]

  Block[7] -> Exit, ExitExc
    [0] assert(<>product<>2 == "banana")
    [1] <>y<>6 := <>budget<>1
    [2] <>obj<>7 := @ToObject(productlist) @ #2
    [3] return(<>y<>6 - <>obj<>7["banana"])

  Block[8] -> [11], [10], ExitExc
    [0] assert(<>product<>2 != "banana")

  Block[9] -> [6]

  Block[10] -> Exit, ExitExc
    [0] assert(<>product<>2 == "melon")
    [1] <>y<>8 := <>budget<>1
    [2] <>obj<>9 := @ToObject(productlist) @ #3
    [3] return(<>y<>8 - <>obj<>9["melon"])

  Block[11] -> Exit, ExitExc
    [0] assert(<>product<>2 != "melon")
    [1] return(<>budget<>1)

  Block[12] -> [9]

  Exit[-2]

  ExitExc[-3]

}

