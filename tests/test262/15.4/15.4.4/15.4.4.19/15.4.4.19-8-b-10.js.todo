// TODO getters/setters
  function testcase() 
  {
    function callbackfn(val, idx, obj) 
    {
      return idx === 1 && typeof val === "undefined";
    }
    var obj = {
      2 : 2,
      length : 20
    };
    Object.defineProperty(obj, "0", {
      get : (function () 
      {
        delete Object.prototype[1];
        return 0;
      }),
      configurable : true
    });
    try
{      Object.prototype[1] = 1;
      var testResult = Array.prototype.map.call(obj, callbackfn);
      return testResult.length === 20 && typeof testResult[1] === "undefined";}
    finally
{      delete Object.prototype[1];}

  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  
