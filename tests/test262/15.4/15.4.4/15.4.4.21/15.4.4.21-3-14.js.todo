  function testcase() 
  {
    var accessed1 = false;
    var accessed2 = false;
    var accessed3 = false;
    function callbackfn1(prevVal, curVal, idx, obj) 
    {
      accessed1 = true;
      return 2;
    }
    function callbackfn2(prevVal, curVal, idx, obj) 
    {
      accessed2 = true;
      return 2;
    }
    function callbackfn3(prevVal, curVal, idx, obj) 
    {
      accessed3 = true;
      return 2;
    }
    var obj1 = {
      0 : 9,
      length : "Infinity"
    };
    var obj2 = {
      0 : 9,
      length : "-Infinity"
    };
    var obj3 = {
      0 : 9,
      length : "+Infinity"
    };
    return Array.prototype.reduce.call(obj1, callbackfn1, 1) === 1 && Array.prototype.reduce.call(obj2, callbackfn2, 1) === 1 && Array.prototype.reduce.call(obj3, callbackfn3, 1) === 1 && ! accessed1 && ! accessed2 && ! accessed3;
  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  