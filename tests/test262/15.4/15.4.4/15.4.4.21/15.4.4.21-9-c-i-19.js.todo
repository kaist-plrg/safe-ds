  function testcase() 
  {
    var testResult = false;
    var initialValue = 0;
    function callbackfn(prevVal, curVal, idx, obj) 
    {
      if (idx === 1)
      {
        testResult = (curVal === undefined);
      }
    }
    try
{      Object.defineProperty(Object.prototype, "1", {
        get : (function () 
        {
          return 1;
        }),
        configurable : true
      });
      var obj = {
        0 : 0,
        2 : 2,
        length : 3
      };
      Object.defineProperty(obj, "1", {
        set : (function () 
        {
          
        }),
        configurable : true
      });
      Array.prototype.reduce.call(obj, callbackfn, initialValue);
      return testResult;}
    finally
{      delete Object.prototype[1];}

  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  