  function testcase() 
  {
    var testResult = false;
    function callbackfn(prevVal, curVal, idx, obj) 
    {
      if (idx === 1)
      {
        testResult = (prevVal === 2 && curVal === 1);
      }
    }
    var obj = {
      0 : 0,
      length : 3
    };
    var preIterVisible = false;
    Object.defineProperty(obj, "1", {
      get : (function () 
      {
        if (preIterVisible)
        {
          return 1;
        }
        else
        {
          return "20";
        }
      }),
      configurable : true
    });
    Object.defineProperty(obj, "2", {
      get : (function () 
      {
        preIterVisible = true;
        return 2;
      }),
      configurable : true
    });
    Array.prototype.reduceRight.call(obj, callbackfn);
    return testResult;
  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  