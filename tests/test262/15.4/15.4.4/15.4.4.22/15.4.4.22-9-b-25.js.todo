  function testcase() 
  {
    var testResult = false;
    function callbackfn(prevVal, curVal, idx, obj) 
    {
      if (idx === 1 && curVal === 1)
      {
        testResult = true;
      }
    }
    var obj = {
      0 : 0,
      1 : 111,
      4 : 10,
      length : 10
    };
    Object.defineProperty(obj, "4", {
      get : (function () 
      {
        delete obj[1];
        return 0;
      }),
      configurable : true
    });
    try
{      Object.prototype[1] = 1;
      Array.prototype.reduceRight.call(obj, callbackfn, "initialValue");
      return testResult;}
    finally
{      delete Object.prototype[1];}

  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  