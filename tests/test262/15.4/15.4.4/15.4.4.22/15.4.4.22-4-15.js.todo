  function testcase() 
  {
    var obj = {
      10 : 10
    };
    var lengthAccessed = false;
    var loopAccessed = false;
    Object.defineProperty(obj, "length", {
      get : (function () 
      {
        lengthAccessed = true;
        return 20;
      }),
      configurable : true
    });
    Object.defineProperty(obj, "0", {
      get : (function () 
      {
        loopAccessed = true;
        return 10;
      }),
      configurable : true
    });
    try
{      Array.prototype.reduceRight.call(obj, undefined);
      return false;}
    catch (ex)
{      return (ex instanceof TypeError) && lengthAccessed && ! loopAccessed;}

  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  