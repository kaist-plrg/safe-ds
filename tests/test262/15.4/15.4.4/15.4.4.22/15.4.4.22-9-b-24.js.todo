  function testcase() 
  {
    var accessed = false;
    var testResult = true;
    function callbackfn(prevVal, curVal, idx, obj) 
    {
      accessed = true;
      if (idx === 1)
      {
        testResult = false;
      }
    }
    var arr = [0, , , ];
    Object.defineProperty(arr, "3", {
      get : (function () 
      {
        delete Array.prototype[1];
        return 0;
      }),
      configurable : true
    });
    try
{      Array.prototype[1] = 1;
      arr.reduceRight(callbackfn, "initialValue");
      return testResult && accessed;}
    finally
{      delete Array.prototype[1];}

  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  