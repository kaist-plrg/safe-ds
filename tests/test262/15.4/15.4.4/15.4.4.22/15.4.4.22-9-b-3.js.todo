  function testcase() 
  {
    var accessed = false;
    var testResult = true;
    function callbackfn(preVal, curVal, idx, obj) 
    {
      accessed = true;
      if (idx === 2)
      {
        testResult = false;
      }
    }
    var obj = {
      2 : "2",
      3 : 10
    };
    Object.defineProperty(obj, "length", {
      get : (function () 
      {
        delete obj[2];
        return 5;
      }),
      configurable : true
    });
    Array.prototype.reduceRight.call(obj, callbackfn, "initialValue");
    return accessed && testResult;
  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  