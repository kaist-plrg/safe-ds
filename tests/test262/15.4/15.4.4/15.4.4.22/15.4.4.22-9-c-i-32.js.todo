  function testcase() 
  {
    var accessed = false;
    function callbackfn(prevVal, curVal, idx, obj) 
    {
      if (idx <= 1)
      {
        accessed = true;
      }
    }
    var obj = {
      0 : 0,
      2 : 2,
      length : 3
    };
    Object.defineProperty(obj, "1", {
      get : (function () 
      {
        throw new RangeError("unhandle exception happened in getter");
      }),
      configurable : true
    });
    try
{      Array.prototype.reduceRight.call(obj, callbackfn, "initialValue");
      return false;}
    catch (ex)
{      return (ex instanceof RangeError) && ! accessed;}

  }
  {
    var __result1 = testcase();
    var __expect1 = true;
  }
  