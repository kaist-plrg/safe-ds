Heap: {
  #Global: {
    "<>Global<>global": <#Global, F, F, F>,
    "<>Global<>true": <true, F, F, F>,
    "BluetoothUUID": <#Global.BluetoothUUID, T, F, T>,
    "Error": <#Error, T, F, T>,
    "BluetoothRemoteGATTService": <#Global.BluetoothRemoteGATTService, T, F, T>,
    "BluetoothRemoteGATTServer": <#Global.BluetoothRemoteGATTServer, T, F, T>,
    "DataView": <#Global.DataView, T, F, T>,
    "BluetoothRemoteGATTCharacteristic": <#Global.BluetoothRemoteGATTCharacteristic, T, F, T>,
    "BluetoothDevice": <#Global.BluetoothDevice, T, F, T>,
    "encodeURIComponent": <#Global.encodeURIComponent, T, F, T>,
    "BluetoothCharacteristicProperties": <#Global.BluetoothCharacteristicProperties, T, F, T>,
    "WebGLRenderingContext": <#Global.WebGLRenderingContext, T, F, T>,
    "Path2D": <#Global.Path2D, T, F, T>,
    "CountQueuingStrategy": <#Global.CountQueuingStrategy, T, F, T>,
    "CanvasPattern": <#Global.CanvasPattern, T, F, T>,
    "CanvasGradient": <#Global.CanvasGradient, T, F, T>,
    "RangeError": <#RangeError, T, F, T>,
    "SpeechSynthesisUtterance": <#Global.SpeechSynthesisUtterance, T, F, T>,
    "WeakMap": <#Global.WeakMap, T, F, T>,
    "SpeechSynthesisEvent": <#Global.SpeechSynthesisEvent, T, F, T>,
    "speechSynthesis": <#Global.speechSynthesis, F, T, T>,
    "webkitSpeechRecognitionEvent": <#Global.webkitSpeechRecognitionEvent, T, F, T>,
    "escape": <#Global.escape, T, F, T>,
    "webkitSpeechRecognitionError": <#Global.webkitSpeechRecognitionError, T, F, T>,
    "ReferenceError": <#ReferenceError, T, F, T>,
    "webkitSpeechRecognition": <#Global.webkitSpeechRecognition, T, F, T>,
    "webkitSpeechGrammarList": <#Global.webkitSpeechGrammarList, T, F, T>,
    "Array": <#Array, T, F, T>,
    "webkitSpeechGrammar": <#Global.webkitSpeechGrammar, T, F, T>,
    "RemotePlayback": <#Global.RemotePlayback, T, F, T>,
    "Uint8Array": <#Global.Uint8Array, T, F, T>,
    "PushSubscriptionOptions": <#Global.PushSubscriptionOptions, T, F, T>,
    "PushSubscription": <#Global.PushSubscription, T, F, T>,
    "PushManager": <#Global.PushManager, T, F, T>,
    "unescape": <#Global.unescape, T, F, T>,
    "PresentationRequest": <#Global.PresentationRequest, T, F, T>,
    "Presentation": <#Global.Presentation, T, F, T>,
    "Int32Array": <#Global.Int32Array, T, F, T>,
    "PresentationConnection": <#Global.PresentationConnection, T, F, T>,
    "Symbol": <#Global.Symbol, T, F, T>,
    "PresentationConnectionCloseEvent": <#Global.PresentationConnectionCloseEvent, T, F, T>,
    "PresentationConnectionAvailableEvent": <#Global.PresentationConnectionAvailableEvent, T, F, T>,
    "undefined": <undefined, F, F, F>,
    "PresentationAvailability": <#Global.PresentationAvailability, T, F, T>,
    "Permissions": <#Global.Permissions, T, F, T>,
    "SyntaxError": <#SyntaxError, T, F, T>,
    "PermissionStatus": <#Global.PermissionStatus, T, F, T>,
    "Notification": <#Global.Notification, T, F, T>,
    "decodeURI": <#Global.decodeURI, T, F, T>,
    "CanvasCaptureMediaStreamTrack": <#Global.CanvasCaptureMediaStreamTrack, T, F, T>,
    "caches": <#Global.caches, F, T, T>,
    "RegExp": <#RegExp, T, F, T>,
    "StorageManager": <#Global.StorageManager, T, F, T>,
    "SiteBoundCredential": <#Global.SiteBoundCredential, T, F, T>,
    "PasswordCredential": <#Global.PasswordCredential, T, F, T>,
    "Math": <#Math, T, F, T>,
    "FederatedCredential": <#Global.FederatedCredential, T, F, T>,
    "EvalError": <#EvalError, T, F, T>,
    "CredentialsContainer": <#Global.CredentialsContainer, T, F, T>,
    "Credential": <#Global.SiteBoundCredential.prototype.[[Prototype]].constructor, T, F, T>,
    "BroadcastChannel": <#Global.BroadcastChannel, T, F, T>,
    "Promise": <#Global.Promise, T, F, T>,
    "SyncManager": <#Global.SyncManager, T, F, T>,
    "webkitRTCPeerConnection": <#Global.webkitRTCPeerConnection, T, F, T>,
    "Float64Array": <#Global.Float64Array, T, F, T>,
    "webkitMediaStream": <#Global.webkitMediaStream, T, F, T>,
    "isFinite": <#Global.isFinite, T, F, T>,
    "WebSocket": <#Global.WebSocket, T, F, T>,
    "WebGLVertexArrayObject": <#Global.WebGLVertexArrayObject, T, F, T>,
    "Int16Array": <#Global.Int16Array, T, F, T>,
    "WebGLUniformLocation": <#Global.WebGLUniformLocation, T, F, T>,
    "WebGLTransformFeedback": <#Global.WebGLTransformFeedback, T, F, T>,
    "WebGLTexture": <#Global.WebGLTexture, T, F, T>,
    "Function": <#Function, T, F, T>,
    "WebGLSync": <#Global.WebGLSync, T, F, T>,
    "NaN": <NaN, F, F, F>,
    "WebGLShaderPrecisionFormat": <#Global.WebGLShaderPrecisionFormat, T, F, T>,
    "WebGLShader": <#Global.WebGLShader, T, F, T>,
    "JSON": <#JSON, T, F, T>,
    "WebGLSampler": <#Global.WebGLSampler, T, F, T>,
    "WebGLRenderbuffer": <#Global.WebGLRenderbuffer, T, F, T>,
    "Set": <#Global.Set, T, F, T>,
    "WebGLQuery": <#Global.WebGLQuery, T, F, T>,
    "WebGLProgram": <#Global.WebGLProgram, T, F, T>,
    "encodeURI": <#Global.encodeURI, T, F, T>,
    "WebGLFramebuffer": <#Global.WebGLFramebuffer, T, F, T>,
    "WebGLContextEvent": <#Global.WebGLContextEvent, T, F, T>,
    "WebGLBuffer": <#Global.WebGLBuffer, T, F, T>,
    "WeakSet": <#Global.WeakSet, T, F, T>,
    "WebGLActiveInfo": <#Global.WebGLActiveInfo, T, F, T>,
    "ArrayBuffer": <#Global.ArrayBuffer, T, F, T>,
    "WebGL2RenderingContext": <#Global.WebGL2RenderingContext, T, F, T>,
    "WaveShaperNode": <#Global.WaveShaperNode, T, F, T>,
    "Uint8ClampedArray": <#Global.Uint8ClampedArray, T, F, T>,
    "TextEncoder": <#Global.TextEncoder, T, F, T>,
    "TextDecoder": <#Global.TextDecoder, T, F, T>,
    "Infinity": <Infinity, F, F, F>,
    "SubtleCrypto": <#Global.SubtleCrypto, T, F, T>,
    "StorageEvent": <#Global.StorageEvent, T, F, T>,
    "Storage": <#Global.Storage, T, F, T>,
    "ByteLengthQueuingStrategy": <#Global.ByteLengthQueuingStrategy, T, F, T>,
    "StereoPannerNode": <#Global.StereoPannerNode, T, F, T>,
    "eval": <#Global.eval, T, F, T>,
    "SourceBufferList": <#Global.SourceBufferList, T, F, T>,
    "SourceBuffer": <#Global.SourceBuffer, T, F, T>,
    "ServiceWorkerRegistration": <#Global.ServiceWorkerRegistration, T, F, T>,
    "decodeURIComponent": <#Global.decodeURIComponent, T, F, T>,
    "ServiceWorkerMessageEvent": <#Global.ServiceWorkerMessageEvent, T, F, T>,
    "ServiceWorkerContainer": <#Global.ServiceWorkerContainer, T, F, T>,
    "Boolean": <#Boolean, T, F, T>,
    "ServiceWorker": <#Global.ServiceWorker, T, F, T>,
    "Uint16Array": <#Global.Uint16Array, T, F, T>,
    "ScriptProcessorNode": <#Global.ScriptProcessorNode, T, F, T>,
    "ScreenOrientation": <#Global.ScreenOrientation, T, F, T>,
    "Response": <#Global.Response, T, F, T>,
    "Date": <#Date, T, F, T>,
    "Request": <#Global.Request, T, F, T>,
    "parseFloat": <#Global.parseFloat, T, F, T>,
    "RTCSessionDescription": <#Global.RTCSessionDescription, T, F, T>,
    "RTCPeerConnectionIceEvent": <#Global.RTCPeerConnectionIceEvent, T, F, T>,
    "URIError": <#URIError, T, F, T>,
    "RTCPeerConnection": <#Global.webkitRTCPeerConnection, T, F, T>,
    "RTCIceCandidate": <#Global.RTCIceCandidate, T, F, T>,
    "Object": <#Object, T, F, T>,
    "RTCDataChannelEvent": <#Global.RTCDataChannelEvent, T, F, T>,
    "RTCDataChannel": <#Global.RTCDataChannel, T, F, T>,
    "TypeError": <#TypeError, T, F, T>,
    "RTCCertificate": <#Global.RTCCertificate, T, F, T>,
    "Plugin": <#Global.Plugin, T, F, T>,
    "PluginArray": <#Global.PluginArray, T, F, T>,
    "Float32Array": <#Global.Float32Array, T, F, T>,
    "PeriodicWave": <#Global.PeriodicWave, T, F, T>,
    "PannerNode": <#Global.PannerNode, T, F, T>,
    "Reflect": <#Global.Reflect, T, F, T>,
    "OscillatorNode": <#Global.OscillatorNode, T, F, T>,
    "OfflineAudioCompletionEvent": <#Global.OfflineAudioCompletionEvent, T, F, T>,
    "Number": <#Number, T, F, T>,
    "MimeType": <#Global.MimeType, T, F, T>,
    "MimeTypeArray": <#Global.MimeTypeArray, T, F, T>,
    "Proxy": <#Global.Proxy, T, F, T>,
    "MediaStreamTrackEvent": <#Global.MediaStreamTrackEvent, T, F, T>,
    "MediaStreamTrack": <#Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].constructor, T, F, T>,
    "parseInt": <#Global.parseInt, T, F, T>,
    "MediaStreamEvent": <#Global.MediaStreamEvent, T, F, T>,
    "MediaStream": <#Global.webkitMediaStream, T, F, T>,
    "Uint32Array": <#Global.Uint32Array, T, F, T>,
    "MediaStreamAudioSourceNode": <#Global.MediaStreamAudioSourceNode, T, F, T>,
    "String": <#String, T, F, T>,
    "MediaStreamAudioDestinationNode": <#Global.MediaStreamAudioDestinationNode, T, F, T>,
    "MediaSource": <#Global.MediaSource, T, F, T>,
    "MediaRecorder": <#Global.MediaRecorder, T, F, T>,
    "Int8Array": <#Global.Int8Array, T, F, T>,
    "MediaKeys": <#Global.MediaKeys, T, F, T>,
    "MediaKeySystemAccess": <#Global.MediaKeySystemAccess, T, F, T>,
    "ReadableStream": <#Global.ReadableStream, T, F, T>,
    "MediaKeyStatusMap": <#Global.MediaKeyStatusMap, T, F, T>,
    "Intl": <#Global.Intl, T, F, T>,
    "MediaKeySession": <#Global.MediaKeySession, T, F, T>,
    "MediaKeyMessageEvent": <#Global.MediaKeyMessageEvent, T, F, T>,
    "MediaEncryptedEvent": <#Global.MediaEncryptedEvent, T, F, T>,
    "isNaN": <#Global.isNaN, T, F, T>,
    "MediaElementAudioSourceNode": <#Global.MediaElementAudioSourceNode, T, F, T>,
    "Map": <#Global.Map, T, F, T>,
    "MediaDevices": <#Global.MediaDevices, T, F, T>,
    "MediaDeviceInfo": <#Global.MediaDeviceInfo, T, F, T>,
    "MIDIPort": <#Global.MIDIPort, T, F, T>,
    "stop": <#Global.stop, T, T, T>,
    "MIDIOutputMap": <#Global.MIDIOutputMap, T, F, T>,
    "MIDIOutput": <#Global.MIDIOutput, T, F, T>,
    "open": <#Global.open, T, T, T>,
    "MIDIMessageEvent": <#Global.MIDIMessageEvent, T, F, T>,
    "alert": <#Global.alert, T, T, T>,
    "MIDIInputMap": <#Global.MIDIInputMap, T, F, T>,
    "MIDIInput": <#Global.MIDIInput, T, F, T>,
    "confirm": <#Global.confirm, T, T, T>,
    "MIDIConnectionEvent": <#Global.MIDIConnectionEvent, T, F, T>,
    "MIDIAccess": <#Global.MIDIAccess, T, F, T>,
    "ImageBitmapRenderingContext": <#Global.ImageBitmapRenderingContext, T, F, T>,
    "prompt": <#Global.prompt, T, T, T>,
    "IIRFilterNode": <#Global.IIRFilterNode, T, F, T>,
    "IDBVersionChangeEvent": <#Global.IDBVersionChangeEvent, T, F, T>,
    "print": <#Global.print, T, T, T>,
    "IDBTransaction": <#Global.IDBTransaction, T, F, T>,
    "requestAnimationFrame": <#Global.requestAnimationFrame, T, T, T>,
    "IDBRequest": <#Global.IDBRequest, T, F, T>,
    "IDBOpenDBRequest": <#Global.IDBOpenDBRequest, T, F, T>,
    "cancelAnimationFrame": <#Global.cancelAnimationFrame, T, T, T>,
    "IDBObjectStore": <#Global.IDBObjectStore, T, F, T>,
    "IDBKeyRange": <#Global.IDBKeyRange, T, F, T>,
    "IDBIndex": <#Global.IDBIndex, T, F, T>,
    "requestIdleCallback": <#Global.requestIdleCallback, T, T, T>,
    "IDBFactory": <#Global.IDBFactory, T, F, T>,
    "IDBDatabase": <#Global.IDBDatabase, T, F, T>,
    "cancelIdleCallback": <#Global.cancelIdleCallback, T, T, T>,
    "IDBCursorWithValue": <#Global.IDBCursorWithValue, T, F, T>,
    "IDBCursor": <#Global.IDBCursorWithValue.prototype.[[Prototype]].constructor, T, F, T>,
    "captureEvents": <#Global.captureEvents, T, T, T>,
    "Headers": <#Global.Headers, T, F, T>,
    "releaseEvents": <#Global.releaseEvents, T, T, T>,
    "GamepadEvent": <#Global.GamepadEvent, T, F, T>,
    "Gamepad": <#Global.Gamepad, T, F, T>,
    "GamepadButton": <#Global.GamepadButton, T, F, T>,
    "getComputedStyle": <#Global.getComputedStyle, T, T, T>,
    "GainNode": <#Global.GainNode, T, F, T>,
    "matchMedia": <#Global.matchMedia, T, T, T>,
    "EventSource": <#Global.EventSource, T, F, T>,
    "DynamicsCompressorNode": <#Global.DynamicsCompressorNode, T, F, T>,
    "moveTo": <#Global.moveTo, T, T, T>,
    "DeviceOrientationEvent": <#Global.DeviceOrientationEvent, T, F, T>,
    "DeviceMotionEvent": <#Global.DeviceMotionEvent, T, F, T>,
    "moveBy": <#Global.moveBy, T, T, T>,
    "DelayNode": <#Global.DelayNode, T, F, T>,
    "DOMError": <#Global.DOMError, T, F, T>,
    "resizeTo": <#Global.resizeTo, T, T, T>,
    "CryptoKey": <#Global.CryptoKey, T, F, T>,
    "Crypto": <#Global.Crypto, T, F, T>,
    "ConvolverNode": <#Global.ConvolverNode, T, F, T>,
    "resizeBy": <#Global.resizeBy, T, T, T>,
    "ConstantSourceNode": <#Global.ConstantSourceNode, T, F, T>,
    "getSelection": <#Global.getSelection, T, T, T>,
    "CloseEvent": <#Global.CloseEvent, T, F, T>,
    "ChannelSplitterNode": <#Global.ChannelSplitterNode, T, F, T>,
    "ChannelMergerNode": <#Global.ChannelMergerNode, T, F, T>,
    "find": <#Global.find, T, T, T>,
    "CanvasRenderingContext2D": <#Global.CanvasRenderingContext2D, T, F, T>,
    "CacheStorage": <#Global.caches.[[Prototype]].constructor, T, F, T>,
    "getMatchedCSSRules": <#Global.getMatchedCSSRules, T, T, T>,
    "Cache": <#Global.Cache, T, F, T>,
    "webkitRequestAnimationFrame": <#Global.webkitRequestAnimationFrame, T, T, T>,
    "BlobEvent": <#Global.BlobEvent, T, F, T>,
    "BiquadFilterNode": <#Global.BiquadFilterNode, T, F, T>,
    "BeforeInstallPromptEvent": <#Global.BeforeInstallPromptEvent, T, F, T>,
    "webkitCancelAnimationFrame": <#Global.webkitCancelAnimationFrame, T, T, T>,
    "BatteryManager": <#Global.BatteryManager, T, F, T>,
    "webkitCancelRequestAnimationFrame": <#Global.webkitCancelRequestAnimationFrame, T, T, T>,
    "BaseAudioContext": <#Global.BaseAudioContext, T, F, T>,
    "AudioProcessingEvent": <#Global.AudioProcessingEvent, T, F, T>,
    "AudioParam": <#Global.AudioParam, T, F, T>,
    "btoa": <#Global.btoa, T, T, T>,
    "AudioNode": <#Global.WaveShaperNode.prototype.[[Prototype]].constructor, T, F, T>,
    "atob": <#Global.atob, T, T, T>,
    "AudioListener": <#Global.AudioListener, T, F, T>,
    "AudioDestinationNode": <#Global.AudioDestinationNode, T, F, T>,
    "AudioBufferSourceNode": <#Global.AudioBufferSourceNode, T, F, T>,
    "setTimeout": <#Global.setTimeout, T, T, T>,
    "AudioBuffer": <#Global.AudioBuffer, T, F, T>,
    "clearTimeout": <#Global.clearTimeout, T, T, T>,
    "AppBannerPromptResult": <#Global.AppBannerPromptResult, T, F, T>,
    "AnalyserNode": <#Global.AnalyserNode, T, F, T>,
    "webkitOfflineAudioContext": <#Global.webkitOfflineAudioContext, T, F, T>,
    "setInterval": <#Global.setInterval, T, T, T>,
    "webkitAudioContext": <#Global.webkitAudioContext, T, F, T>,
    "clearInterval": <#Global.clearInterval, T, T, T>,
    "OfflineAudioContext": <#Global.webkitOfflineAudioContext, T, F, T>,
    "AudioContext": <#Global.webkitAudioContext, T, F, T>,
    "localStorage": <#Global.localStorage, F, T, T>,
    "createImageBitmap": <#Global.createImageBitmap, T, T, T>,
    "sessionStorage": <#Global.sessionStorage, F, T, T>,
    "scroll": <#Global.scroll, T, T, T>,
    "webkitStorageInfo": <#Global.webkitStorageInfo, F, T, T>,
    "webkitIDBTransaction": <#Global.IDBTransaction, T, F, T>,
    "webkitIDBRequest": <#Global.IDBRequest, T, F, T>,
    "scrollTo": <#Global.scrollTo, T, T, T>,
    "webkitIDBObjectStore": <#Global.IDBObjectStore, T, F, T>,
    "webkitIDBKeyRange": <#Global.IDBKeyRange, T, F, T>,
    "scrollBy": <#Global.scrollBy, T, T, T>,
    "webkitIDBIndex": <#Global.IDBIndex, T, F, T>,
    "webkitIDBFactory": <#Global.IDBFactory, T, F, T>,
    "fetch": <#Global.fetch, T, T, T>,
    "webkitIDBDatabase": <#Global.IDBDatabase, T, F, T>,
    "webkitRequestFileSystem": <#Global.webkitRequestFileSystem, T, T, T>,
    "webkitIDBCursor": <#Global.IDBCursorWithValue.prototype.[[Prototype]].constructor, T, F, T>,
    "indexedDB": <#Global.indexedDB, F, T, T>,
    "webkitResolveLocalFileSystemURL": <#Global.webkitResolveLocalFileSystemURL, T, T, T>,
    "webkitIndexedDB": <#Global.indexedDB, F, T, T>,
    "ondeviceorientationabsolute": <null, T, T, T>,
    "openDatabase": <#Global.openDatabase, T, T, T>,
    "ondeviceorientation": <null, T, T, T>,
    "ondevicemotion": <null, T, T, T>,
    "crypto": <#Global.crypto, F, T, T>,
    "postMessage": <#Global.postMessage, T, T, T>,
    "blur": <#Global.blur, T, T, T>,
    "focus": <#Global.focus, T, T, T>,
    "close": <#Global.close, T, T, T>,
    "SVGMPathElement": <#Global.SVGMPathElement, T, F, T>,
    "SVGDiscardElement": <#Global.SVGDiscardElement, T, F, T>,
    "SVGAnimationElement": <#Global.SVGAnimationElement, T, F, T>,
    "XSLTProcessor": <#Global.XSLTProcessor, T, F, T>,
    "SharedWorker": <#Global.SharedWorker, T, F, T>,
    "HTMLSlotElement": <#Global.HTMLSlotElement, T, F, T>,
    "onpointerup": <null, T, T, T>,
    "onpointerover": <null, T, T, T>,
    "onpointerout": <null, T, T, T>,
    "onpointermove": <null, T, T, T>,
    "chrome": <#Global.chrome, T, T, F>,
    "onpointerleave": <null, T, T, T>,
    "onpointerenter": <null, T, T, T>,
    "onpointerdown": <null, T, T, T>,
    "onpointercancel": <null, T, T, T>,
    "console": <#Global.console, T, T, T>,
    "PointerEvent": <#Global.PointerEvent, T, F, T>,
    "PerformanceObserverEntryList": <#Global.PerformanceObserverEntryList, T, F, T>,
    "PerformanceObserver": <#Global.PerformanceObserver, T, F, T>,
    "IntersectionObserverEntry": <#Global.IntersectionObserverEntry, T, F, T>,
    "IntersectionObserver": <#Global.IntersectionObserver, T, F, T>,
    "CustomElementRegistry": <#Global.CustomElementRegistry, T, F, T>,
    "customElements": <#Global.customElements, F, T, T>,
    "onauxclick": <null, T, T, T>,
    "XPathResult": <#Global.XPathResult, T, F, T>,
    "XPathExpression": <#Global.XPathExpression, T, F, T>,
    "i": <189, T, T, F>,
    "XPathEvaluator": <#Global.XPathEvaluator, T, F, T>,
    "XMLSerializer": <#Global.XMLSerializer, T, F, T>,
    "XMLHttpRequestUpload": <#Global.XMLHttpRequestUpload, T, F, T>,
    "XMLHttpRequestEventTarget": <#Global.XMLHttpRequestUpload.prototype.[[Prototype]].constructor, T, F, T>,
    "XMLHttpRequest": <#Global.XMLHttpRequest, T, F, T>,
    "XMLDocument": <#Global.XMLDocument, T, F, T>,
    "Worker": <#Global.Worker, T, F, T>,
    "Window": <#Global.Window, T, F, T>,
    "WheelEvent": <#Global.WheelEvent, T, F, T>,
    "WebKitCSSMatrix": <#Global.WebKitCSSMatrix, T, F, T>,
    "ValidityState": <#Global.ValidityState, T, F, T>,
    "VTTCue": <#Global.VTTCue, T, F, T>,
    "URLSearchParams": <#Global.URLSearchParams, T, F, T>,
    "URL": <#Global.URL, T, F, T>,
    "UIEvent": <#Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]], T, F, T>,
    "TreeWalker": <#Global.TreeWalker, T, F, T>,
    "TransitionEvent": <#Global.TransitionEvent, T, F, T>,
    "TrackEvent": <#Global.TrackEvent, T, F, T>,
    "TouchList": <#Global.TouchList, T, F, T>,
    "TouchEvent": <#Global.TouchEvent, T, F, T>,
    "Touch": <#Global.Touch, T, F, T>,
    "TimeRanges": <#Global.TimeRanges, T, F, T>,
    "TextTrackList": <#Global.TextTrackList, T, F, T>,
    "TextTrackCueList": <#Global.TextTrackCueList, T, F, T>,
    "TextTrackCue": <#Global.VTTCue.prototype.[[Prototype]].constructor, T, F, T>,
    "TextTrack": <#Global.TextTrack, T, F, T>,
    "TextMetrics": <#Global.TextMetrics, T, F, T>,
    "TextEvent": <#Global.TextEvent, T, F, T>,
    "Text": <#Global.Text, T, F, T>,
    "StyleSheetList": <#Global.StyleSheetList, T, F, T>,
    "StyleSheet": <#Global.StyleSheet, T, F, T>,
    "ShadowRoot": <#Global.ShadowRoot, T, F, T>,
    "Selection": <#Global.Selection, T, F, T>,
    "SecurityPolicyViolationEvent": <#Global.SecurityPolicyViolationEvent, T, F, T>,
    "Screen": <#Global.Screen, T, F, T>,
    "SVGViewElement": <#Global.SVGViewElement, T, F, T>,
    "SVGUseElement": <#Global.SVGUseElement, T, F, T>,
    "SVGUnitTypes": <#Global.SVGUnitTypes, T, F, T>,
    "SVGTransformList": <#Global.SVGTransformList, T, F, T>,
    "SVGTransform": <#Global.SVGTransform, T, F, T>,
    "SVGTitleElement": <#Global.SVGTitleElement, T, F, T>,
    "SVGTextPositioningElement": <#Global.SVGTextPositioningElement, T, F, T>,
    "SVGTextPathElement": <#Global.SVGTextPathElement, T, F, T>,
    "SVGTextElement": <#Global.SVGTextElement, T, F, T>,
    "SVGTextContentElement": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].constructor, T, F, T>,
    "SVGTSpanElement": <#Global.SVGTSpanElement, T, F, T>,
    "SVGSymbolElement": <#Global.SVGSymbolElement, T, F, T>,
    "SVGSwitchElement": <#Global.SVGSwitchElement, T, F, T>,
    "SVGStyleElement": <#Global.SVGStyleElement, T, F, T>,
    "SVGStringList": <#Global.SVGStringList, T, F, T>,
    "SVGStopElement": <#Global.SVGStopElement, T, F, T>,
    "SVGSetElement": <#Global.SVGSetElement, T, F, T>,
    "SVGScriptElement": <#Global.SVGScriptElement, T, F, T>,
    "SVGSVGElement": <#Global.SVGSVGElement, T, F, T>,
    "SVGRectElement": <#Global.SVGRectElement, T, F, T>,
    "SVGRect": <#Global.SVGRect, T, F, T>,
    "SVGRadialGradientElement": <#Global.SVGRadialGradientElement, T, F, T>,
    "SVGPreserveAspectRatio": <#Global.SVGPreserveAspectRatio, T, F, T>,
    "SVGPolylineElement": <#Global.SVGPolylineElement, T, F, T>,
    "SVGPolygonElement": <#Global.SVGPolygonElement, T, F, T>,
    "SVGPointList": <#Global.SVGPointList, T, F, T>,
    "SVGPoint": <#Global.SVGPoint, T, F, T>,
    "SVGPatternElement": <#Global.SVGPatternElement, T, F, T>,
    "SVGPathElement": <#Global.SVGPathElement, T, F, T>,
    "SVGNumberList": <#Global.SVGNumberList, T, F, T>,
    "SVGNumber": <#Global.SVGNumber, T, F, T>,
    "SVGMetadataElement": <#Global.SVGMetadataElement, T, F, T>,
    "SVGMatrix": <#Global.SVGMatrix, T, F, T>,
    "SVGMaskElement": <#Global.SVGMaskElement, T, F, T>,
    "SVGMarkerElement": <#Global.SVGMarkerElement, T, F, T>,
    "SVGLinearGradientElement": <#Global.SVGLinearGradientElement, T, F, T>,
    "SVGLineElement": <#Global.SVGLineElement, T, F, T>,
    "SVGLengthList": <#Global.SVGLengthList, T, F, T>,
    "SVGLength": <#Global.SVGLength, T, F, T>,
    "SVGImageElement": <#Global.SVGImageElement, T, F, T>,
    "SVGGraphicsElement": <#Global.SVGUseElement.prototype.[[Prototype]].constructor, T, F, T>,
    "SVGGradientElement": <#Global.SVGRadialGradientElement.prototype.[[Prototype]].constructor, T, F, T>,
    "SVGGeometryElement": <#Global.SVGRectElement.prototype.[[Prototype]].constructor, T, F, T>,
    "SVGGElement": <#Global.SVGGElement, T, F, T>,
    "SVGForeignObjectElement": <#Global.SVGForeignObjectElement, T, F, T>,
    "SVGFilterElement": <#Global.SVGFilterElement, T, F, T>,
    "SVGFETurbulenceElement": <#Global.SVGFETurbulenceElement, T, F, T>,
    "SVGFETileElement": <#Global.SVGFETileElement, T, F, T>,
    "SVGFESpotLightElement": <#Global.SVGFESpotLightElement, T, F, T>,
    "SVGFESpecularLightingElement": <#Global.SVGFESpecularLightingElement, T, F, T>,
    "SVGFEPointLightElement": <#Global.SVGFEPointLightElement, T, F, T>,
    "SVGFEOffsetElement": <#Global.SVGFEOffsetElement, T, F, T>,
    "SVGFEMorphologyElement": <#Global.SVGFEMorphologyElement, T, F, T>,
    "SVGFEMergeNodeElement": <#Global.SVGFEMergeNodeElement, T, F, T>,
    "SVGFEMergeElement": <#Global.SVGFEMergeElement, T, F, T>,
    "SVGFEImageElement": <#Global.SVGFEImageElement, T, F, T>,
    "SVGFEGaussianBlurElement": <#Global.SVGFEGaussianBlurElement, T, F, T>,
    "SVGFEFuncRElement": <#Global.SVGFEFuncRElement, T, F, T>,
    "SVGFEFuncGElement": <#Global.SVGFEFuncGElement, T, F, T>,
    "SVGFEFuncBElement": <#Global.SVGFEFuncBElement, T, F, T>,
    "SVGFEFuncAElement": <#Global.SVGFEFuncAElement, T, F, T>,
    "SVGFEFloodElement": <#Global.SVGFEFloodElement, T, F, T>,
    "SVGFEDropShadowElement": <#Global.SVGFEDropShadowElement, T, F, T>,
    "SVGFEDistantLightElement": <#Global.SVGFEDistantLightElement, T, F, T>,
    "SVGFEDisplacementMapElement": <#Global.SVGFEDisplacementMapElement, T, F, T>,
    "SVGFEDiffuseLightingElement": <#Global.SVGFEDiffuseLightingElement, T, F, T>,
    "SVGFEConvolveMatrixElement": <#Global.SVGFEConvolveMatrixElement, T, F, T>,
    "SVGFECompositeElement": <#Global.SVGFECompositeElement, T, F, T>,
    "SVGFEComponentTransferElement": <#Global.SVGFEComponentTransferElement, T, F, T>,
    "SVGFEColorMatrixElement": <#Global.SVGFEColorMatrixElement, T, F, T>,
    "SVGFEBlendElement": <#Global.SVGFEBlendElement, T, F, T>,
    "SVGEllipseElement": <#Global.SVGEllipseElement, T, F, T>,
    "SVGElement": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor, T, F, T>,
    "SVGDescElement": <#Global.SVGDescElement, T, F, T>,
    "SVGDefsElement": <#Global.SVGDefsElement, T, F, T>,
    "SVGCursorElement": <#Global.SVGCursorElement, T, F, T>,
    "SVGComponentTransferFunctionElement": <#Global.SVGFEFuncRElement.prototype.[[Prototype]].constructor, T, F, T>,
    "SVGClipPathElement": <#Global.SVGClipPathElement, T, F, T>,
    "SVGCircleElement": <#Global.SVGCircleElement, T, F, T>,
    "SVGAnimatedTransformList": <#Global.SVGAnimatedTransformList, T, F, T>,
    "SVGAnimatedString": <#Global.SVGAnimatedString, T, F, T>,
    "SVGAnimatedRect": <#Global.SVGAnimatedRect, T, F, T>,
    "SVGAnimatedPreserveAspectRatio": <#Global.SVGAnimatedPreserveAspectRatio, T, F, T>,
    "SVGAnimatedNumberList": <#Global.SVGAnimatedNumberList, T, F, T>,
    "SVGAnimatedNumber": <#Global.SVGAnimatedNumber, T, F, T>,
    "SVGAnimatedLengthList": <#Global.SVGAnimatedLengthList, T, F, T>,
    "SVGAnimatedLength": <#Global.SVGAnimatedLength, T, F, T>,
    "SVGAnimatedInteger": <#Global.SVGAnimatedInteger, T, F, T>,
    "SVGAnimatedEnumeration": <#Global.SVGAnimatedEnumeration, T, F, T>,
    "SVGAnimatedBoolean": <#Global.SVGAnimatedBoolean, T, F, T>,
    "SVGAnimatedAngle": <#Global.SVGAnimatedAngle, T, F, T>,
    "SVGAnimateTransformElement": <#Global.SVGAnimateTransformElement, T, F, T>,
    "SVGAnimateMotionElement": <#Global.SVGAnimateMotionElement, T, F, T>,
    "SVGAnimateElement": <#Global.SVGAnimateElement, T, F, T>,
    "SVGAngle": <#Global.SVGAngle, T, F, T>,
    "SVGAElement": <#Global.SVGAElement, T, F, T>,
    "Range": <#Global.Range, T, F, T>,
    "RadioNodeList": <#Global.RadioNodeList, T, F, T>,
    "PromiseRejectionEvent": <#Global.PromiseRejectionEvent, T, F, T>,
    "ProgressEvent": <#Global.ProgressEvent, T, F, T>,
    "ProcessingInstruction": <#Global.ProcessingInstruction, T, F, T>,
    "PopStateEvent": <#Global.PopStateEvent, T, F, T>,
    "PerformanceTiming": <#Global.PerformanceTiming, T, F, T>,
    "PerformanceResourceTiming": <#Global.PerformanceResourceTiming, T, F, T>,
    "PerformanceNavigation": <#Global.PerformanceNavigation, T, F, T>,
    "PerformanceMeasure": <#Global.PerformanceMeasure, T, F, T>,
    "PerformanceMark": <#Global.PerformanceMark, T, F, T>,
    "PerformanceEntry": <#Global.PerformanceResourceTiming.prototype.[[Prototype]].constructor, T, F, T>,
    "Performance": <#Global.Performance, T, F, T>,
    "PageTransitionEvent": <#Global.PageTransitionEvent, T, F, T>,
    "NodeList": <#Global.RadioNodeList.prototype.[[Prototype]].constructor, T, F, T>,
    "NodeIterator": <#Global.NodeIterator, T, F, T>,
    "NodeFilter": <#Global.NodeFilter, T, F, T>,
    "Node": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor, T, F, T>,
    "Navigator": <#Global.Navigator, T, F, T>,
    "NamedNodeMap": <#Global.NamedNodeMap, T, F, T>,
    "MutationRecord": <#Global.MutationRecord, T, F, T>,
    "MutationObserver": <#Global.MutationObserver, T, F, T>,
    "MutationEvent": <#Global.MutationEvent, T, F, T>,
    "MouseEvent": <#Global.PointerEvent.prototype.[[Prototype]].constructor, T, F, T>,
    "MessagePort": <#Global.MessagePort, T, F, T>,
    "MessageEvent": <#Global.MessageEvent, T, F, T>,
    "MessageChannel": <#Global.MessageChannel, T, F, T>,
    "MediaQueryListEvent": <#Global.MediaQueryListEvent, T, F, T>,
    "MediaQueryList": <#Global.MediaQueryList, T, F, T>,
    "MediaList": <#Global.MediaList, T, F, T>,
    "MediaError": <#Global.MediaError, T, F, T>,
    "Location": <#Global.Location, T, F, T>,
    "KeyboardEvent": <#Global.KeyboardEvent, T, F, T>,
    "InputDeviceCapabilities": <#Global.InputDeviceCapabilities, T, F, T>,
    "ImageData": <#Global.ImageData, T, F, T>,
    "ImageBitmap": <#Global.ImageBitmap, T, F, T>,
    "IdleDeadline": <#Global.IdleDeadline, T, F, T>,
    "History": <#Global.History, T, F, T>,
    "HashChangeEvent": <#Global.HashChangeEvent, T, F, T>,
    "HTMLVideoElement": <#Global.HTMLVideoElement, T, F, T>,
    "HTMLUnknownElement": <#Global.HTMLUnknownElement, T, F, T>,
    "HTMLUListElement": <#Global.HTMLUListElement, T, F, T>,
    "HTMLTrackElement": <#Global.HTMLTrackElement, T, F, T>,
    "HTMLTitleElement": <#Global.HTMLTitleElement, T, F, T>,
    "HTMLTextAreaElement": <#Global.HTMLTextAreaElement, T, F, T>,
    "HTMLTemplateElement": <#Global.HTMLTemplateElement, T, F, T>,
    "HTMLTableSectionElement": <#Global.HTMLTableSectionElement, T, F, T>,
    "HTMLTableRowElement": <#Global.HTMLTableRowElement, T, F, T>,
    "HTMLTableElement": <#Global.HTMLTableElement, T, F, T>,
    "HTMLTableColElement": <#Global.HTMLTableColElement, T, F, T>,
    "HTMLTableCellElement": <#Global.HTMLTableCellElement, T, F, T>,
    "HTMLTableCaptionElement": <#Global.HTMLTableCaptionElement, T, F, T>,
    "HTMLStyleElement": <#Global.HTMLStyleElement, T, F, T>,
    "HTMLSpanElement": <#Global.HTMLSpanElement, T, F, T>,
    "HTMLSourceElement": <#Global.HTMLSourceElement, T, F, T>,
    "HTMLShadowElement": <#Global.HTMLShadowElement, T, F, T>,
    "HTMLSelectElement": <#Global.HTMLSelectElement, T, F, T>,
    "HTMLScriptElement": <#Global.HTMLScriptElement, T, F, T>,
    "HTMLQuoteElement": <#Global.HTMLQuoteElement, T, F, T>,
    "HTMLProgressElement": <#Global.HTMLProgressElement, T, F, T>,
    "HTMLPreElement": <#Global.HTMLPreElement, T, F, T>,
    "HTMLPictureElement": <#Global.HTMLPictureElement, T, F, T>,
    "HTMLParamElement": <#Global.HTMLParamElement, T, F, T>,
    "HTMLParagraphElement": <#Global.HTMLParagraphElement, T, F, T>,
    "HTMLOutputElement": <#Global.HTMLOutputElement, T, F, T>,
    "HTMLOptionsCollection": <#Global.HTMLOptionsCollection, T, F, T>,
    "Option": <#Global.Option, T, F, T>,
    "HTMLOptionElement": <#Global.Option.prototype.[[Prototype]].constructor, T, F, T>,
    "HTMLOptGroupElement": <#Global.HTMLOptGroupElement, T, F, T>,
    "HTMLObjectElement": <#Global.HTMLObjectElement, T, F, T>,
    "HTMLOListElement": <#Global.HTMLOListElement, T, F, T>,
    "HTMLModElement": <#Global.HTMLModElement, T, F, T>,
    "HTMLMeterElement": <#Global.HTMLMeterElement, T, F, T>,
    "HTMLMetaElement": <#Global.HTMLMetaElement, T, F, T>,
    "HTMLMenuElement": <#Global.HTMLMenuElement, T, F, T>,
    "HTMLMediaElement": <#Global.HTMLVideoElement.prototype.[[Prototype]].constructor, T, F, T>,
    "HTMLMarqueeElement": <#Global.HTMLMarqueeElement, T, F, T>,
    "HTMLMapElement": <#Global.HTMLMapElement, T, F, T>,
    "HTMLLinkElement": <#Global.HTMLLinkElement, T, F, T>,
    "HTMLLegendElement": <#Global.HTMLLegendElement, T, F, T>,
    "HTMLLabelElement": <#Global.HTMLLabelElement, T, F, T>,
    "HTMLLIElement": <#Global.HTMLLIElement, T, F, T>,
    "HTMLKeygenElement": <#Global.HTMLKeygenElement, T, F, T>,
    "HTMLInputElement": <#Global.HTMLInputElement, T, F, T>,
    "Image": <#Global.Image, T, F, T>,
    "HTMLImageElement": <#Global.Image.prototype.[[Prototype]].constructor, T, F, T>,
    "HTMLIFrameElement": <#Global.HTMLIFrameElement, T, F, T>,
    "HTMLHtmlElement": <#Global.HTMLHtmlElement, T, F, T>,
    "HTMLHeadingElement": <#Global.HTMLHeadingElement, T, F, T>,
    "HTMLHeadElement": <#Global.HTMLHeadElement, T, F, T>,
    "HTMLHRElement": <#Global.HTMLHRElement, T, F, T>,
    "HTMLFrameSetElement": <#Global.HTMLFrameSetElement, T, F, T>,
    "HTMLFrameElement": <#Global.HTMLFrameElement, T, F, T>,
    "HTMLFormElement": <#Global.HTMLFormElement, T, F, T>,
    "HTMLFormControlsCollection": <#Global.HTMLFormControlsCollection, T, F, T>,
    "HTMLFontElement": <#Global.HTMLFontElement, T, F, T>,
    "HTMLFieldSetElement": <#Global.HTMLFieldSetElement, T, F, T>,
    "HTMLEmbedElement": <#Global.HTMLEmbedElement, T, F, T>,
    "HTMLElement": <#Global.HTMLSlotElement.prototype.[[Prototype]].constructor, T, F, T>,
    "HTMLDocument": <#Global.HTMLDocument, T, F, T>,
    "HTMLDivElement": <#Global.HTMLDivElement, T, F, T>,
    "HTMLDirectoryElement": <#Global.HTMLDirectoryElement, T, F, T>,
    "HTMLDialogElement": <#Global.HTMLDialogElement, T, F, T>,
    "HTMLDetailsElement": <#Global.HTMLDetailsElement, T, F, T>,
    "HTMLDataListElement": <#Global.HTMLDataListElement, T, F, T>,
    "HTMLDListElement": <#Global.HTMLDListElement, T, F, T>,
    "HTMLContentElement": <#Global.HTMLContentElement, T, F, T>,
    "HTMLCollection": <#Global.HTMLOptionsCollection.prototype.[[Prototype]].constructor, T, F, T>,
    "HTMLCanvasElement": <#Global.HTMLCanvasElement, T, F, T>,
    "HTMLButtonElement": <#Global.HTMLButtonElement, T, F, T>,
    "HTMLBodyElement": <#Global.HTMLBodyElement, T, F, T>,
    "HTMLBaseElement": <#Global.HTMLBaseElement, T, F, T>,
    "HTMLBRElement": <#Global.HTMLBRElement, T, F, T>,
    "Audio": <#Global.Audio, T, F, T>,
    "HTMLAudioElement": <#Global.Audio.prototype.[[Prototype]].constructor, T, F, T>,
    "HTMLAreaElement": <#Global.HTMLAreaElement, T, F, T>,
    "HTMLAnchorElement": <#Global.HTMLAnchorElement, T, F, T>,
    "HTMLAllCollection": <#Global.HTMLAllCollection, T, F, T>,
    "FormData": <#Global.FormData, T, F, T>,
    "FontFace": <#Global.FontFace, T, F, T>,
    "FocusEvent": <#Global.FocusEvent, T, F, T>,
    "FileReader": <#Global.FileReader, T, F, T>,
    "FileList": <#Global.FileList, T, F, T>,
    "File": <#Global.File, T, F, T>,
    "EventTarget": <#Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor, T, F, T>,
    "Event": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor, T, F, T>,
    "ErrorEvent": <#Global.ErrorEvent, T, F, T>,
    "Element": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]], T, F, T>,
    "DragEvent": <#Global.DragEvent, T, F, T>,
    "DocumentType": <#Global.DocumentType, T, F, T>,
    "DocumentFragment": <#Global.ShadowRoot.prototype.[[Prototype]].constructor, T, F, T>,
    "Document": <#Document, T, F, T>,
    "DataTransferItemList": <#Global.DataTransferItemList, T, F, T>,
    "DataTransferItem": <#Global.DataTransferItem, T, F, T>,
    "DataTransfer": <#Global.DataTransfer, T, F, T>,
    "DOMTokenList": <#Global.DOMTokenList, T, F, T>,
    "DOMStringMap": <#Global.DOMStringMap, T, F, T>,
    "DOMStringList": <#Global.DOMStringList, T, F, T>,
    "DOMParser": <#Global.DOMParser, T, F, T>,
    "DOMImplementation": <#Global.DOMImplementation, T, F, T>,
    "DOMException": <#Global.DOMException, T, F, T>,
    "CustomEvent": <#Global.CustomEvent, T, F, T>,
    "CompositionEvent": <#Global.CompositionEvent, T, F, T>,
    "Comment": <#Global.Comment, T, F, T>,
    "ClipboardEvent": <#Global.ClipboardEvent, T, F, T>,
    "ClientRectList": <#Global.ClientRectList, T, F, T>,
    "ClientRect": <#Global.ClientRect, T, F, T>,
    "CharacterData": <#Global.Text.prototype.[[Prototype]].constructor, T, F, T>,
    "CSSViewportRule": <#Global.CSSViewportRule, T, F, T>,
    "CSSSupportsRule": <#Global.CSSSupportsRule, T, F, T>,
    "CSSStyleSheet": <#Global.CSSStyleSheet, T, F, T>,
    "CSSStyleRule": <#Global.CSSStyleRule, T, F, T>,
    "CSSStyleDeclaration": <#Global.CSSStyleDeclaration, T, F, T>,
    "CSSRuleList": <#Global.CSSRuleList, T, F, T>,
    "CSSRule": <#Global.CSSViewportRule.prototype.[[Prototype]].constructor, T, F, T>,
    "CSSPageRule": <#Global.CSSPageRule, T, F, T>,
    "CSSNamespaceRule": <#Global.CSSNamespaceRule, T, F, T>,
    "CSSMediaRule": <#Global.CSSMediaRule, T, F, T>,
    "CSSKeyframesRule": <#Global.CSSKeyframesRule, T, F, T>,
    "CSSKeyframeRule": <#Global.CSSKeyframeRule, T, F, T>,
    "CSSImportRule": <#Global.CSSImportRule, T, F, T>,
    "CSSGroupingRule": <#Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]], T, F, T>,
    "CSSFontFaceRule": <#Global.CSSFontFaceRule, T, F, T>,
    "CSS": <#Global.CSS, T, F, T>,
    "CSSConditionRule": <#Global.CSSSupportsRule.prototype.[[Prototype]].constructor, T, F, T>,
    "CDATASection": <#Global.CDATASection, T, F, T>,
    "Blob": <#Global.File.prototype.[[Prototype]].constructor, T, F, T>,
    "BeforeUnloadEvent": <#Global.BeforeUnloadEvent, T, F, T>,
    "BarProp": <#Global.BarProp, T, F, T>,
    "Attr": <#Global.Attr, T, F, T>,
    "ApplicationCacheErrorEvent": <#Global.ApplicationCacheErrorEvent, T, F, T>,
    "ApplicationCache": <#Global.ApplicationCache, T, F, T>,
    "AnimationEvent": <#Global.AnimationEvent, T, F, T>,
    "performance": <#Global.performance, T, T, T>,
    "onunload": <null, T, T, T>,
    "onunhandledrejection": <null, T, T, T>,
    "onstorage": <null, T, T, T>,
    "onrejectionhandled": <null, T, T, T>,
    "onpopstate": <null, T, T, T>,
    "onpageshow": <null, T, T, T>,
    "onpagehide": <null, T, T, T>,
    "ononline": <null, T, T, T>,
    "onoffline": <null, T, T, T>,
    "onmessage": <null, T, T, T>,
    "onlanguagechange": <null, T, T, T>,
    "onhashchange": <null, T, T, T>,
    "onbeforeunload": <null, T, T, T>,
    "onwaiting": <null, T, T, T>,
    "onvolumechange": <null, T, T, T>,
    "ontoggle": <null, T, T, T>,
    "ontimeupdate": <null, T, T, T>,
    "onsuspend": <null, T, T, T>,
    "onsubmit": <null, T, T, T>,
    "onstalled": <null, T, T, T>,
    "onshow": <null, T, T, T>,
    "onselect": <null, T, T, T>,
    "onseeking": <null, T, T, T>,
    "onseeked": <null, T, T, T>,
    "onscroll": <null, T, T, T>,
    "onresize": <null, T, T, T>,
    "onreset": <null, T, T, T>,
    "onratechange": <null, T, T, T>,
    "onprogress": <null, T, T, T>,
    "onplaying": <null, T, T, T>,
    "onplay": <null, T, T, T>,
    "onpause": <null, T, T, T>,
    "onmousewheel": <null, T, T, T>,
    "onmouseup": <null, T, T, T>,
    "onmouseover": <null, T, T, T>,
    "onmouseout": <null, T, T, T>,
    "onmousemove": <null, T, T, T>,
    "onmouseleave": <null, T, T, T>,
    "onmouseenter": <null, T, T, T>,
    "onmousedown": <null, T, T, T>,
    "onloadstart": <null, T, T, T>,
    "onloadedmetadata": <null, T, T, T>,
    "onloadeddata": <null, T, T, T>,
    "onload": <null, T, T, T>,
    "onkeyup": <null, T, T, T>,
    "onkeypress": <null, T, T, T>,
    "onkeydown": <null, T, T, T>,
    "oninvalid": <null, T, T, T>,
    "oninput": <null, T, T, T>,
    "onfocus": <null, T, T, T>,
    "onerror": <null, T, T, T>,
    "onended": <null, T, T, T>,
    "onemptied": <null, T, T, T>,
    "ondurationchange": <null, T, T, T>,
    "ondrop": <null, T, T, T>,
    "ondragstart": <null, T, T, T>,
    "ondragover": <null, T, T, T>,
    "ondragleave": <null, T, T, T>,
    "ondragenter": <null, T, T, T>,
    "ondragend": <null, T, T, T>,
    "ondrag": <null, T, T, T>,
    "ondblclick": <null, T, T, T>,
    "oncuechange": <null, T, T, T>,
    "oncontextmenu": <null, T, T, T>,
    "onclose": <null, T, T, T>,
    "onclick": <null, T, T, T>,
    "onchange": <null, T, T, T>,
    "oncanplaythrough": <null, T, T, T>,
    "oncanplay": <null, T, T, T>,
    "oncancel": <null, T, T, T>,
    "onblur": <null, T, T, T>,
    "onabort": <null, T, T, T>,
    "isSecureContext": <"true", F, T, T>,
    "onwheel": <null, T, T, T>,
    "onwebkittransitionend": <null, T, T, T>,
    "onwebkitanimationstart": <null, T, T, T>,
    "onwebkitanimationiteration": <null, T, T, T>,
    "onwebkitanimationend": <null, T, T, T>,
    "ontransitionend": <null, T, T, T>,
    "onsearch": <null, T, T, T>,
    "onanimationstart": <null, T, T, T>,
    "onanimationiteration": <null, T, T, T>,
    "onanimationend": <null, T, T, T>,
    "WebKitMutationObserver": <#Global.MutationObserver, T, F, T>,
    "webkitURL": <#Global.URL, T, F, T>,
    "WebKitAnimationEvent": <#Global.AnimationEvent, T, F, T>,
    "WebKitTransitionEvent": <#Global.TransitionEvent, T, F, T>,
    "styleMedia": <#Global.styleMedia, F, T, T>,
    "defaultstatus": <"", T, T, T>,
    "defaultStatus": <"", T, T, T>,
    "screenTop": <23, T, T, T>,
    "screenLeft": <0, T, T, T>,
    "offscreenBuffering": <"true", T, F, T>,
    "event": <undefined, T, F, T>,
    "clientInformation": <#Global.clientInformation, T, T, T>,
    "devicePixelRatio": <2, T, T, T>,
    "outerHeight": <947, T, T, T>,
    "outerWidth": <1680, T, T, T>,
    "screenY": <23, T, T, T>,
    "screenX": <0, T, T, T>,
    "pageYOffset": <0, T, T, T>,
    "scrollY": <0, T, T, T>,
    "pageXOffset": <0, T, T, T>,
    "scrollX": <0, T, T, T>,
    "innerHeight": <806, T, T, T>,
    "innerWidth": <1680, T, T, T>,
    "screen": <#Global.screen, T, T, T>,
    "external": <#Global.external, T, T, T>,
    "applicationCache": <#Global.applicationCache, F, T, T>,
    "navigator": <#Global.clientInformation, F, T, T>,
    "frameElement": <null, F, T, T>,
    "parent": <#Global, T, T, T>,
    "opener": <null, T, T, T>,
    "top": <#Global, F, T, F>,
    "length": <0, T, T, T>,
    "frames": <#Global, T, T, T>,
    "closed": <"false", F, T, T>,
    "status": <"", T, T, T>,
    "toolbar": <#Global.toolbar, T, T, T>,
    "statusbar": <#Global.statusbar, T, T, T>,
    "scrollbars": <#Global.scrollbars, T, T, T>,
    "personalbar": <#Global.personalbar, T, T, T>,
    "menubar": <#Global.menubar, T, T, T>,
    "locationbar": <#Global.locationbar, T, T, T>,
    "history": <#Global.history, F, T, T>,
    "location": <#Global.location, T, T, F>,
    "name": <"", T, T, T>,
    "self": <#Global, T, T, T>,
    "window": <#Global, F, T, F>,
    "document": <#Global.document, T, T, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Window.prototype,
    [[Class]]: "Object"
  },
  #Global.BluetoothUUID: {
    "length": <0, F, F, T>,
    "name": <"BluetoothUUID", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BluetoothUUID.prototype, F, F, F>,
    "getService": <#Global.BluetoothUUID.getService, T, T, T>,
    "getCharacteristic": <#Global.BluetoothUUID.getCharacteristic, T, T, T>,
    "getDescriptor": <#Global.BluetoothUUID.getDescriptor, T, T, T>,
    "canonicalUUID": <#Global.BluetoothUUID.canonicalUUID, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BluetoothUUID.prototype: {
    "constructor": <#Global.BluetoothUUID, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.BluetoothUUID.getService: {
    "length": <1, F, F, T>,
    "name": <"getService", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothUUID.getCharacteristic: {
    "length": <1, F, F, T>,
    "name": <"getCharacteristic", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothUUID.getDescriptor: {
    "length": <1, F, F, T>,
    "name": <"getDescriptor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothUUID.canonicalUUID: {
    "length": <1, F, F, T>,
    "name": <"canonicalUUID", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTService: {
    "length": <0, F, F, T>,
    "name": <"BluetoothRemoteGATTService", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BluetoothRemoteGATTService.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTService.prototype: {
    "uuid": <undefined, T, T, T>,
    "isPrimary": <undefined, T, T, T>,
    "device": <undefined, T, T, T>,
    "getCharacteristic": <#Global.BluetoothRemoteGATTService.prototype.getCharacteristic, T, T, T>,
    "getCharacteristics": <#Global.BluetoothRemoteGATTService.prototype.getCharacteristics, T, T, T>,
    "constructor": <#Global.BluetoothRemoteGATTService, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.BluetoothRemoteGATTService.prototype.getCharacteristic: {
    "length": <1, F, F, T>,
    "name": <"getCharacteristic", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTService.prototype.getCharacteristics: {
    "length": <0, F, F, T>,
    "name": <"getCharacteristics", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTServer: {
    "length": <0, F, F, T>,
    "name": <"BluetoothRemoteGATTServer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BluetoothRemoteGATTServer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTServer.prototype: {
    "device": <undefined, T, T, T>,
    "connected": <undefined, T, T, T>,
    "connect": <#Global.BluetoothRemoteGATTServer.prototype.connect, T, T, T>,
    "disconnect": <#Global.BluetoothRemoteGATTServer.prototype.disconnect, T, T, T>,
    "getPrimaryService": <#Global.BluetoothRemoteGATTServer.prototype.getPrimaryService, T, T, T>,
    "getPrimaryServices": <#Global.BluetoothRemoteGATTServer.prototype.getPrimaryServices, T, T, T>,
    "constructor": <#Global.BluetoothRemoteGATTServer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.BluetoothRemoteGATTServer.prototype.connect: {
    "length": <0, F, F, T>,
    "name": <"connect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTServer.prototype.disconnect: {
    "length": <0, F, F, T>,
    "name": <"disconnect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTServer.prototype.getPrimaryService: {
    "length": <1, F, F, T>,
    "name": <"getPrimaryService", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTServer.prototype.getPrimaryServices: {
    "length": <0, F, F, T>,
    "name": <"getPrimaryServices", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView: {
    "length": <3, F, F, T>,
    "name": <"DataView", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DataView.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype: {
    "constructor": <#Global.DataView, T, F, T>,
    "buffer": <undefined, T, F, T>,
    "byteLength": <undefined, T, F, T>,
    "byteOffset": <undefined, T, F, T>,
    "getInt8": <#Global.DataView.prototype.getInt8, T, F, T>,
    "setInt8": <#Global.DataView.prototype.setInt8, T, F, T>,
    "getUint8": <#Global.DataView.prototype.getUint8, T, F, T>,
    "setUint8": <#Global.DataView.prototype.setUint8, T, F, T>,
    "getInt16": <#Global.DataView.prototype.getInt16, T, F, T>,
    "setInt16": <#Global.DataView.prototype.setInt16, T, F, T>,
    "getUint16": <#Global.DataView.prototype.getUint16, T, F, T>,
    "setUint16": <#Global.DataView.prototype.setUint16, T, F, T>,
    "getInt32": <#Global.DataView.prototype.getInt32, T, F, T>,
    "setInt32": <#Global.DataView.prototype.setInt32, T, F, T>,
    "getUint32": <#Global.DataView.prototype.getUint32, T, F, T>,
    "setUint32": <#Global.DataView.prototype.setUint32, T, F, T>,
    "getFloat32": <#Global.DataView.prototype.getFloat32, T, F, T>,
    "setFloat32": <#Global.DataView.prototype.setFloat32, T, F, T>,
    "getFloat64": <#Global.DataView.prototype.getFloat64, T, F, T>,
    "setFloat64": <#Global.DataView.prototype.setFloat64, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DataView.prototype.getInt8: {
    "length": <1, F, F, T>,
    "name": <"getInt8", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setInt8: {
    "length": <2, F, F, T>,
    "name": <"setInt8", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.getUint8: {
    "length": <1, F, F, T>,
    "name": <"getUint8", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setUint8: {
    "length": <2, F, F, T>,
    "name": <"setUint8", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.getInt16: {
    "length": <1, F, F, T>,
    "name": <"getInt16", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setInt16: {
    "length": <2, F, F, T>,
    "name": <"setInt16", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.getUint16: {
    "length": <1, F, F, T>,
    "name": <"getUint16", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setUint16: {
    "length": <2, F, F, T>,
    "name": <"setUint16", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.getInt32: {
    "length": <1, F, F, T>,
    "name": <"getInt32", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setInt32: {
    "length": <2, F, F, T>,
    "name": <"setInt32", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.getUint32: {
    "length": <1, F, F, T>,
    "name": <"getUint32", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setUint32: {
    "length": <2, F, F, T>,
    "name": <"setUint32", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.getFloat32: {
    "length": <1, F, F, T>,
    "name": <"getFloat32", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setFloat32: {
    "length": <2, F, F, T>,
    "name": <"setFloat32", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.getFloat64: {
    "length": <1, F, F, T>,
    "name": <"getFloat64", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataView.prototype.setFloat64: {
    "length": <2, F, F, T>,
    "name": <"setFloat64", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic: {
    "length": <0, F, F, T>,
    "name": <"BluetoothRemoteGATTCharacteristic", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BluetoothRemoteGATTCharacteristic.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype: {
    "service": <undefined, T, T, T>,
    "uuid": <undefined, T, T, T>,
    "properties": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "oncharacteristicvaluechanged": <undefined, T, T, T>,
    "readValue": <#Global.BluetoothRemoteGATTCharacteristic.prototype.readValue, T, T, T>,
    "writeValue": <#Global.BluetoothRemoteGATTCharacteristic.prototype.writeValue, T, T, T>,
    "startNotifications": <#Global.BluetoothRemoteGATTCharacteristic.prototype.startNotifications, T, T, T>,
    "stopNotifications": <#Global.BluetoothRemoteGATTCharacteristic.prototype.stopNotifications, T, T, T>,
    "constructor": <#Global.BluetoothRemoteGATTCharacteristic, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.readValue: {
    "length": <0, F, F, T>,
    "name": <"readValue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.writeValue: {
    "length": <1, F, F, T>,
    "name": <"writeValue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.startNotifications: {
    "length": <0, F, F, T>,
    "name": <"startNotifications", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.stopNotifications: {
    "length": <0, F, F, T>,
    "name": <"stopNotifications", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]]: {
    "addEventListener": <#Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].addEventListener, T, T, T>,
    "removeEventListener": <#Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].removeEventListener, T, T, T>,
    "dispatchEvent": <#Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].dispatchEvent, T, T, T>,
    "constructor": <#Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].addEventListener: {
    "length": <2, F, F, T>,
    "name": <"addEventListener", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].removeEventListener: {
    "length": <2, F, F, T>,
    "name": <"removeEventListener", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].dispatchEvent: {
    "length": <1, F, F, T>,
    "name": <"dispatchEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"EventTarget", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BluetoothDevice: {
    "length": <0, F, F, T>,
    "name": <"BluetoothDevice", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BluetoothDevice.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BluetoothDevice.prototype: {
    "id": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "gatt": <undefined, T, T, T>,
    "ongattserverdisconnected": <undefined, T, T, T>,
    "constructor": <#Global.BluetoothDevice, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BluetoothCharacteristicProperties: {
    "length": <0, F, F, T>,
    "name": <"BluetoothCharacteristicProperties", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BluetoothCharacteristicProperties.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BluetoothCharacteristicProperties.prototype: {
    "broadcast": <undefined, T, T, T>,
    "read": <undefined, T, T, T>,
    "writeWithoutResponse": <undefined, T, T, T>,
    "write": <undefined, T, T, T>,
    "notify": <undefined, T, T, T>,
    "indicate": <undefined, T, T, T>,
    "authenticatedSignedWrites": <undefined, T, T, T>,
    "reliableWrite": <undefined, T, T, T>,
    "writableAuxiliaries": <undefined, T, T, T>,
    "constructor": <#Global.BluetoothCharacteristicProperties, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLRenderingContext: {
    "length": <0, F, F, T>,
    "name": <"WebGLRenderingContext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLRenderingContext.prototype, F, F, F>,
    "DEPTH_BUFFER_BIT": <256, F, T, F>,
    "STENCIL_BUFFER_BIT": <1024, F, T, F>,
    "COLOR_BUFFER_BIT": <16384, F, T, F>,
    "POINTS": <0, F, T, F>,
    "LINES": <1, F, T, F>,
    "LINE_LOOP": <2, F, T, F>,
    "LINE_STRIP": <3, F, T, F>,
    "TRIANGLES": <4, F, T, F>,
    "TRIANGLE_STRIP": <5, F, T, F>,
    "TRIANGLE_FAN": <6, F, T, F>,
    "ZERO": <0, F, T, F>,
    "ONE": <1, F, T, F>,
    "SRC_COLOR": <768, F, T, F>,
    "ONE_MINUS_SRC_COLOR": <769, F, T, F>,
    "SRC_ALPHA": <770, F, T, F>,
    "ONE_MINUS_SRC_ALPHA": <771, F, T, F>,
    "DST_ALPHA": <772, F, T, F>,
    "ONE_MINUS_DST_ALPHA": <773, F, T, F>,
    "DST_COLOR": <774, F, T, F>,
    "ONE_MINUS_DST_COLOR": <775, F, T, F>,
    "SRC_ALPHA_SATURATE": <776, F, T, F>,
    "FUNC_ADD": <32774, F, T, F>,
    "BLEND_EQUATION": <32777, F, T, F>,
    "BLEND_EQUATION_RGB": <32777, F, T, F>,
    "BLEND_EQUATION_ALPHA": <34877, F, T, F>,
    "FUNC_SUBTRACT": <32778, F, T, F>,
    "FUNC_REVERSE_SUBTRACT": <32779, F, T, F>,
    "BLEND_DST_RGB": <32968, F, T, F>,
    "BLEND_SRC_RGB": <32969, F, T, F>,
    "BLEND_DST_ALPHA": <32970, F, T, F>,
    "BLEND_SRC_ALPHA": <32971, F, T, F>,
    "CONSTANT_COLOR": <32769, F, T, F>,
    "ONE_MINUS_CONSTANT_COLOR": <32770, F, T, F>,
    "CONSTANT_ALPHA": <32771, F, T, F>,
    "ONE_MINUS_CONSTANT_ALPHA": <32772, F, T, F>,
    "BLEND_COLOR": <32773, F, T, F>,
    "ARRAY_BUFFER": <34962, F, T, F>,
    "ELEMENT_ARRAY_BUFFER": <34963, F, T, F>,
    "ARRAY_BUFFER_BINDING": <34964, F, T, F>,
    "ELEMENT_ARRAY_BUFFER_BINDING": <34965, F, T, F>,
    "STREAM_DRAW": <35040, F, T, F>,
    "STATIC_DRAW": <35044, F, T, F>,
    "DYNAMIC_DRAW": <35048, F, T, F>,
    "BUFFER_SIZE": <34660, F, T, F>,
    "BUFFER_USAGE": <34661, F, T, F>,
    "CURRENT_VERTEX_ATTRIB": <34342, F, T, F>,
    "FRONT": <1028, F, T, F>,
    "BACK": <1029, F, T, F>,
    "FRONT_AND_BACK": <1032, F, T, F>,
    "TEXTURE_2D": <3553, F, T, F>,
    "CULL_FACE": <2884, F, T, F>,
    "BLEND": <3042, F, T, F>,
    "DITHER": <3024, F, T, F>,
    "STENCIL_TEST": <2960, F, T, F>,
    "DEPTH_TEST": <2929, F, T, F>,
    "SCISSOR_TEST": <3089, F, T, F>,
    "POLYGON_OFFSET_FILL": <32823, F, T, F>,
    "SAMPLE_ALPHA_TO_COVERAGE": <32926, F, T, F>,
    "SAMPLE_COVERAGE": <32928, F, T, F>,
    "NO_ERROR": <0, F, T, F>,
    "INVALID_ENUM": <1280, F, T, F>,
    "INVALID_VALUE": <1281, F, T, F>,
    "INVALID_OPERATION": <1282, F, T, F>,
    "OUT_OF_MEMORY": <1285, F, T, F>,
    "CW": <2304, F, T, F>,
    "CCW": <2305, F, T, F>,
    "LINE_WIDTH": <2849, F, T, F>,
    "ALIASED_POINT_SIZE_RANGE": <33901, F, T, F>,
    "ALIASED_LINE_WIDTH_RANGE": <33902, F, T, F>,
    "CULL_FACE_MODE": <2885, F, T, F>,
    "FRONT_FACE": <2886, F, T, F>,
    "DEPTH_RANGE": <2928, F, T, F>,
    "DEPTH_WRITEMASK": <2930, F, T, F>,
    "DEPTH_CLEAR_VALUE": <2931, F, T, F>,
    "DEPTH_FUNC": <2932, F, T, F>,
    "STENCIL_CLEAR_VALUE": <2961, F, T, F>,
    "STENCIL_FUNC": <2962, F, T, F>,
    "STENCIL_FAIL": <2964, F, T, F>,
    "STENCIL_PASS_DEPTH_FAIL": <2965, F, T, F>,
    "STENCIL_PASS_DEPTH_PASS": <2966, F, T, F>,
    "STENCIL_REF": <2967, F, T, F>,
    "STENCIL_VALUE_MASK": <2963, F, T, F>,
    "STENCIL_WRITEMASK": <2968, F, T, F>,
    "STENCIL_BACK_FUNC": <34816, F, T, F>,
    "STENCIL_BACK_FAIL": <34817, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_FAIL": <34818, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_PASS": <34819, F, T, F>,
    "STENCIL_BACK_REF": <36003, F, T, F>,
    "STENCIL_BACK_VALUE_MASK": <36004, F, T, F>,
    "STENCIL_BACK_WRITEMASK": <36005, F, T, F>,
    "VIEWPORT": <2978, F, T, F>,
    "SCISSOR_BOX": <3088, F, T, F>,
    "COLOR_CLEAR_VALUE": <3106, F, T, F>,
    "COLOR_WRITEMASK": <3107, F, T, F>,
    "UNPACK_ALIGNMENT": <3317, F, T, F>,
    "PACK_ALIGNMENT": <3333, F, T, F>,
    "MAX_TEXTURE_SIZE": <3379, F, T, F>,
    "MAX_VIEWPORT_DIMS": <3386, F, T, F>,
    "SUBPIXEL_BITS": <3408, F, T, F>,
    "RED_BITS": <3410, F, T, F>,
    "GREEN_BITS": <3411, F, T, F>,
    "BLUE_BITS": <3412, F, T, F>,
    "ALPHA_BITS": <3413, F, T, F>,
    "DEPTH_BITS": <3414, F, T, F>,
    "STENCIL_BITS": <3415, F, T, F>,
    "POLYGON_OFFSET_UNITS": <10752, F, T, F>,
    "POLYGON_OFFSET_FACTOR": <32824, F, T, F>,
    "TEXTURE_BINDING_2D": <32873, F, T, F>,
    "SAMPLE_BUFFERS": <32936, F, T, F>,
    "SAMPLES": <32937, F, T, F>,
    "SAMPLE_COVERAGE_VALUE": <32938, F, T, F>,
    "SAMPLE_COVERAGE_INVERT": <32939, F, T, F>,
    "COMPRESSED_TEXTURE_FORMATS": <34467, F, T, F>,
    "DONT_CARE": <4352, F, T, F>,
    "FASTEST": <4353, F, T, F>,
    "NICEST": <4354, F, T, F>,
    "GENERATE_MIPMAP_HINT": <33170, F, T, F>,
    "BYTE": <5120, F, T, F>,
    "UNSIGNED_BYTE": <5121, F, T, F>,
    "SHORT": <5122, F, T, F>,
    "UNSIGNED_SHORT": <5123, F, T, F>,
    "INT": <5124, F, T, F>,
    "UNSIGNED_INT": <5125, F, T, F>,
    "FLOAT": <5126, F, T, F>,
    "DEPTH_COMPONENT": <6402, F, T, F>,
    "ALPHA": <6406, F, T, F>,
    "RGB": <6407, F, T, F>,
    "RGBA": <6408, F, T, F>,
    "LUMINANCE": <6409, F, T, F>,
    "LUMINANCE_ALPHA": <6410, F, T, F>,
    "UNSIGNED_SHORT_4_4_4_4": <32819, F, T, F>,
    "UNSIGNED_SHORT_5_5_5_1": <32820, F, T, F>,
    "UNSIGNED_SHORT_5_6_5": <33635, F, T, F>,
    "FRAGMENT_SHADER": <35632, F, T, F>,
    "VERTEX_SHADER": <35633, F, T, F>,
    "MAX_VERTEX_ATTRIBS": <34921, F, T, F>,
    "MAX_VERTEX_UNIFORM_VECTORS": <36347, F, T, F>,
    "MAX_VARYING_VECTORS": <36348, F, T, F>,
    "MAX_COMBINED_TEXTURE_IMAGE_UNITS": <35661, F, T, F>,
    "MAX_VERTEX_TEXTURE_IMAGE_UNITS": <35660, F, T, F>,
    "MAX_TEXTURE_IMAGE_UNITS": <34930, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_VECTORS": <36349, F, T, F>,
    "SHADER_TYPE": <35663, F, T, F>,
    "DELETE_STATUS": <35712, F, T, F>,
    "LINK_STATUS": <35714, F, T, F>,
    "VALIDATE_STATUS": <35715, F, T, F>,
    "ATTACHED_SHADERS": <35717, F, T, F>,
    "ACTIVE_UNIFORMS": <35718, F, T, F>,
    "ACTIVE_ATTRIBUTES": <35721, F, T, F>,
    "SHADING_LANGUAGE_VERSION": <35724, F, T, F>,
    "CURRENT_PROGRAM": <35725, F, T, F>,
    "NEVER": <512, F, T, F>,
    "LESS": <513, F, T, F>,
    "EQUAL": <514, F, T, F>,
    "LEQUAL": <515, F, T, F>,
    "GREATER": <516, F, T, F>,
    "NOTEQUAL": <517, F, T, F>,
    "GEQUAL": <518, F, T, F>,
    "ALWAYS": <519, F, T, F>,
    "KEEP": <7680, F, T, F>,
    "REPLACE": <7681, F, T, F>,
    "INCR": <7682, F, T, F>,
    "DECR": <7683, F, T, F>,
    "INVERT": <5386, F, T, F>,
    "INCR_WRAP": <34055, F, T, F>,
    "DECR_WRAP": <34056, F, T, F>,
    "VENDOR": <7936, F, T, F>,
    "RENDERER": <7937, F, T, F>,
    "VERSION": <7938, F, T, F>,
    "NEAREST": <9728, F, T, F>,
    "LINEAR": <9729, F, T, F>,
    "NEAREST_MIPMAP_NEAREST": <9984, F, T, F>,
    "LINEAR_MIPMAP_NEAREST": <9985, F, T, F>,
    "NEAREST_MIPMAP_LINEAR": <9986, F, T, F>,
    "LINEAR_MIPMAP_LINEAR": <9987, F, T, F>,
    "TEXTURE_MAG_FILTER": <10240, F, T, F>,
    "TEXTURE_MIN_FILTER": <10241, F, T, F>,
    "TEXTURE_WRAP_S": <10242, F, T, F>,
    "TEXTURE_WRAP_T": <10243, F, T, F>,
    "TEXTURE": <5890, F, T, F>,
    "TEXTURE_CUBE_MAP": <34067, F, T, F>,
    "TEXTURE_BINDING_CUBE_MAP": <34068, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_X": <34069, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_X": <34070, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Y": <34071, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Y": <34072, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Z": <34073, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Z": <34074, F, T, F>,
    "MAX_CUBE_MAP_TEXTURE_SIZE": <34076, F, T, F>,
    "TEXTURE0": <33984, F, T, F>,
    "TEXTURE1": <33985, F, T, F>,
    "TEXTURE2": <33986, F, T, F>,
    "TEXTURE3": <33987, F, T, F>,
    "TEXTURE4": <33988, F, T, F>,
    "TEXTURE5": <33989, F, T, F>,
    "TEXTURE6": <33990, F, T, F>,
    "TEXTURE7": <33991, F, T, F>,
    "TEXTURE8": <33992, F, T, F>,
    "TEXTURE9": <33993, F, T, F>,
    "TEXTURE10": <33994, F, T, F>,
    "TEXTURE11": <33995, F, T, F>,
    "TEXTURE12": <33996, F, T, F>,
    "TEXTURE13": <33997, F, T, F>,
    "TEXTURE14": <33998, F, T, F>,
    "TEXTURE15": <33999, F, T, F>,
    "TEXTURE16": <34000, F, T, F>,
    "TEXTURE17": <34001, F, T, F>,
    "TEXTURE18": <34002, F, T, F>,
    "TEXTURE19": <34003, F, T, F>,
    "TEXTURE20": <34004, F, T, F>,
    "TEXTURE21": <34005, F, T, F>,
    "TEXTURE22": <34006, F, T, F>,
    "TEXTURE23": <34007, F, T, F>,
    "TEXTURE24": <34008, F, T, F>,
    "TEXTURE25": <34009, F, T, F>,
    "TEXTURE26": <34010, F, T, F>,
    "TEXTURE27": <34011, F, T, F>,
    "TEXTURE28": <34012, F, T, F>,
    "TEXTURE29": <34013, F, T, F>,
    "TEXTURE30": <34014, F, T, F>,
    "TEXTURE31": <34015, F, T, F>,
    "ACTIVE_TEXTURE": <34016, F, T, F>,
    "REPEAT": <10497, F, T, F>,
    "CLAMP_TO_EDGE": <33071, F, T, F>,
    "MIRRORED_REPEAT": <33648, F, T, F>,
    "FLOAT_VEC2": <35664, F, T, F>,
    "FLOAT_VEC3": <35665, F, T, F>,
    "FLOAT_VEC4": <35666, F, T, F>,
    "INT_VEC2": <35667, F, T, F>,
    "INT_VEC3": <35668, F, T, F>,
    "INT_VEC4": <35669, F, T, F>,
    "BOOL": <35670, F, T, F>,
    "BOOL_VEC2": <35671, F, T, F>,
    "BOOL_VEC3": <35672, F, T, F>,
    "BOOL_VEC4": <35673, F, T, F>,
    "FLOAT_MAT2": <35674, F, T, F>,
    "FLOAT_MAT3": <35675, F, T, F>,
    "FLOAT_MAT4": <35676, F, T, F>,
    "SAMPLER_2D": <35678, F, T, F>,
    "SAMPLER_CUBE": <35680, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_ENABLED": <34338, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_SIZE": <34339, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_STRIDE": <34340, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_TYPE": <34341, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_NORMALIZED": <34922, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_POINTER": <34373, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": <34975, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_TYPE": <35738, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_FORMAT": <35739, F, T, F>,
    "COMPILE_STATUS": <35713, F, T, F>,
    "LOW_FLOAT": <36336, F, T, F>,
    "MEDIUM_FLOAT": <36337, F, T, F>,
    "HIGH_FLOAT": <36338, F, T, F>,
    "LOW_INT": <36339, F, T, F>,
    "MEDIUM_INT": <36340, F, T, F>,
    "HIGH_INT": <36341, F, T, F>,
    "FRAMEBUFFER": <36160, F, T, F>,
    "RENDERBUFFER": <36161, F, T, F>,
    "RGBA4": <32854, F, T, F>,
    "RGB5_A1": <32855, F, T, F>,
    "RGB565": <36194, F, T, F>,
    "DEPTH_COMPONENT16": <33189, F, T, F>,
    "STENCIL_INDEX": <6401, F, T, F>,
    "STENCIL_INDEX8": <36168, F, T, F>,
    "DEPTH_STENCIL": <34041, F, T, F>,
    "RENDERBUFFER_WIDTH": <36162, F, T, F>,
    "RENDERBUFFER_HEIGHT": <36163, F, T, F>,
    "RENDERBUFFER_INTERNAL_FORMAT": <36164, F, T, F>,
    "RENDERBUFFER_RED_SIZE": <36176, F, T, F>,
    "RENDERBUFFER_GREEN_SIZE": <36177, F, T, F>,
    "RENDERBUFFER_BLUE_SIZE": <36178, F, T, F>,
    "RENDERBUFFER_ALPHA_SIZE": <36179, F, T, F>,
    "RENDERBUFFER_DEPTH_SIZE": <36180, F, T, F>,
    "RENDERBUFFER_STENCIL_SIZE": <36181, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": <36048, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": <36049, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": <36050, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": <36051, F, T, F>,
    "COLOR_ATTACHMENT0": <36064, F, T, F>,
    "DEPTH_ATTACHMENT": <36096, F, T, F>,
    "STENCIL_ATTACHMENT": <36128, F, T, F>,
    "DEPTH_STENCIL_ATTACHMENT": <33306, F, T, F>,
    "NONE": <0, F, T, F>,
    "FRAMEBUFFER_COMPLETE": <36053, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": <36054, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": <36055, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": <36057, F, T, F>,
    "FRAMEBUFFER_UNSUPPORTED": <36061, F, T, F>,
    "FRAMEBUFFER_BINDING": <36006, F, T, F>,
    "RENDERBUFFER_BINDING": <36007, F, T, F>,
    "MAX_RENDERBUFFER_SIZE": <34024, F, T, F>,
    "INVALID_FRAMEBUFFER_OPERATION": <1286, F, T, F>,
    "UNPACK_FLIP_Y_WEBGL": <37440, F, T, F>,
    "UNPACK_PREMULTIPLY_ALPHA_WEBGL": <37441, F, T, F>,
    "CONTEXT_LOST_WEBGL": <37442, F, T, F>,
    "UNPACK_COLORSPACE_CONVERSION_WEBGL": <37443, F, T, F>,
    "BROWSER_DEFAULT_WEBGL": <37444, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype: {
    "DEPTH_BUFFER_BIT": <256, F, T, F>,
    "STENCIL_BUFFER_BIT": <1024, F, T, F>,
    "COLOR_BUFFER_BIT": <16384, F, T, F>,
    "POINTS": <0, F, T, F>,
    "LINES": <1, F, T, F>,
    "LINE_LOOP": <2, F, T, F>,
    "LINE_STRIP": <3, F, T, F>,
    "TRIANGLES": <4, F, T, F>,
    "TRIANGLE_STRIP": <5, F, T, F>,
    "TRIANGLE_FAN": <6, F, T, F>,
    "ZERO": <0, F, T, F>,
    "ONE": <1, F, T, F>,
    "SRC_COLOR": <768, F, T, F>,
    "ONE_MINUS_SRC_COLOR": <769, F, T, F>,
    "SRC_ALPHA": <770, F, T, F>,
    "ONE_MINUS_SRC_ALPHA": <771, F, T, F>,
    "DST_ALPHA": <772, F, T, F>,
    "ONE_MINUS_DST_ALPHA": <773, F, T, F>,
    "DST_COLOR": <774, F, T, F>,
    "ONE_MINUS_DST_COLOR": <775, F, T, F>,
    "SRC_ALPHA_SATURATE": <776, F, T, F>,
    "FUNC_ADD": <32774, F, T, F>,
    "BLEND_EQUATION": <32777, F, T, F>,
    "BLEND_EQUATION_RGB": <32777, F, T, F>,
    "BLEND_EQUATION_ALPHA": <34877, F, T, F>,
    "FUNC_SUBTRACT": <32778, F, T, F>,
    "FUNC_REVERSE_SUBTRACT": <32779, F, T, F>,
    "BLEND_DST_RGB": <32968, F, T, F>,
    "BLEND_SRC_RGB": <32969, F, T, F>,
    "BLEND_DST_ALPHA": <32970, F, T, F>,
    "BLEND_SRC_ALPHA": <32971, F, T, F>,
    "CONSTANT_COLOR": <32769, F, T, F>,
    "ONE_MINUS_CONSTANT_COLOR": <32770, F, T, F>,
    "CONSTANT_ALPHA": <32771, F, T, F>,
    "ONE_MINUS_CONSTANT_ALPHA": <32772, F, T, F>,
    "BLEND_COLOR": <32773, F, T, F>,
    "ARRAY_BUFFER": <34962, F, T, F>,
    "ELEMENT_ARRAY_BUFFER": <34963, F, T, F>,
    "ARRAY_BUFFER_BINDING": <34964, F, T, F>,
    "ELEMENT_ARRAY_BUFFER_BINDING": <34965, F, T, F>,
    "STREAM_DRAW": <35040, F, T, F>,
    "STATIC_DRAW": <35044, F, T, F>,
    "DYNAMIC_DRAW": <35048, F, T, F>,
    "BUFFER_SIZE": <34660, F, T, F>,
    "BUFFER_USAGE": <34661, F, T, F>,
    "CURRENT_VERTEX_ATTRIB": <34342, F, T, F>,
    "FRONT": <1028, F, T, F>,
    "BACK": <1029, F, T, F>,
    "FRONT_AND_BACK": <1032, F, T, F>,
    "TEXTURE_2D": <3553, F, T, F>,
    "CULL_FACE": <2884, F, T, F>,
    "BLEND": <3042, F, T, F>,
    "DITHER": <3024, F, T, F>,
    "STENCIL_TEST": <2960, F, T, F>,
    "DEPTH_TEST": <2929, F, T, F>,
    "SCISSOR_TEST": <3089, F, T, F>,
    "POLYGON_OFFSET_FILL": <32823, F, T, F>,
    "SAMPLE_ALPHA_TO_COVERAGE": <32926, F, T, F>,
    "SAMPLE_COVERAGE": <32928, F, T, F>,
    "NO_ERROR": <0, F, T, F>,
    "INVALID_ENUM": <1280, F, T, F>,
    "INVALID_VALUE": <1281, F, T, F>,
    "INVALID_OPERATION": <1282, F, T, F>,
    "OUT_OF_MEMORY": <1285, F, T, F>,
    "CW": <2304, F, T, F>,
    "CCW": <2305, F, T, F>,
    "LINE_WIDTH": <2849, F, T, F>,
    "ALIASED_POINT_SIZE_RANGE": <33901, F, T, F>,
    "ALIASED_LINE_WIDTH_RANGE": <33902, F, T, F>,
    "CULL_FACE_MODE": <2885, F, T, F>,
    "FRONT_FACE": <2886, F, T, F>,
    "DEPTH_RANGE": <2928, F, T, F>,
    "DEPTH_WRITEMASK": <2930, F, T, F>,
    "DEPTH_CLEAR_VALUE": <2931, F, T, F>,
    "DEPTH_FUNC": <2932, F, T, F>,
    "STENCIL_CLEAR_VALUE": <2961, F, T, F>,
    "STENCIL_FUNC": <2962, F, T, F>,
    "STENCIL_FAIL": <2964, F, T, F>,
    "STENCIL_PASS_DEPTH_FAIL": <2965, F, T, F>,
    "STENCIL_PASS_DEPTH_PASS": <2966, F, T, F>,
    "STENCIL_REF": <2967, F, T, F>,
    "STENCIL_VALUE_MASK": <2963, F, T, F>,
    "STENCIL_WRITEMASK": <2968, F, T, F>,
    "STENCIL_BACK_FUNC": <34816, F, T, F>,
    "STENCIL_BACK_FAIL": <34817, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_FAIL": <34818, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_PASS": <34819, F, T, F>,
    "STENCIL_BACK_REF": <36003, F, T, F>,
    "STENCIL_BACK_VALUE_MASK": <36004, F, T, F>,
    "STENCIL_BACK_WRITEMASK": <36005, F, T, F>,
    "VIEWPORT": <2978, F, T, F>,
    "SCISSOR_BOX": <3088, F, T, F>,
    "COLOR_CLEAR_VALUE": <3106, F, T, F>,
    "COLOR_WRITEMASK": <3107, F, T, F>,
    "UNPACK_ALIGNMENT": <3317, F, T, F>,
    "PACK_ALIGNMENT": <3333, F, T, F>,
    "MAX_TEXTURE_SIZE": <3379, F, T, F>,
    "MAX_VIEWPORT_DIMS": <3386, F, T, F>,
    "SUBPIXEL_BITS": <3408, F, T, F>,
    "RED_BITS": <3410, F, T, F>,
    "GREEN_BITS": <3411, F, T, F>,
    "BLUE_BITS": <3412, F, T, F>,
    "ALPHA_BITS": <3413, F, T, F>,
    "DEPTH_BITS": <3414, F, T, F>,
    "STENCIL_BITS": <3415, F, T, F>,
    "POLYGON_OFFSET_UNITS": <10752, F, T, F>,
    "POLYGON_OFFSET_FACTOR": <32824, F, T, F>,
    "TEXTURE_BINDING_2D": <32873, F, T, F>,
    "SAMPLE_BUFFERS": <32936, F, T, F>,
    "SAMPLES": <32937, F, T, F>,
    "SAMPLE_COVERAGE_VALUE": <32938, F, T, F>,
    "SAMPLE_COVERAGE_INVERT": <32939, F, T, F>,
    "COMPRESSED_TEXTURE_FORMATS": <34467, F, T, F>,
    "DONT_CARE": <4352, F, T, F>,
    "FASTEST": <4353, F, T, F>,
    "NICEST": <4354, F, T, F>,
    "GENERATE_MIPMAP_HINT": <33170, F, T, F>,
    "BYTE": <5120, F, T, F>,
    "UNSIGNED_BYTE": <5121, F, T, F>,
    "SHORT": <5122, F, T, F>,
    "UNSIGNED_SHORT": <5123, F, T, F>,
    "INT": <5124, F, T, F>,
    "UNSIGNED_INT": <5125, F, T, F>,
    "FLOAT": <5126, F, T, F>,
    "DEPTH_COMPONENT": <6402, F, T, F>,
    "ALPHA": <6406, F, T, F>,
    "RGB": <6407, F, T, F>,
    "RGBA": <6408, F, T, F>,
    "LUMINANCE": <6409, F, T, F>,
    "LUMINANCE_ALPHA": <6410, F, T, F>,
    "UNSIGNED_SHORT_4_4_4_4": <32819, F, T, F>,
    "UNSIGNED_SHORT_5_5_5_1": <32820, F, T, F>,
    "UNSIGNED_SHORT_5_6_5": <33635, F, T, F>,
    "FRAGMENT_SHADER": <35632, F, T, F>,
    "VERTEX_SHADER": <35633, F, T, F>,
    "MAX_VERTEX_ATTRIBS": <34921, F, T, F>,
    "MAX_VERTEX_UNIFORM_VECTORS": <36347, F, T, F>,
    "MAX_VARYING_VECTORS": <36348, F, T, F>,
    "MAX_COMBINED_TEXTURE_IMAGE_UNITS": <35661, F, T, F>,
    "MAX_VERTEX_TEXTURE_IMAGE_UNITS": <35660, F, T, F>,
    "MAX_TEXTURE_IMAGE_UNITS": <34930, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_VECTORS": <36349, F, T, F>,
    "SHADER_TYPE": <35663, F, T, F>,
    "DELETE_STATUS": <35712, F, T, F>,
    "LINK_STATUS": <35714, F, T, F>,
    "VALIDATE_STATUS": <35715, F, T, F>,
    "ATTACHED_SHADERS": <35717, F, T, F>,
    "ACTIVE_UNIFORMS": <35718, F, T, F>,
    "ACTIVE_ATTRIBUTES": <35721, F, T, F>,
    "SHADING_LANGUAGE_VERSION": <35724, F, T, F>,
    "CURRENT_PROGRAM": <35725, F, T, F>,
    "NEVER": <512, F, T, F>,
    "LESS": <513, F, T, F>,
    "EQUAL": <514, F, T, F>,
    "LEQUAL": <515, F, T, F>,
    "GREATER": <516, F, T, F>,
    "NOTEQUAL": <517, F, T, F>,
    "GEQUAL": <518, F, T, F>,
    "ALWAYS": <519, F, T, F>,
    "KEEP": <7680, F, T, F>,
    "REPLACE": <7681, F, T, F>,
    "INCR": <7682, F, T, F>,
    "DECR": <7683, F, T, F>,
    "INVERT": <5386, F, T, F>,
    "INCR_WRAP": <34055, F, T, F>,
    "DECR_WRAP": <34056, F, T, F>,
    "VENDOR": <7936, F, T, F>,
    "RENDERER": <7937, F, T, F>,
    "VERSION": <7938, F, T, F>,
    "NEAREST": <9728, F, T, F>,
    "LINEAR": <9729, F, T, F>,
    "NEAREST_MIPMAP_NEAREST": <9984, F, T, F>,
    "LINEAR_MIPMAP_NEAREST": <9985, F, T, F>,
    "NEAREST_MIPMAP_LINEAR": <9986, F, T, F>,
    "LINEAR_MIPMAP_LINEAR": <9987, F, T, F>,
    "TEXTURE_MAG_FILTER": <10240, F, T, F>,
    "TEXTURE_MIN_FILTER": <10241, F, T, F>,
    "TEXTURE_WRAP_S": <10242, F, T, F>,
    "TEXTURE_WRAP_T": <10243, F, T, F>,
    "TEXTURE": <5890, F, T, F>,
    "TEXTURE_CUBE_MAP": <34067, F, T, F>,
    "TEXTURE_BINDING_CUBE_MAP": <34068, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_X": <34069, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_X": <34070, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Y": <34071, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Y": <34072, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Z": <34073, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Z": <34074, F, T, F>,
    "MAX_CUBE_MAP_TEXTURE_SIZE": <34076, F, T, F>,
    "TEXTURE0": <33984, F, T, F>,
    "TEXTURE1": <33985, F, T, F>,
    "TEXTURE2": <33986, F, T, F>,
    "TEXTURE3": <33987, F, T, F>,
    "TEXTURE4": <33988, F, T, F>,
    "TEXTURE5": <33989, F, T, F>,
    "TEXTURE6": <33990, F, T, F>,
    "TEXTURE7": <33991, F, T, F>,
    "TEXTURE8": <33992, F, T, F>,
    "TEXTURE9": <33993, F, T, F>,
    "TEXTURE10": <33994, F, T, F>,
    "TEXTURE11": <33995, F, T, F>,
    "TEXTURE12": <33996, F, T, F>,
    "TEXTURE13": <33997, F, T, F>,
    "TEXTURE14": <33998, F, T, F>,
    "TEXTURE15": <33999, F, T, F>,
    "TEXTURE16": <34000, F, T, F>,
    "TEXTURE17": <34001, F, T, F>,
    "TEXTURE18": <34002, F, T, F>,
    "TEXTURE19": <34003, F, T, F>,
    "TEXTURE20": <34004, F, T, F>,
    "TEXTURE21": <34005, F, T, F>,
    "TEXTURE22": <34006, F, T, F>,
    "TEXTURE23": <34007, F, T, F>,
    "TEXTURE24": <34008, F, T, F>,
    "TEXTURE25": <34009, F, T, F>,
    "TEXTURE26": <34010, F, T, F>,
    "TEXTURE27": <34011, F, T, F>,
    "TEXTURE28": <34012, F, T, F>,
    "TEXTURE29": <34013, F, T, F>,
    "TEXTURE30": <34014, F, T, F>,
    "TEXTURE31": <34015, F, T, F>,
    "ACTIVE_TEXTURE": <34016, F, T, F>,
    "REPEAT": <10497, F, T, F>,
    "CLAMP_TO_EDGE": <33071, F, T, F>,
    "MIRRORED_REPEAT": <33648, F, T, F>,
    "FLOAT_VEC2": <35664, F, T, F>,
    "FLOAT_VEC3": <35665, F, T, F>,
    "FLOAT_VEC4": <35666, F, T, F>,
    "INT_VEC2": <35667, F, T, F>,
    "INT_VEC3": <35668, F, T, F>,
    "INT_VEC4": <35669, F, T, F>,
    "BOOL": <35670, F, T, F>,
    "BOOL_VEC2": <35671, F, T, F>,
    "BOOL_VEC3": <35672, F, T, F>,
    "BOOL_VEC4": <35673, F, T, F>,
    "FLOAT_MAT2": <35674, F, T, F>,
    "FLOAT_MAT3": <35675, F, T, F>,
    "FLOAT_MAT4": <35676, F, T, F>,
    "SAMPLER_2D": <35678, F, T, F>,
    "SAMPLER_CUBE": <35680, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_ENABLED": <34338, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_SIZE": <34339, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_STRIDE": <34340, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_TYPE": <34341, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_NORMALIZED": <34922, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_POINTER": <34373, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": <34975, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_TYPE": <35738, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_FORMAT": <35739, F, T, F>,
    "COMPILE_STATUS": <35713, F, T, F>,
    "LOW_FLOAT": <36336, F, T, F>,
    "MEDIUM_FLOAT": <36337, F, T, F>,
    "HIGH_FLOAT": <36338, F, T, F>,
    "LOW_INT": <36339, F, T, F>,
    "MEDIUM_INT": <36340, F, T, F>,
    "HIGH_INT": <36341, F, T, F>,
    "FRAMEBUFFER": <36160, F, T, F>,
    "RENDERBUFFER": <36161, F, T, F>,
    "RGBA4": <32854, F, T, F>,
    "RGB5_A1": <32855, F, T, F>,
    "RGB565": <36194, F, T, F>,
    "DEPTH_COMPONENT16": <33189, F, T, F>,
    "STENCIL_INDEX": <6401, F, T, F>,
    "STENCIL_INDEX8": <36168, F, T, F>,
    "DEPTH_STENCIL": <34041, F, T, F>,
    "RENDERBUFFER_WIDTH": <36162, F, T, F>,
    "RENDERBUFFER_HEIGHT": <36163, F, T, F>,
    "RENDERBUFFER_INTERNAL_FORMAT": <36164, F, T, F>,
    "RENDERBUFFER_RED_SIZE": <36176, F, T, F>,
    "RENDERBUFFER_GREEN_SIZE": <36177, F, T, F>,
    "RENDERBUFFER_BLUE_SIZE": <36178, F, T, F>,
    "RENDERBUFFER_ALPHA_SIZE": <36179, F, T, F>,
    "RENDERBUFFER_DEPTH_SIZE": <36180, F, T, F>,
    "RENDERBUFFER_STENCIL_SIZE": <36181, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": <36048, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": <36049, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": <36050, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": <36051, F, T, F>,
    "COLOR_ATTACHMENT0": <36064, F, T, F>,
    "DEPTH_ATTACHMENT": <36096, F, T, F>,
    "STENCIL_ATTACHMENT": <36128, F, T, F>,
    "DEPTH_STENCIL_ATTACHMENT": <33306, F, T, F>,
    "NONE": <0, F, T, F>,
    "FRAMEBUFFER_COMPLETE": <36053, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": <36054, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": <36055, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": <36057, F, T, F>,
    "FRAMEBUFFER_UNSUPPORTED": <36061, F, T, F>,
    "FRAMEBUFFER_BINDING": <36006, F, T, F>,
    "RENDERBUFFER_BINDING": <36007, F, T, F>,
    "MAX_RENDERBUFFER_SIZE": <34024, F, T, F>,
    "INVALID_FRAMEBUFFER_OPERATION": <1286, F, T, F>,
    "UNPACK_FLIP_Y_WEBGL": <37440, F, T, F>,
    "UNPACK_PREMULTIPLY_ALPHA_WEBGL": <37441, F, T, F>,
    "CONTEXT_LOST_WEBGL": <37442, F, T, F>,
    "UNPACK_COLORSPACE_CONVERSION_WEBGL": <37443, F, T, F>,
    "BROWSER_DEFAULT_WEBGL": <37444, F, T, F>,
    "canvas": <undefined, T, T, T>,
    "drawingBufferWidth": <undefined, T, T, T>,
    "drawingBufferHeight": <undefined, T, T, T>,
    "activeTexture": <#Global.WebGLRenderingContext.prototype.activeTexture, T, T, T>,
    "attachShader": <#Global.WebGLRenderingContext.prototype.attachShader, T, T, T>,
    "bindAttribLocation": <#Global.WebGLRenderingContext.prototype.bindAttribLocation, T, T, T>,
    "bindBuffer": <#Global.WebGLRenderingContext.prototype.bindBuffer, T, T, T>,
    "bindFramebuffer": <#Global.WebGLRenderingContext.prototype.bindFramebuffer, T, T, T>,
    "bindRenderbuffer": <#Global.WebGLRenderingContext.prototype.bindRenderbuffer, T, T, T>,
    "bindTexture": <#Global.WebGLRenderingContext.prototype.bindTexture, T, T, T>,
    "blendColor": <#Global.WebGLRenderingContext.prototype.blendColor, T, T, T>,
    "blendEquation": <#Global.WebGLRenderingContext.prototype.blendEquation, T, T, T>,
    "blendEquationSeparate": <#Global.WebGLRenderingContext.prototype.blendEquationSeparate, T, T, T>,
    "blendFunc": <#Global.WebGLRenderingContext.prototype.blendFunc, T, T, T>,
    "blendFuncSeparate": <#Global.WebGLRenderingContext.prototype.blendFuncSeparate, T, T, T>,
    "bufferData": <#Global.WebGLRenderingContext.prototype.bufferData, T, T, T>,
    "bufferSubData": <#Global.WebGLRenderingContext.prototype.bufferSubData, T, T, T>,
    "checkFramebufferStatus": <#Global.WebGLRenderingContext.prototype.checkFramebufferStatus, T, T, T>,
    "clear": <#Global.WebGLRenderingContext.prototype.clear, T, T, T>,
    "clearColor": <#Global.WebGLRenderingContext.prototype.clearColor, T, T, T>,
    "clearDepth": <#Global.WebGLRenderingContext.prototype.clearDepth, T, T, T>,
    "clearStencil": <#Global.WebGLRenderingContext.prototype.clearStencil, T, T, T>,
    "colorMask": <#Global.WebGLRenderingContext.prototype.colorMask, T, T, T>,
    "compileShader": <#Global.WebGLRenderingContext.prototype.compileShader, T, T, T>,
    "compressedTexImage2D": <#Global.WebGLRenderingContext.prototype.compressedTexImage2D, T, T, T>,
    "compressedTexSubImage2D": <#Global.WebGLRenderingContext.prototype.compressedTexSubImage2D, T, T, T>,
    "copyTexImage2D": <#Global.WebGLRenderingContext.prototype.copyTexImage2D, T, T, T>,
    "copyTexSubImage2D": <#Global.WebGLRenderingContext.prototype.copyTexSubImage2D, T, T, T>,
    "createBuffer": <#Global.WebGLRenderingContext.prototype.createBuffer, T, T, T>,
    "createFramebuffer": <#Global.WebGLRenderingContext.prototype.createFramebuffer, T, T, T>,
    "createProgram": <#Global.WebGLRenderingContext.prototype.createProgram, T, T, T>,
    "createRenderbuffer": <#Global.WebGLRenderingContext.prototype.createRenderbuffer, T, T, T>,
    "createShader": <#Global.WebGLRenderingContext.prototype.createShader, T, T, T>,
    "createTexture": <#Global.WebGLRenderingContext.prototype.createTexture, T, T, T>,
    "cullFace": <#Global.WebGLRenderingContext.prototype.cullFace, T, T, T>,
    "deleteBuffer": <#Global.WebGLRenderingContext.prototype.deleteBuffer, T, T, T>,
    "deleteFramebuffer": <#Global.WebGLRenderingContext.prototype.deleteFramebuffer, T, T, T>,
    "deleteProgram": <#Global.WebGLRenderingContext.prototype.deleteProgram, T, T, T>,
    "deleteRenderbuffer": <#Global.WebGLRenderingContext.prototype.deleteRenderbuffer, T, T, T>,
    "deleteShader": <#Global.WebGLRenderingContext.prototype.deleteShader, T, T, T>,
    "deleteTexture": <#Global.WebGLRenderingContext.prototype.deleteTexture, T, T, T>,
    "depthFunc": <#Global.WebGLRenderingContext.prototype.depthFunc, T, T, T>,
    "depthMask": <#Global.WebGLRenderingContext.prototype.depthMask, T, T, T>,
    "depthRange": <#Global.WebGLRenderingContext.prototype.depthRange, T, T, T>,
    "detachShader": <#Global.WebGLRenderingContext.prototype.detachShader, T, T, T>,
    "disable": <#Global.WebGLRenderingContext.prototype.disable, T, T, T>,
    "disableVertexAttribArray": <#Global.WebGLRenderingContext.prototype.disableVertexAttribArray, T, T, T>,
    "drawArrays": <#Global.WebGLRenderingContext.prototype.drawArrays, T, T, T>,
    "drawElements": <#Global.WebGLRenderingContext.prototype.drawElements, T, T, T>,
    "enable": <#Global.WebGLRenderingContext.prototype.enable, T, T, T>,
    "enableVertexAttribArray": <#Global.WebGLRenderingContext.prototype.enableVertexAttribArray, T, T, T>,
    "finish": <#Global.WebGLRenderingContext.prototype.finish, T, T, T>,
    "flush": <#Global.WebGLRenderingContext.prototype.flush, T, T, T>,
    "framebufferRenderbuffer": <#Global.WebGLRenderingContext.prototype.framebufferRenderbuffer, T, T, T>,
    "framebufferTexture2D": <#Global.WebGLRenderingContext.prototype.framebufferTexture2D, T, T, T>,
    "frontFace": <#Global.WebGLRenderingContext.prototype.frontFace, T, T, T>,
    "generateMipmap": <#Global.WebGLRenderingContext.prototype.generateMipmap, T, T, T>,
    "getActiveAttrib": <#Global.WebGLRenderingContext.prototype.getActiveAttrib, T, T, T>,
    "getActiveUniform": <#Global.WebGLRenderingContext.prototype.getActiveUniform, T, T, T>,
    "getAttachedShaders": <#Global.WebGLRenderingContext.prototype.getAttachedShaders, T, T, T>,
    "getAttribLocation": <#Global.WebGLRenderingContext.prototype.getAttribLocation, T, T, T>,
    "getBufferParameter": <#Global.WebGLRenderingContext.prototype.getBufferParameter, T, T, T>,
    "getContextAttributes": <#Global.WebGLRenderingContext.prototype.getContextAttributes, T, T, T>,
    "getError": <#Global.WebGLRenderingContext.prototype.getError, T, T, T>,
    "getExtension": <#Global.WebGLRenderingContext.prototype.getExtension, T, T, T>,
    "getFramebufferAttachmentParameter": <#Global.WebGLRenderingContext.prototype.getFramebufferAttachmentParameter, T, T, T>,
    "getParameter": <#Global.WebGLRenderingContext.prototype.getParameter, T, T, T>,
    "getProgramParameter": <#Global.WebGLRenderingContext.prototype.getProgramParameter, T, T, T>,
    "getProgramInfoLog": <#Global.WebGLRenderingContext.prototype.getProgramInfoLog, T, T, T>,
    "getRenderbufferParameter": <#Global.WebGLRenderingContext.prototype.getRenderbufferParameter, T, T, T>,
    "getShaderParameter": <#Global.WebGLRenderingContext.prototype.getShaderParameter, T, T, T>,
    "getShaderInfoLog": <#Global.WebGLRenderingContext.prototype.getShaderInfoLog, T, T, T>,
    "getShaderPrecisionFormat": <#Global.WebGLRenderingContext.prototype.getShaderPrecisionFormat, T, T, T>,
    "getShaderSource": <#Global.WebGLRenderingContext.prototype.getShaderSource, T, T, T>,
    "getSupportedExtensions": <#Global.WebGLRenderingContext.prototype.getSupportedExtensions, T, T, T>,
    "getTexParameter": <#Global.WebGLRenderingContext.prototype.getTexParameter, T, T, T>,
    "getUniform": <#Global.WebGLRenderingContext.prototype.getUniform, T, T, T>,
    "getUniformLocation": <#Global.WebGLRenderingContext.prototype.getUniformLocation, T, T, T>,
    "getVertexAttrib": <#Global.WebGLRenderingContext.prototype.getVertexAttrib, T, T, T>,
    "getVertexAttribOffset": <#Global.WebGLRenderingContext.prototype.getVertexAttribOffset, T, T, T>,
    "hint": <#Global.WebGLRenderingContext.prototype.hint, T, T, T>,
    "isBuffer": <#Global.WebGLRenderingContext.prototype.isBuffer, T, T, T>,
    "isContextLost": <#Global.WebGLRenderingContext.prototype.isContextLost, T, T, T>,
    "isEnabled": <#Global.WebGLRenderingContext.prototype.isEnabled, T, T, T>,
    "isFramebuffer": <#Global.WebGLRenderingContext.prototype.isFramebuffer, T, T, T>,
    "isProgram": <#Global.WebGLRenderingContext.prototype.isProgram, T, T, T>,
    "isRenderbuffer": <#Global.WebGLRenderingContext.prototype.isRenderbuffer, T, T, T>,
    "isShader": <#Global.WebGLRenderingContext.prototype.isShader, T, T, T>,
    "isTexture": <#Global.WebGLRenderingContext.prototype.isTexture, T, T, T>,
    "lineWidth": <#Global.WebGLRenderingContext.prototype.lineWidth, T, T, T>,
    "linkProgram": <#Global.WebGLRenderingContext.prototype.linkProgram, T, T, T>,
    "pixelStorei": <#Global.WebGLRenderingContext.prototype.pixelStorei, T, T, T>,
    "polygonOffset": <#Global.WebGLRenderingContext.prototype.polygonOffset, T, T, T>,
    "readPixels": <#Global.WebGLRenderingContext.prototype.readPixels, T, T, T>,
    "renderbufferStorage": <#Global.WebGLRenderingContext.prototype.renderbufferStorage, T, T, T>,
    "sampleCoverage": <#Global.WebGLRenderingContext.prototype.sampleCoverage, T, T, T>,
    "scissor": <#Global.WebGLRenderingContext.prototype.scissor, T, T, T>,
    "shaderSource": <#Global.WebGLRenderingContext.prototype.shaderSource, T, T, T>,
    "stencilFunc": <#Global.WebGLRenderingContext.prototype.stencilFunc, T, T, T>,
    "stencilFuncSeparate": <#Global.WebGLRenderingContext.prototype.stencilFuncSeparate, T, T, T>,
    "stencilMask": <#Global.WebGLRenderingContext.prototype.stencilMask, T, T, T>,
    "stencilMaskSeparate": <#Global.WebGLRenderingContext.prototype.stencilMaskSeparate, T, T, T>,
    "stencilOp": <#Global.WebGLRenderingContext.prototype.stencilOp, T, T, T>,
    "stencilOpSeparate": <#Global.WebGLRenderingContext.prototype.stencilOpSeparate, T, T, T>,
    "texParameterf": <#Global.WebGLRenderingContext.prototype.texParameterf, T, T, T>,
    "texParameteri": <#Global.WebGLRenderingContext.prototype.texParameteri, T, T, T>,
    "texImage2D": <#Global.WebGLRenderingContext.prototype.texImage2D, T, T, T>,
    "texSubImage2D": <#Global.WebGLRenderingContext.prototype.texSubImage2D, T, T, T>,
    "uniform1f": <#Global.WebGLRenderingContext.prototype.uniform1f, T, T, T>,
    "uniform1fv": <#Global.WebGLRenderingContext.prototype.uniform1fv, T, T, T>,
    "uniform1i": <#Global.WebGLRenderingContext.prototype.uniform1i, T, T, T>,
    "uniform1iv": <#Global.WebGLRenderingContext.prototype.uniform1iv, T, T, T>,
    "uniform2f": <#Global.WebGLRenderingContext.prototype.uniform2f, T, T, T>,
    "uniform2fv": <#Global.WebGLRenderingContext.prototype.uniform2fv, T, T, T>,
    "uniform2i": <#Global.WebGLRenderingContext.prototype.uniform2i, T, T, T>,
    "uniform2iv": <#Global.WebGLRenderingContext.prototype.uniform2iv, T, T, T>,
    "uniform3f": <#Global.WebGLRenderingContext.prototype.uniform3f, T, T, T>,
    "uniform3fv": <#Global.WebGLRenderingContext.prototype.uniform3fv, T, T, T>,
    "uniform3i": <#Global.WebGLRenderingContext.prototype.uniform3i, T, T, T>,
    "uniform3iv": <#Global.WebGLRenderingContext.prototype.uniform3iv, T, T, T>,
    "uniform4f": <#Global.WebGLRenderingContext.prototype.uniform4f, T, T, T>,
    "uniform4fv": <#Global.WebGLRenderingContext.prototype.uniform4fv, T, T, T>,
    "uniform4i": <#Global.WebGLRenderingContext.prototype.uniform4i, T, T, T>,
    "uniform4iv": <#Global.WebGLRenderingContext.prototype.uniform4iv, T, T, T>,
    "uniformMatrix2fv": <#Global.WebGLRenderingContext.prototype.uniformMatrix2fv, T, T, T>,
    "uniformMatrix3fv": <#Global.WebGLRenderingContext.prototype.uniformMatrix3fv, T, T, T>,
    "uniformMatrix4fv": <#Global.WebGLRenderingContext.prototype.uniformMatrix4fv, T, T, T>,
    "useProgram": <#Global.WebGLRenderingContext.prototype.useProgram, T, T, T>,
    "validateProgram": <#Global.WebGLRenderingContext.prototype.validateProgram, T, T, T>,
    "vertexAttrib1f": <#Global.WebGLRenderingContext.prototype.vertexAttrib1f, T, T, T>,
    "vertexAttrib1fv": <#Global.WebGLRenderingContext.prototype.vertexAttrib1fv, T, T, T>,
    "vertexAttrib2f": <#Global.WebGLRenderingContext.prototype.vertexAttrib2f, T, T, T>,
    "vertexAttrib2fv": <#Global.WebGLRenderingContext.prototype.vertexAttrib2fv, T, T, T>,
    "vertexAttrib3f": <#Global.WebGLRenderingContext.prototype.vertexAttrib3f, T, T, T>,
    "vertexAttrib3fv": <#Global.WebGLRenderingContext.prototype.vertexAttrib3fv, T, T, T>,
    "vertexAttrib4f": <#Global.WebGLRenderingContext.prototype.vertexAttrib4f, T, T, T>,
    "vertexAttrib4fv": <#Global.WebGLRenderingContext.prototype.vertexAttrib4fv, T, T, T>,
    "vertexAttribPointer": <#Global.WebGLRenderingContext.prototype.vertexAttribPointer, T, T, T>,
    "viewport": <#Global.WebGLRenderingContext.prototype.viewport, T, T, T>,
    "constructor": <#Global.WebGLRenderingContext, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLRenderingContext.prototype.activeTexture: {
    "length": <1, F, F, T>,
    "name": <"activeTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.attachShader: {
    "length": <2, F, F, T>,
    "name": <"attachShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.bindAttribLocation: {
    "length": <3, F, F, T>,
    "name": <"bindAttribLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.bindBuffer: {
    "length": <2, F, F, T>,
    "name": <"bindBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.bindFramebuffer: {
    "length": <2, F, F, T>,
    "name": <"bindFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.bindRenderbuffer: {
    "length": <2, F, F, T>,
    "name": <"bindRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.bindTexture: {
    "length": <2, F, F, T>,
    "name": <"bindTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.blendColor: {
    "length": <4, F, F, T>,
    "name": <"blendColor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.blendEquation: {
    "length": <1, F, F, T>,
    "name": <"blendEquation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.blendEquationSeparate: {
    "length": <2, F, F, T>,
    "name": <"blendEquationSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.blendFunc: {
    "length": <2, F, F, T>,
    "name": <"blendFunc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.blendFuncSeparate: {
    "length": <4, F, F, T>,
    "name": <"blendFuncSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.bufferData: {
    "length": <3, F, F, T>,
    "name": <"bufferData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.bufferSubData: {
    "length": <3, F, F, T>,
    "name": <"bufferSubData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.checkFramebufferStatus: {
    "length": <1, F, F, T>,
    "name": <"checkFramebufferStatus", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.clear: {
    "length": <1, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.clearColor: {
    "length": <4, F, F, T>,
    "name": <"clearColor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.clearDepth: {
    "length": <1, F, F, T>,
    "name": <"clearDepth", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.clearStencil: {
    "length": <1, F, F, T>,
    "name": <"clearStencil", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.colorMask: {
    "length": <4, F, F, T>,
    "name": <"colorMask", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.compileShader: {
    "length": <1, F, F, T>,
    "name": <"compileShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.compressedTexImage2D: {
    "length": <7, F, F, T>,
    "name": <"compressedTexImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.compressedTexSubImage2D: {
    "length": <8, F, F, T>,
    "name": <"compressedTexSubImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.copyTexImage2D: {
    "length": <8, F, F, T>,
    "name": <"copyTexImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.copyTexSubImage2D: {
    "length": <8, F, F, T>,
    "name": <"copyTexSubImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.createBuffer: {
    "length": <0, F, F, T>,
    "name": <"createBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.createFramebuffer: {
    "length": <0, F, F, T>,
    "name": <"createFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.createProgram: {
    "length": <0, F, F, T>,
    "name": <"createProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.createRenderbuffer: {
    "length": <0, F, F, T>,
    "name": <"createRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.createShader: {
    "length": <1, F, F, T>,
    "name": <"createShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.createTexture: {
    "length": <0, F, F, T>,
    "name": <"createTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.cullFace: {
    "length": <1, F, F, T>,
    "name": <"cullFace", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.deleteBuffer: {
    "length": <1, F, F, T>,
    "name": <"deleteBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.deleteFramebuffer: {
    "length": <1, F, F, T>,
    "name": <"deleteFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.deleteProgram: {
    "length": <1, F, F, T>,
    "name": <"deleteProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.deleteRenderbuffer: {
    "length": <1, F, F, T>,
    "name": <"deleteRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.deleteShader: {
    "length": <1, F, F, T>,
    "name": <"deleteShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.deleteTexture: {
    "length": <1, F, F, T>,
    "name": <"deleteTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.depthFunc: {
    "length": <1, F, F, T>,
    "name": <"depthFunc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.depthMask: {
    "length": <1, F, F, T>,
    "name": <"depthMask", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.depthRange: {
    "length": <2, F, F, T>,
    "name": <"depthRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.detachShader: {
    "length": <2, F, F, T>,
    "name": <"detachShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.disable: {
    "length": <1, F, F, T>,
    "name": <"disable", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.disableVertexAttribArray: {
    "length": <1, F, F, T>,
    "name": <"disableVertexAttribArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.drawArrays: {
    "length": <3, F, F, T>,
    "name": <"drawArrays", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.drawElements: {
    "length": <4, F, F, T>,
    "name": <"drawElements", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.enable: {
    "length": <1, F, F, T>,
    "name": <"enable", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.enableVertexAttribArray: {
    "length": <1, F, F, T>,
    "name": <"enableVertexAttribArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.finish: {
    "length": <0, F, F, T>,
    "name": <"finish", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.flush: {
    "length": <0, F, F, T>,
    "name": <"flush", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.framebufferRenderbuffer: {
    "length": <4, F, F, T>,
    "name": <"framebufferRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.framebufferTexture2D: {
    "length": <5, F, F, T>,
    "name": <"framebufferTexture2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.frontFace: {
    "length": <1, F, F, T>,
    "name": <"frontFace", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.generateMipmap: {
    "length": <1, F, F, T>,
    "name": <"generateMipmap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getActiveAttrib: {
    "length": <2, F, F, T>,
    "name": <"getActiveAttrib", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getActiveUniform: {
    "length": <2, F, F, T>,
    "name": <"getActiveUniform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getAttachedShaders: {
    "length": <1, F, F, T>,
    "name": <"getAttachedShaders", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getAttribLocation: {
    "length": <2, F, F, T>,
    "name": <"getAttribLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getBufferParameter: {
    "length": <2, F, F, T>,
    "name": <"getBufferParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getContextAttributes: {
    "length": <0, F, F, T>,
    "name": <"getContextAttributes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getError: {
    "length": <0, F, F, T>,
    "name": <"getError", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getExtension: {
    "length": <1, F, F, T>,
    "name": <"getExtension", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getFramebufferAttachmentParameter: {
    "length": <3, F, F, T>,
    "name": <"getFramebufferAttachmentParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getParameter: {
    "length": <1, F, F, T>,
    "name": <"getParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getProgramParameter: {
    "length": <2, F, F, T>,
    "name": <"getProgramParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getProgramInfoLog: {
    "length": <1, F, F, T>,
    "name": <"getProgramInfoLog", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getRenderbufferParameter: {
    "length": <2, F, F, T>,
    "name": <"getRenderbufferParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getShaderParameter: {
    "length": <2, F, F, T>,
    "name": <"getShaderParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getShaderInfoLog: {
    "length": <1, F, F, T>,
    "name": <"getShaderInfoLog", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getShaderPrecisionFormat: {
    "length": <2, F, F, T>,
    "name": <"getShaderPrecisionFormat", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getShaderSource: {
    "length": <1, F, F, T>,
    "name": <"getShaderSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getSupportedExtensions: {
    "length": <0, F, F, T>,
    "name": <"getSupportedExtensions", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getTexParameter: {
    "length": <2, F, F, T>,
    "name": <"getTexParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getUniform: {
    "length": <2, F, F, T>,
    "name": <"getUniform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getUniformLocation: {
    "length": <2, F, F, T>,
    "name": <"getUniformLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getVertexAttrib: {
    "length": <2, F, F, T>,
    "name": <"getVertexAttrib", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.getVertexAttribOffset: {
    "length": <2, F, F, T>,
    "name": <"getVertexAttribOffset", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.hint: {
    "length": <2, F, F, T>,
    "name": <"hint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isBuffer: {
    "length": <1, F, F, T>,
    "name": <"isBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isContextLost: {
    "length": <0, F, F, T>,
    "name": <"isContextLost", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isEnabled: {
    "length": <1, F, F, T>,
    "name": <"isEnabled", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isFramebuffer: {
    "length": <1, F, F, T>,
    "name": <"isFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isProgram: {
    "length": <1, F, F, T>,
    "name": <"isProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isRenderbuffer: {
    "length": <1, F, F, T>,
    "name": <"isRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isShader: {
    "length": <1, F, F, T>,
    "name": <"isShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.isTexture: {
    "length": <1, F, F, T>,
    "name": <"isTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.lineWidth: {
    "length": <1, F, F, T>,
    "name": <"lineWidth", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.linkProgram: {
    "length": <1, F, F, T>,
    "name": <"linkProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.pixelStorei: {
    "length": <2, F, F, T>,
    "name": <"pixelStorei", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.polygonOffset: {
    "length": <2, F, F, T>,
    "name": <"polygonOffset", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.readPixels: {
    "length": <7, F, F, T>,
    "name": <"readPixels", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.renderbufferStorage: {
    "length": <4, F, F, T>,
    "name": <"renderbufferStorage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.sampleCoverage: {
    "length": <2, F, F, T>,
    "name": <"sampleCoverage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.scissor: {
    "length": <4, F, F, T>,
    "name": <"scissor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.shaderSource: {
    "length": <2, F, F, T>,
    "name": <"shaderSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.stencilFunc: {
    "length": <3, F, F, T>,
    "name": <"stencilFunc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.stencilFuncSeparate: {
    "length": <4, F, F, T>,
    "name": <"stencilFuncSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.stencilMask: {
    "length": <1, F, F, T>,
    "name": <"stencilMask", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.stencilMaskSeparate: {
    "length": <2, F, F, T>,
    "name": <"stencilMaskSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.stencilOp: {
    "length": <3, F, F, T>,
    "name": <"stencilOp", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.stencilOpSeparate: {
    "length": <4, F, F, T>,
    "name": <"stencilOpSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.texParameterf: {
    "length": <3, F, F, T>,
    "name": <"texParameterf", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.texParameteri: {
    "length": <3, F, F, T>,
    "name": <"texParameteri", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.texImage2D: {
    "length": <6, F, F, T>,
    "name": <"texImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.texSubImage2D: {
    "length": <7, F, F, T>,
    "name": <"texSubImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform1f: {
    "length": <2, F, F, T>,
    "name": <"uniform1f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform1fv: {
    "length": <2, F, F, T>,
    "name": <"uniform1fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform1i: {
    "length": <2, F, F, T>,
    "name": <"uniform1i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform1iv: {
    "length": <2, F, F, T>,
    "name": <"uniform1iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform2f: {
    "length": <3, F, F, T>,
    "name": <"uniform2f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform2fv: {
    "length": <2, F, F, T>,
    "name": <"uniform2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform2i: {
    "length": <3, F, F, T>,
    "name": <"uniform2i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform2iv: {
    "length": <2, F, F, T>,
    "name": <"uniform2iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform3f: {
    "length": <4, F, F, T>,
    "name": <"uniform3f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform3fv: {
    "length": <2, F, F, T>,
    "name": <"uniform3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform3i: {
    "length": <4, F, F, T>,
    "name": <"uniform3i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform3iv: {
    "length": <2, F, F, T>,
    "name": <"uniform3iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform4f: {
    "length": <5, F, F, T>,
    "name": <"uniform4f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform4fv: {
    "length": <2, F, F, T>,
    "name": <"uniform4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform4i: {
    "length": <5, F, F, T>,
    "name": <"uniform4i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniform4iv: {
    "length": <2, F, F, T>,
    "name": <"uniform4iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniformMatrix2fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniformMatrix3fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.uniformMatrix4fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.useProgram: {
    "length": <1, F, F, T>,
    "name": <"useProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.validateProgram: {
    "length": <1, F, F, T>,
    "name": <"validateProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib1f: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib1f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib1fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib1fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib2f: {
    "length": <3, F, F, T>,
    "name": <"vertexAttrib2f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib2fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib3f: {
    "length": <4, F, F, T>,
    "name": <"vertexAttrib3f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib3fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib4f: {
    "length": <5, F, F, T>,
    "name": <"vertexAttrib4f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttrib4fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.vertexAttribPointer: {
    "length": <6, F, F, T>,
    "name": <"vertexAttribPointer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderingContext.prototype.viewport: {
    "length": <4, F, F, T>,
    "name": <"viewport", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D: {
    "length": <0, F, F, T>,
    "name": <"Path2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Path2D.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype: {
    "closePath": <#Global.Path2D.prototype.closePath, T, T, T>,
    "moveTo": <#Global.Path2D.prototype.moveTo, T, T, T>,
    "lineTo": <#Global.Path2D.prototype.lineTo, T, T, T>,
    "quadraticCurveTo": <#Global.Path2D.prototype.quadraticCurveTo, T, T, T>,
    "bezierCurveTo": <#Global.Path2D.prototype.bezierCurveTo, T, T, T>,
    "arcTo": <#Global.Path2D.prototype.arcTo, T, T, T>,
    "rect": <#Global.Path2D.prototype.rect, T, T, T>,
    "arc": <#Global.Path2D.prototype.arc, T, T, T>,
    "ellipse": <#Global.Path2D.prototype.ellipse, T, T, T>,
    "constructor": <#Global.Path2D, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Path2D.prototype.closePath: {
    "length": <0, F, F, T>,
    "name": <"closePath", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.moveTo: {
    "length": <2, F, F, T>,
    "name": <"moveTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.lineTo: {
    "length": <2, F, F, T>,
    "name": <"lineTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.quadraticCurveTo: {
    "length": <4, F, F, T>,
    "name": <"quadraticCurveTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.bezierCurveTo: {
    "length": <6, F, F, T>,
    "name": <"bezierCurveTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.arcTo: {
    "length": <5, F, F, T>,
    "name": <"arcTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.rect: {
    "length": <4, F, F, T>,
    "name": <"rect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.arc: {
    "length": <5, F, F, T>,
    "name": <"arc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Path2D.prototype.ellipse: {
    "length": <7, F, F, T>,
    "name": <"ellipse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CountQueuingStrategy: {
    "length": <1, F, F, T>,
    "name": <"CountQueuingStrategy", F, F, T>,
    "prototype": <#Global.CountQueuingStrategy.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CountQueuingStrategy.prototype: {
    "constructor": <#Global.CountQueuingStrategy, T, F, T>,
    "size": <#Global.CountQueuingStrategy.prototype.size, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CountQueuingStrategy.prototype.size: {
    "length": <1, F, F, T>,
    "name": <"size", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasPattern: {
    "length": <0, F, F, T>,
    "name": <"CanvasPattern", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CanvasPattern.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CanvasPattern.prototype: {
    "constructor": <#Global.CanvasPattern, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CanvasGradient: {
    "length": <0, F, F, T>,
    "name": <"CanvasGradient", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CanvasGradient.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CanvasGradient.prototype: {
    "addColorStop": <#Global.CanvasGradient.prototype.addColorStop, T, T, T>,
    "constructor": <#Global.CanvasGradient, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CanvasGradient.prototype.addColorStop: {
    "length": <2, F, F, T>,
    "name": <"addColorStop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisUtterance: {
    "length": <0, F, F, T>,
    "name": <"SpeechSynthesisUtterance", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SpeechSynthesisUtterance.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisUtterance.prototype: {
    "text": <undefined, T, T, T>,
    "lang": <undefined, T, T, T>,
    "voice": <undefined, T, T, T>,
    "volume": <undefined, T, T, T>,
    "rate": <undefined, T, T, T>,
    "pitch": <undefined, T, T, T>,
    "onstart": <undefined, T, T, T>,
    "onend": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onpause": <undefined, T, T, T>,
    "onresume": <undefined, T, T, T>,
    "onmark": <undefined, T, T, T>,
    "onboundary": <undefined, T, T, T>,
    "constructor": <#Global.SpeechSynthesisUtterance, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.WeakMap: {
    "length": <0, F, F, T>,
    "name": <"WeakMap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WeakMap.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WeakMap.prototype: {
    "constructor": <#Global.WeakMap, T, F, T>,
    "get": <#Global.WeakMap.prototype.get, T, F, T>,
    "set": <#Global.WeakMap.prototype.set, T, F, T>,
    "has": <#Global.WeakMap.prototype.has, T, F, T>,
    "delete": <#Global.WeakMap.prototype.delete, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WeakMap.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WeakMap.prototype.set: {
    "length": <2, F, F, T>,
    "name": <"set", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WeakMap.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WeakMap.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisEvent: {
    "length": <0, F, F, T>,
    "name": <"SpeechSynthesisEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SpeechSynthesisEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisEvent.prototype: {
    "utterance": <undefined, T, T, T>,
    "charIndex": <undefined, T, T, T>,
    "elapsedTime": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "constructor": <#Global.SpeechSynthesisEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SpeechSynthesisEvent.prototype.[[Prototype]]: {
    "NONE": <0, F, T, F>,
    "CAPTURING_PHASE": <1, F, T, F>,
    "AT_TARGET": <2, F, T, F>,
    "BUBBLING_PHASE": <3, F, T, F>,
    "MOUSEDOWN": <1, F, T, F>,
    "MOUSEUP": <2, F, T, F>,
    "MOUSEOVER": <4, F, T, F>,
    "MOUSEOUT": <8, F, T, F>,
    "MOUSEMOVE": <16, F, T, F>,
    "MOUSEDRAG": <32, F, T, F>,
    "CLICK": <64, F, T, F>,
    "DBLCLICK": <128, F, T, F>,
    "KEYDOWN": <256, F, T, F>,
    "KEYUP": <512, F, T, F>,
    "KEYPRESS": <1024, F, T, F>,
    "DRAGDROP": <2048, F, T, F>,
    "FOCUS": <4096, F, T, F>,
    "BLUR": <8192, F, T, F>,
    "SELECT": <16384, F, T, F>,
    "CHANGE": <32768, F, T, F>,
    "type": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "currentTarget": <undefined, T, T, T>,
    "eventPhase": <undefined, T, T, T>,
    "bubbles": <undefined, T, T, T>,
    "cancelable": <undefined, T, T, T>,
    "defaultPrevented": <undefined, T, T, T>,
    "timeStamp": <undefined, T, T, T>,
    "srcElement": <undefined, T, T, T>,
    "returnValue": <undefined, T, T, T>,
    "cancelBubble": <undefined, T, T, T>,
    "path": <undefined, T, T, T>,
    "stopPropagation": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]].stopPropagation, T, T, T>,
    "stopImmediatePropagation": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]].stopImmediatePropagation, T, T, T>,
    "preventDefault": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]].preventDefault, T, T, T>,
    "initEvent": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]].initEvent, T, T, T>,
    "composed": <undefined, T, T, T>,
    "composedPath": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]].composedPath, T, T, T>,
    "constructor": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SpeechSynthesisEvent.prototype.[[Prototype]].stopPropagation: {
    "length": <0, F, F, T>,
    "name": <"stopPropagation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisEvent.prototype.[[Prototype]].stopImmediatePropagation: {
    "length": <0, F, F, T>,
    "name": <"stopImmediatePropagation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisEvent.prototype.[[Prototype]].preventDefault: {
    "length": <0, F, F, T>,
    "name": <"preventDefault", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisEvent.prototype.[[Prototype]].initEvent: {
    "length": <0, F, F, T>,
    "name": <"initEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisEvent.prototype.[[Prototype]].composedPath: {
    "length": <0, F, F, T>,
    "name": <"composedPath", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor: {
    "length": <1, F, F, T>,
    "name": <"Event", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SpeechSynthesisEvent.prototype.[[Prototype]], F, F, F>,
    "NONE": <0, F, T, F>,
    "CAPTURING_PHASE": <1, F, T, F>,
    "AT_TARGET": <2, F, T, F>,
    "BUBBLING_PHASE": <3, F, T, F>,
    "MOUSEDOWN": <1, F, T, F>,
    "MOUSEUP": <2, F, T, F>,
    "MOUSEOVER": <4, F, T, F>,
    "MOUSEOUT": <8, F, T, F>,
    "MOUSEMOVE": <16, F, T, F>,
    "MOUSEDRAG": <32, F, T, F>,
    "CLICK": <64, F, T, F>,
    "DBLCLICK": <128, F, T, F>,
    "KEYDOWN": <256, F, T, F>,
    "KEYUP": <512, F, T, F>,
    "KEYPRESS": <1024, F, T, F>,
    "DRAGDROP": <2048, F, T, F>,
    "FOCUS": <4096, F, T, F>,
    "BLUR": <8192, F, T, F>,
    "SELECT": <16384, F, T, F>,
    "CHANGE": <32768, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.speechSynthesis: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.speechSynthesis.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.speechSynthesis.[[Prototype]]: {
    "pending": <undefined, T, T, T>,
    "speaking": <undefined, T, T, T>,
    "paused": <undefined, T, T, T>,
    "onvoiceschanged": <undefined, T, T, T>,
    "speak": <#Global.speechSynthesis.[[Prototype]].speak, T, T, T>,
    "cancel": <#Global.speechSynthesis.[[Prototype]].cancel, T, T, T>,
    "pause": <#Global.speechSynthesis.[[Prototype]].pause, T, T, T>,
    "resume": <#Global.speechSynthesis.[[Prototype]].resume, T, T, T>,
    "getVoices": <#Global.speechSynthesis.[[Prototype]].getVoices, T, T, T>,
    "constructor": <#Global.speechSynthesis.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.speechSynthesis.[[Prototype]].speak: {
    "length": <1, F, F, T>,
    "name": <"speak", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.speechSynthesis.[[Prototype]].cancel: {
    "length": <0, F, F, T>,
    "name": <"cancel", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.speechSynthesis.[[Prototype]].pause: {
    "length": <0, F, F, T>,
    "name": <"pause", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.speechSynthesis.[[Prototype]].resume: {
    "length": <0, F, F, T>,
    "name": <"resume", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.speechSynthesis.[[Prototype]].getVoices: {
    "length": <0, F, F, T>,
    "name": <"getVoices", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.speechSynthesis.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"SpeechSynthesis", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.speechSynthesis.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechRecognitionEvent: {
    "length": <1, F, F, T>,
    "name": <"SpeechRecognitionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitSpeechRecognitionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechRecognitionEvent.prototype: {
    "resultIndex": <undefined, T, T, T>,
    "results": <undefined, T, T, T>,
    "interpretation": <undefined, T, T, T>,
    "emma": <undefined, T, T, T>,
    "constructor": <#Global.webkitSpeechRecognitionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.escape: {
    "length": <1, F, F, T>,
    "name": <"escape", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechRecognitionError: {
    "length": <1, F, F, T>,
    "name": <"SpeechRecognitionError", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitSpeechRecognitionError.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechRecognitionError.prototype: {
    "error": <undefined, T, T, T>,
    "message": <undefined, T, T, T>,
    "constructor": <#Global.webkitSpeechRecognitionError, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.webkitSpeechRecognition: {
    "length": <0, F, F, T>,
    "name": <"SpeechRecognition", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitSpeechRecognition.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechRecognition.prototype: {
    "grammars": <undefined, T, T, T>,
    "lang": <undefined, T, T, T>,
    "continuous": <undefined, T, T, T>,
    "interimResults": <undefined, T, T, T>,
    "maxAlternatives": <undefined, T, T, T>,
    "onaudiostart": <undefined, T, T, T>,
    "onsoundstart": <undefined, T, T, T>,
    "onspeechstart": <undefined, T, T, T>,
    "onspeechend": <undefined, T, T, T>,
    "onsoundend": <undefined, T, T, T>,
    "onaudioend": <undefined, T, T, T>,
    "onresult": <undefined, T, T, T>,
    "onnomatch": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onstart": <undefined, T, T, T>,
    "onend": <undefined, T, T, T>,
    "start": <#Global.webkitSpeechRecognition.prototype.start, T, T, T>,
    "stop": <#Global.webkitSpeechRecognition.prototype.stop, T, T, T>,
    "abort": <#Global.webkitSpeechRecognition.prototype.abort, T, T, T>,
    "constructor": <#Global.webkitSpeechRecognition, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.webkitSpeechRecognition.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechRecognition.prototype.stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechRecognition.prototype.abort: {
    "length": <0, F, F, T>,
    "name": <"abort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechGrammarList: {
    "length": <0, F, F, T>,
    "name": <"SpeechGrammarList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitSpeechGrammarList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechGrammarList.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.webkitSpeechGrammarList.prototype.item, T, T, T>,
    "addFromUri": <#Global.webkitSpeechGrammarList.prototype.addFromUri, T, T, T>,
    "addFromString": <#Global.webkitSpeechGrammarList.prototype.addFromString, T, T, T>,
    "constructor": <#Global.webkitSpeechGrammarList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.webkitSpeechGrammarList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechGrammarList.prototype.addFromUri: {
    "length": <1, F, F, T>,
    "name": <"addFromUri", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechGrammarList.prototype.addFromString: {
    "length": <1, F, F, T>,
    "name": <"addFromString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechGrammar: {
    "length": <0, F, F, T>,
    "name": <"SpeechGrammar", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitSpeechGrammar.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitSpeechGrammar.prototype: {
    "src": <undefined, T, T, T>,
    "weight": <undefined, T, T, T>,
    "constructor": <#Global.webkitSpeechGrammar, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.RemotePlayback: {
    "length": <0, F, F, T>,
    "name": <"RemotePlayback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RemotePlayback.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RemotePlayback.prototype: {
    "state": <undefined, T, T, T>,
    "onconnecting": <undefined, T, T, T>,
    "onconnect": <undefined, T, T, T>,
    "ondisconnect": <undefined, T, T, T>,
    "watchAvailability": <#Global.RemotePlayback.prototype.watchAvailability, T, T, T>,
    "cancelWatchAvailability": <#Global.RemotePlayback.prototype.cancelWatchAvailability, T, T, T>,
    "prompt": <#Global.RemotePlayback.prototype.prompt, T, T, T>,
    "constructor": <#Global.RemotePlayback, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.RemotePlayback.prototype.watchAvailability: {
    "length": <1, F, F, T>,
    "name": <"watchAvailability", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RemotePlayback.prototype.cancelWatchAvailability: {
    "length": <0, F, F, T>,
    "name": <"cancelWatchAvailability", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RemotePlayback.prototype.prompt: {
    "length": <0, F, F, T>,
    "name": <"prompt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array: {
    "length": <3, F, F, T>,
    "name": <"Uint8Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Uint8Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <1, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype: {
    "constructor": <#Global.Uint8Array, T, F, T>,
    "BYTES_PER_ELEMENT": <1, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Uint8Array.prototype.[[Prototype]]: {
    "constructor": <#Global.Uint8Array.prototype.[[Prototype]].constructor, T, F, T>,
    "buffer": <undefined, T, F, T>,
    "byteLength": <undefined, T, F, T>,
    "byteOffset": <undefined, T, F, T>,
    "length": <undefined, T, F, T>,
    "entries": <#Global.Uint8Array.prototype.[[Prototype]].entries, T, F, T>,
    "keys": <#Global.Uint8Array.prototype.[[Prototype]].keys, T, F, T>,
    "values": <#Global.Uint8Array.prototype.[[Prototype]].values, T, F, T>,
    "subarray": <#Global.Uint8Array.prototype.[[Prototype]].subarray, T, F, T>,
    "set": <#Global.Uint8Array.prototype.[[Prototype]].set, T, F, T>,
    "copyWithin": <#Global.Uint8Array.prototype.[[Prototype]].copyWithin, T, F, T>,
    "every": <#Global.Uint8Array.prototype.[[Prototype]].every, T, F, T>,
    "fill": <#Global.Uint8Array.prototype.[[Prototype]].fill, T, F, T>,
    "filter": <#Global.Uint8Array.prototype.[[Prototype]].filter, T, F, T>,
    "find": <#Global.Uint8Array.prototype.[[Prototype]].find, T, F, T>,
    "findIndex": <#Global.Uint8Array.prototype.[[Prototype]].findIndex, T, F, T>,
    "includes": <#Global.Uint8Array.prototype.[[Prototype]].includes, T, F, T>,
    "indexOf": <#Global.Uint8Array.prototype.[[Prototype]].indexOf, T, F, T>,
    "join": <#Global.Uint8Array.prototype.[[Prototype]].join, T, F, T>,
    "lastIndexOf": <#Global.Uint8Array.prototype.[[Prototype]].lastIndexOf, T, F, T>,
    "forEach": <#Global.Uint8Array.prototype.[[Prototype]].forEach, T, F, T>,
    "map": <#Global.Uint8Array.prototype.[[Prototype]].map, T, F, T>,
    "reduce": <#Global.Uint8Array.prototype.[[Prototype]].reduce, T, F, T>,
    "reduceRight": <#Global.Uint8Array.prototype.[[Prototype]].reduceRight, T, F, T>,
    "reverse": <#Global.Uint8Array.prototype.[[Prototype]].reverse, T, F, T>,
    "slice": <#Global.Uint8Array.prototype.[[Prototype]].slice, T, F, T>,
    "some": <#Global.Uint8Array.prototype.[[Prototype]].some, T, F, T>,
    "sort": <#Global.Uint8Array.prototype.[[Prototype]].sort, T, F, T>,
    "toLocaleString": <#Global.Uint8Array.prototype.[[Prototype]].toLocaleString, T, F, T>,
    "toString": <#Array.prototype.toString, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Uint8Array.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"TypedArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Uint8Array.prototype.[[Prototype]], F, F, F>,
    "from": <#Global.Uint8Array.prototype.[[Prototype]].constructor.from, T, F, T>,
    "of": <#Global.Uint8Array.prototype.[[Prototype]].constructor.of, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].constructor.from: {
    "length": <1, F, F, T>,
    "name": <"from", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].constructor.of: {
    "length": <0, F, F, T>,
    "name": <"of", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].subarray: {
    "length": <2, F, F, T>,
    "name": <"subarray", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].set: {
    "length": <1, F, F, T>,
    "name": <"set", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].copyWithin: {
    "length": <2, F, F, T>,
    "name": <"copyWithin", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].every: {
    "length": <1, F, F, T>,
    "name": <"every", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].fill: {
    "length": <1, F, F, T>,
    "name": <"fill", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].filter: {
    "length": <1, F, F, T>,
    "name": <"filter", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].find: {
    "length": <1, F, F, T>,
    "name": <"find", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].findIndex: {
    "length": <1, F, F, T>,
    "name": <"findIndex", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].includes: {
    "length": <1, F, F, T>,
    "name": <"includes", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].indexOf: {
    "length": <1, F, F, T>,
    "name": <"indexOf", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].join: {
    "length": <1, F, F, T>,
    "name": <"join", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].lastIndexOf: {
    "length": <1, F, F, T>,
    "name": <"lastIndexOf", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].map: {
    "length": <1, F, F, T>,
    "name": <"map", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].reduce: {
    "length": <1, F, F, T>,
    "name": <"reduce", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].reduceRight: {
    "length": <1, F, F, T>,
    "name": <"reduceRight", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].reverse: {
    "length": <0, F, F, T>,
    "name": <"reverse", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].slice: {
    "length": <2, F, F, T>,
    "name": <"slice", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].some: {
    "length": <1, F, F, T>,
    "name": <"some", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].sort: {
    "length": <1, F, F, T>,
    "name": <"sort", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint8Array.prototype.[[Prototype]].toLocaleString: {
    "length": <0, F, F, T>,
    "name": <"toLocaleString", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PushSubscriptionOptions: {
    "length": <0, F, F, T>,
    "name": <"PushSubscriptionOptions", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PushSubscriptionOptions.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PushSubscriptionOptions.prototype: {
    "userVisibleOnly": <undefined, T, T, T>,
    "applicationServerKey": <undefined, T, T, T>,
    "constructor": <#Global.PushSubscriptionOptions, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PushSubscription: {
    "length": <0, F, F, T>,
    "name": <"PushSubscription", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PushSubscription.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PushSubscription.prototype: {
    "endpoint": <undefined, T, T, T>,
    "options": <undefined, T, T, T>,
    "getKey": <#Global.PushSubscription.prototype.getKey, T, T, T>,
    "unsubscribe": <#Global.PushSubscription.prototype.unsubscribe, T, T, T>,
    "toJSON": <#Global.PushSubscription.prototype.toJSON, T, T, T>,
    "constructor": <#Global.PushSubscription, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PushSubscription.prototype.getKey: {
    "length": <1, F, F, T>,
    "name": <"getKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PushSubscription.prototype.unsubscribe: {
    "length": <0, F, F, T>,
    "name": <"unsubscribe", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PushSubscription.prototype.toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PushManager: {
    "length": <0, F, F, T>,
    "name": <"PushManager", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PushManager.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PushManager.prototype: {
    "subscribe": <#Global.PushManager.prototype.subscribe, T, T, T>,
    "getSubscription": <#Global.PushManager.prototype.getSubscription, T, T, T>,
    "permissionState": <#Global.PushManager.prototype.permissionState, T, T, T>,
    "constructor": <#Global.PushManager, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PushManager.prototype.subscribe: {
    "length": <0, F, F, T>,
    "name": <"subscribe", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PushManager.prototype.getSubscription: {
    "length": <0, F, F, T>,
    "name": <"getSubscription", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PushManager.prototype.permissionState: {
    "length": <0, F, F, T>,
    "name": <"permissionState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.unescape: {
    "length": <1, F, F, T>,
    "name": <"unescape", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PresentationRequest: {
    "length": <1, F, F, T>,
    "name": <"PresentationRequest", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PresentationRequest.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PresentationRequest.prototype: {
    "onconnectionavailable": <undefined, T, T, T>,
    "start": <#Global.PresentationRequest.prototype.start, T, T, T>,
    "reconnect": <#Global.PresentationRequest.prototype.reconnect, T, T, T>,
    "getAvailability": <#Global.PresentationRequest.prototype.getAvailability, T, T, T>,
    "constructor": <#Global.PresentationRequest, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PresentationRequest.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PresentationRequest.prototype.reconnect: {
    "length": <1, F, F, T>,
    "name": <"reconnect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PresentationRequest.prototype.getAvailability: {
    "length": <0, F, F, T>,
    "name": <"getAvailability", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Presentation: {
    "length": <0, F, F, T>,
    "name": <"Presentation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Presentation.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Presentation.prototype: {
    "defaultRequest": <undefined, T, T, T>,
    "constructor": <#Global.Presentation, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Int32Array: {
    "length": <3, F, F, T>,
    "name": <"Int32Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Int32Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <4, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Int32Array.prototype: {
    "constructor": <#Global.Int32Array, T, F, T>,
    "BYTES_PER_ELEMENT": <4, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PresentationConnection: {
    "length": <0, F, F, T>,
    "name": <"PresentationConnection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PresentationConnection.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PresentationConnection.prototype: {
    "id": <undefined, T, T, T>,
    "state": <undefined, T, T, T>,
    "onconnect": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "onterminate": <undefined, T, T, T>,
    "binaryType": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "close": <#Global.PresentationConnection.prototype.close, T, T, T>,
    "terminate": <#Global.PresentationConnection.prototype.terminate, T, T, T>,
    "send": <#Global.PresentationConnection.prototype.send, T, T, T>,
    "constructor": <#Global.PresentationConnection, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PresentationConnection.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PresentationConnection.prototype.terminate: {
    "length": <0, F, F, T>,
    "name": <"terminate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PresentationConnection.prototype.send: {
    "length": <1, F, F, T>,
    "name": <"send", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Symbol: {
    "length": <0, F, F, T>,
    "name": <"Symbol", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Symbol.prototype, F, F, F>,
    "hasInstance": <"", F, F, F>,
    "isConcatSpreadable": <"", F, F, F>,
    "iterator": <"", F, F, F>,
    "match": <"", F, F, F>,
    "replace": <"", F, F, F>,
    "search": <"", F, F, F>,
    "species": <"", F, F, F>,
    "split": <"", F, F, F>,
    "toPrimitive": <"", F, F, F>,
    "toStringTag": <"", F, F, F>,
    "unscopables": <"", F, F, F>,
    "for": <#Global.Symbol.for, T, F, T>,
    "keyFor": <#Global.Symbol.keyFor, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Symbol.prototype: {
    "constructor": <#Global.Symbol, T, F, T>,
    "toString": <#Global.Symbol.prototype.toString, T, F, T>,
    "valueOf": <#Global.Symbol.prototype.valueOf, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Symbol.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Symbol.prototype.valueOf: {
    "length": <0, F, F, T>,
    "name": <"valueOf", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Symbol.for: {
    "length": <1, F, F, T>,
    "name": <"for", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Symbol.keyFor: {
    "length": <1, F, F, T>,
    "name": <"keyFor", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PresentationConnectionCloseEvent: {
    "length": <2, F, F, T>,
    "name": <"PresentationConnectionCloseEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PresentationConnectionCloseEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PresentationConnectionCloseEvent.prototype: {
    "reason": <undefined, T, T, T>,
    "message": <undefined, T, T, T>,
    "constructor": <#Global.PresentationConnectionCloseEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PresentationConnectionAvailableEvent: {
    "length": <2, F, F, T>,
    "name": <"PresentationConnectionAvailableEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PresentationConnectionAvailableEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PresentationConnectionAvailableEvent.prototype: {
    "connection": <undefined, T, T, T>,
    "constructor": <#Global.PresentationConnectionAvailableEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PresentationAvailability: {
    "length": <0, F, F, T>,
    "name": <"PresentationAvailability", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PresentationAvailability.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PresentationAvailability.prototype: {
    "value": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "constructor": <#Global.PresentationAvailability, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Permissions: {
    "length": <0, F, F, T>,
    "name": <"Permissions", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Permissions.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Permissions.prototype: {
    "query": <#Global.Permissions.prototype.query, T, T, T>,
    "constructor": <#Global.Permissions, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Permissions.prototype.query: {
    "length": <1, F, F, T>,
    "name": <"query", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PermissionStatus: {
    "length": <0, F, F, T>,
    "name": <"PermissionStatus", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PermissionStatus.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PermissionStatus.prototype: {
    "state": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "constructor": <#Global.PermissionStatus, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Notification: {
    "length": <1, F, F, T>,
    "name": <"Notification", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Notification.prototype, F, F, F>,
    "permission": <"default", T, T, T>,
    "maxActions": <2, T, T, T>,
    "requestPermission": <#Global.Notification.requestPermission, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Notification.prototype: {
    "onclick": <undefined, T, T, T>,
    "onshow": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "title": <undefined, T, T, T>,
    "dir": <undefined, T, T, T>,
    "lang": <undefined, T, T, T>,
    "body": <undefined, T, T, T>,
    "tag": <undefined, T, T, T>,
    "icon": <undefined, T, T, T>,
    "vibrate": <undefined, T, T, T>,
    "timestamp": <undefined, T, T, T>,
    "renotify": <undefined, T, T, T>,
    "silent": <undefined, T, T, T>,
    "requireInteraction": <undefined, T, T, T>,
    "data": <undefined, T, T, T>,
    "actions": <undefined, T, T, T>,
    "close": <#Global.Notification.prototype.close, T, T, T>,
    "badge": <undefined, T, T, T>,
    "image": <undefined, T, T, T>,
    "constructor": <#Global.Notification, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Notification.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Notification.requestPermission: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.decodeURI: {
    [[Call]]: fun(6),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.decodeURIComponent: {
    [[Call]]: fun(7),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.encodeURI: {
    [[Call]]: fun(8),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.encodeURIComponent: {
    [[Call]]: fun(9),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.eval: {
    [[Call]]: fun(1),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.isFinite: {
    [[Call]]: fun(5),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.isNaN: {
    [[Call]]: fun(4),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.parseFloat: {
    [[Call]]: fun(3),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Global.parseInt: {
    [[Call]]: fun(2),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Global.CanvasCaptureMediaStreamTrack: {
    "length": <0, F, F, T>,
    "name": <"CanvasCaptureMediaStreamTrack", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CanvasCaptureMediaStreamTrack.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CanvasCaptureMediaStreamTrack.prototype: {
    "canvas": <undefined, T, T, T>,
    "requestFrame": <#Global.CanvasCaptureMediaStreamTrack.prototype.requestFrame, T, T, T>,
    "constructor": <#Global.CanvasCaptureMediaStreamTrack, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CanvasCaptureMediaStreamTrack.prototype.requestFrame: {
    "length": <0, F, F, T>,
    "name": <"requestFrame", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]]: {
    "kind": <undefined, T, T, T>,
    "id": <undefined, T, T, T>,
    "label": <undefined, T, T, T>,
    "enabled": <undefined, T, T, T>,
    "muted": <undefined, T, T, T>,
    "onmute": <undefined, T, T, T>,
    "onunmute": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "onended": <undefined, T, T, T>,
    "remote": <undefined, T, T, T>,
    "clone": <#Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].clone, T, T, T>,
    "stop": <#Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].stop, T, T, T>,
    "getConstraints": <#Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].getConstraints, T, T, T>,
    "constructor": <#Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].clone: {
    "length": <0, F, F, T>,
    "name": <"clone", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].getConstraints: {
    "length": <0, F, F, T>,
    "name": <"getConstraints", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"MediaStreamTrack", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CanvasCaptureMediaStreamTrack.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.caches: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.caches.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.caches.[[Prototype]]: {
    "match": <#Global.caches.[[Prototype]].match, T, T, T>,
    "has": <#Global.caches.[[Prototype]].has, T, T, T>,
    "open": <#Global.caches.[[Prototype]].open, T, T, T>,
    "delete": <#Global.caches.[[Prototype]].delete, T, T, T>,
    "keys": <#Global.caches.[[Prototype]].keys, T, T, T>,
    "constructor": <#Global.caches.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.caches.[[Prototype]].match: {
    "length": <1, F, F, T>,
    "name": <"match", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.caches.[[Prototype]].has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.caches.[[Prototype]].open: {
    "length": <1, F, F, T>,
    "name": <"open", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.caches.[[Prototype]].delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.caches.[[Prototype]].keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.caches.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"CacheStorage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.caches.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.StorageManager: {
    "length": <0, F, F, T>,
    "name": <"StorageManager", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.StorageManager.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.StorageManager.prototype: {
    "persisted": <#Global.StorageManager.prototype.persisted, T, T, T>,
    "constructor": <#Global.StorageManager, T, F, T>,
    "persist": <#Global.StorageManager.prototype.persist, T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.StorageManager.prototype.persisted: {
    "length": <0, F, F, T>,
    "name": <"persisted", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.StorageManager.prototype.persist: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SiteBoundCredential: {
    "length": <0, F, F, T>,
    "name": <"SiteBoundCredential", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SiteBoundCredential.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SiteBoundCredential.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SiteBoundCredential.prototype: {
    "name": <undefined, T, T, T>,
    "iconURL": <undefined, T, T, T>,
    "constructor": <#Global.SiteBoundCredential, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SiteBoundCredential.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SiteBoundCredential.prototype.[[Prototype]]: {
    "id": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "constructor": <#Global.SiteBoundCredential.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SiteBoundCredential.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"Credential", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SiteBoundCredential.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PasswordCredential: {
    "length": <1, F, F, T>,
    "name": <"PasswordCredential", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PasswordCredential.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SiteBoundCredential,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PasswordCredential.prototype: {
    "idName": <undefined, T, T, T>,
    "passwordName": <undefined, T, T, T>,
    "additionalData": <undefined, T, T, T>,
    "constructor": <#Global.PasswordCredential, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SiteBoundCredential.prototype,
    [[Class]]: "Object"
  },
  #Global.FederatedCredential: {
    "length": <1, F, F, T>,
    "name": <"FederatedCredential", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.FederatedCredential.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SiteBoundCredential,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.FederatedCredential.prototype: {
    "provider": <undefined, T, T, T>,
    "protocol": <undefined, T, T, T>,
    "constructor": <#Global.FederatedCredential, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SiteBoundCredential.prototype,
    [[Class]]: "Object"
  },
  #Global.CredentialsContainer: {
    "length": <0, F, F, T>,
    "name": <"CredentialsContainer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CredentialsContainer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CredentialsContainer.prototype: {
    "get": <#Global.CredentialsContainer.prototype.get, T, T, T>,
    "store": <#Global.CredentialsContainer.prototype.store, T, T, T>,
    "requireUserMediation": <#Global.CredentialsContainer.prototype.requireUserMediation, T, T, T>,
    "constructor": <#Global.CredentialsContainer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CredentialsContainer.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CredentialsContainer.prototype.store: {
    "length": <1, F, F, T>,
    "name": <"store", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CredentialsContainer.prototype.requireUserMediation: {
    "length": <0, F, F, T>,
    "name": <"requireUserMediation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BroadcastChannel: {
    "length": <1, F, F, T>,
    "name": <"BroadcastChannel", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BroadcastChannel.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BroadcastChannel.prototype: {
    "name": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "postMessage": <#Global.BroadcastChannel.prototype.postMessage, T, T, T>,
    "close": <#Global.BroadcastChannel.prototype.close, T, T, T>,
    "constructor": <#Global.BroadcastChannel, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BroadcastChannel.prototype.postMessage: {
    "length": <1, F, F, T>,
    "name": <"postMessage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BroadcastChannel.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Promise: {
    "length": <1, F, F, T>,
    "name": <"Promise", F, F, T>,
    "prototype": <#Global.Promise.prototype, F, F, F>,
    "reject": <#Global.Promise.reject, T, F, T>,
    "all": <#Global.Promise.all, T, F, T>,
    "race": <#Global.Promise.race, T, F, T>,
    "resolve": <#Global.Promise.resolve, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Promise.prototype: {
    "constructor": <#Global.Promise, T, F, T>,
    "then": <#Global.Promise.prototype.then, T, F, T>,
    "catch": <#Global.Promise.prototype.catch, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Promise.prototype.then: {
    "length": <2, F, F, T>,
    "name": <"then", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Promise.prototype.catch: {
    "length": <1, F, F, T>,
    "name": <"catch", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Promise.reject: {
    "length": <1, F, F, T>,
    "name": <"reject", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Promise.all: {
    "length": <1, F, F, T>,
    "name": <"all", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Promise.race: {
    "length": <1, F, F, T>,
    "name": <"race", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Promise.resolve: {
    "length": <1, F, F, T>,
    "name": <"resolve", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SyncManager: {
    "length": <0, F, F, T>,
    "name": <"SyncManager", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SyncManager.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SyncManager.prototype: {
    "register": <#Global.SyncManager.prototype.register, T, T, T>,
    "getTags": <#Global.SyncManager.prototype.getTags, T, T, T>,
    "constructor": <#Global.SyncManager, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SyncManager.prototype.register: {
    "length": <1, F, F, T>,
    "name": <"register", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SyncManager.prototype.getTags: {
    "length": <0, F, F, T>,
    "name": <"getTags", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection: {
    "length": <0, F, F, T>,
    "name": <"RTCPeerConnection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitRTCPeerConnection.prototype, F, F, F>,
    "generateCertificate": <#Global.webkitRTCPeerConnection.generateCertificate, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype: {
    "localDescription": <undefined, T, T, T>,
    "remoteDescription": <undefined, T, T, T>,
    "signalingState": <undefined, T, T, T>,
    "iceGatheringState": <undefined, T, T, T>,
    "iceConnectionState": <undefined, T, T, T>,
    "onnegotiationneeded": <undefined, T, T, T>,
    "onicecandidate": <undefined, T, T, T>,
    "onsignalingstatechange": <undefined, T, T, T>,
    "oniceconnectionstatechange": <undefined, T, T, T>,
    "ondatachannel": <undefined, T, T, T>,
    "onaddstream": <undefined, T, T, T>,
    "onremovestream": <undefined, T, T, T>,
    "close": <#Global.webkitRTCPeerConnection.prototype.close, T, T, T>,
    "createOffer": <#Global.webkitRTCPeerConnection.prototype.createOffer, T, T, T>,
    "createAnswer": <#Global.webkitRTCPeerConnection.prototype.createAnswer, T, T, T>,
    "setLocalDescription": <#Global.webkitRTCPeerConnection.prototype.setLocalDescription, T, T, T>,
    "setRemoteDescription": <#Global.webkitRTCPeerConnection.prototype.setRemoteDescription, T, T, T>,
    "addIceCandidate": <#Global.webkitRTCPeerConnection.prototype.addIceCandidate, T, T, T>,
    "createDataChannel": <#Global.webkitRTCPeerConnection.prototype.createDataChannel, T, T, T>,
    "updateIce": <#Global.webkitRTCPeerConnection.prototype.updateIce, T, T, T>,
    "getLocalStreams": <#Global.webkitRTCPeerConnection.prototype.getLocalStreams, T, T, T>,
    "getRemoteStreams": <#Global.webkitRTCPeerConnection.prototype.getRemoteStreams, T, T, T>,
    "getStreamById": <#Global.webkitRTCPeerConnection.prototype.getStreamById, T, T, T>,
    "addStream": <#Global.webkitRTCPeerConnection.prototype.addStream, T, T, T>,
    "removeStream": <#Global.webkitRTCPeerConnection.prototype.removeStream, T, T, T>,
    "createDTMFSender": <#Global.webkitRTCPeerConnection.prototype.createDTMFSender, T, T, T>,
    "getStats": <#Global.webkitRTCPeerConnection.prototype.getStats, T, T, T>,
    "constructor": <#Global.webkitRTCPeerConnection, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.webkitRTCPeerConnection.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.createOffer: {
    "length": <0, F, F, T>,
    "name": <"createOffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.createAnswer: {
    "length": <0, F, F, T>,
    "name": <"createAnswer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.setLocalDescription: {
    "length": <1, F, F, T>,
    "name": <"setLocalDescription", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.setRemoteDescription: {
    "length": <1, F, F, T>,
    "name": <"setRemoteDescription", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.addIceCandidate: {
    "length": <1, F, F, T>,
    "name": <"addIceCandidate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.createDataChannel: {
    "length": <1, F, F, T>,
    "name": <"createDataChannel", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.updateIce: {
    "length": <0, F, F, T>,
    "name": <"updateIce", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.getLocalStreams: {
    "length": <0, F, F, T>,
    "name": <"getLocalStreams", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.getRemoteStreams: {
    "length": <0, F, F, T>,
    "name": <"getRemoteStreams", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.getStreamById: {
    "length": <1, F, F, T>,
    "name": <"getStreamById", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.addStream: {
    "length": <1, F, F, T>,
    "name": <"addStream", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.removeStream: {
    "length": <1, F, F, T>,
    "name": <"removeStream", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.createDTMFSender: {
    "length": <1, F, F, T>,
    "name": <"createDTMFSender", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.prototype.getStats: {
    "length": <2, F, F, T>,
    "name": <"getStats", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRTCPeerConnection.generateCertificate: {
    "length": <1, F, F, T>,
    "name": <"generateCertificate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Float64Array: {
    "length": <3, F, F, T>,
    "name": <"Float64Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Float64Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <8, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Float64Array.prototype: {
    "constructor": <#Global.Float64Array, T, F, T>,
    "BYTES_PER_ELEMENT": <8, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.webkitMediaStream: {
    "length": <0, F, F, T>,
    "name": <"MediaStream", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitMediaStream.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitMediaStream.prototype: {
    "id": <undefined, T, T, T>,
    "active": <undefined, T, T, T>,
    "onaddtrack": <undefined, T, T, T>,
    "onremovetrack": <undefined, T, T, T>,
    "onactive": <undefined, T, T, T>,
    "oninactive": <undefined, T, T, T>,
    "getAudioTracks": <#Global.webkitMediaStream.prototype.getAudioTracks, T, T, T>,
    "getVideoTracks": <#Global.webkitMediaStream.prototype.getVideoTracks, T, T, T>,
    "getTracks": <#Global.webkitMediaStream.prototype.getTracks, T, T, T>,
    "getTrackById": <#Global.webkitMediaStream.prototype.getTrackById, T, T, T>,
    "addTrack": <#Global.webkitMediaStream.prototype.addTrack, T, T, T>,
    "removeTrack": <#Global.webkitMediaStream.prototype.removeTrack, T, T, T>,
    "clone": <#Global.webkitMediaStream.prototype.clone, T, T, T>,
    "constructor": <#Global.webkitMediaStream, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.webkitMediaStream.prototype.getAudioTracks: {
    "length": <0, F, F, T>,
    "name": <"getAudioTracks", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitMediaStream.prototype.getVideoTracks: {
    "length": <0, F, F, T>,
    "name": <"getVideoTracks", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitMediaStream.prototype.getTracks: {
    "length": <0, F, F, T>,
    "name": <"getTracks", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitMediaStream.prototype.getTrackById: {
    "length": <1, F, F, T>,
    "name": <"getTrackById", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitMediaStream.prototype.addTrack: {
    "length": <1, F, F, T>,
    "name": <"addTrack", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitMediaStream.prototype.removeTrack: {
    "length": <1, F, F, T>,
    "name": <"removeTrack", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitMediaStream.prototype.clone: {
    "length": <0, F, F, T>,
    "name": <"clone", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebSocket: {
    "length": <1, F, F, T>,
    "name": <"WebSocket", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebSocket.prototype, F, F, F>,
    "CONNECTING": <0, F, T, F>,
    "OPEN": <1, F, T, F>,
    "CLOSING": <2, F, T, F>,
    "CLOSED": <3, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebSocket.prototype: {
    "CONNECTING": <0, F, T, F>,
    "OPEN": <1, F, T, F>,
    "CLOSING": <2, F, T, F>,
    "CLOSED": <3, F, T, F>,
    "url": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "bufferedAmount": <undefined, T, T, T>,
    "onopen": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "extensions": <undefined, T, T, T>,
    "protocol": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "binaryType": <undefined, T, T, T>,
    "close": <#Global.WebSocket.prototype.close, T, T, T>,
    "send": <#Global.WebSocket.prototype.send, T, T, T>,
    "constructor": <#Global.WebSocket, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.WebSocket.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebSocket.prototype.send: {
    "length": <1, F, F, T>,
    "name": <"send", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLVertexArrayObject: {
    "length": <0, F, F, T>,
    "name": <"WebGLVertexArrayObject", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLVertexArrayObject.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLVertexArrayObject.prototype: {
    "constructor": <#Global.WebGLVertexArrayObject, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Int16Array: {
    "length": <3, F, F, T>,
    "name": <"Int16Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Int16Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <2, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Int16Array.prototype: {
    "constructor": <#Global.Int16Array, T, F, T>,
    "BYTES_PER_ELEMENT": <2, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.WebGLUniformLocation: {
    "length": <0, F, F, T>,
    "name": <"WebGLUniformLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLUniformLocation.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLUniformLocation.prototype: {
    "constructor": <#Global.WebGLUniformLocation, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLTransformFeedback: {
    "length": <0, F, F, T>,
    "name": <"WebGLTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLTransformFeedback.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLTransformFeedback.prototype: {
    "constructor": <#Global.WebGLTransformFeedback, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLTexture: {
    "length": <0, F, F, T>,
    "name": <"WebGLTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLTexture.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLTexture.prototype: {
    "constructor": <#Global.WebGLTexture, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLSync: {
    "length": <0, F, F, T>,
    "name": <"WebGLSync", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLSync.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLSync.prototype: {
    "constructor": <#Global.WebGLSync, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLShaderPrecisionFormat: {
    "length": <0, F, F, T>,
    "name": <"WebGLShaderPrecisionFormat", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLShaderPrecisionFormat.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLShaderPrecisionFormat.prototype: {
    "rangeMin": <undefined, T, T, T>,
    "rangeMax": <undefined, T, T, T>,
    "precision": <undefined, T, T, T>,
    "constructor": <#Global.WebGLShaderPrecisionFormat, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLShader: {
    "length": <0, F, F, T>,
    "name": <"WebGLShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLShader.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLShader.prototype: {
    "constructor": <#Global.WebGLShader, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLSampler: {
    "length": <0, F, F, T>,
    "name": <"WebGLSampler", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLSampler.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLSampler.prototype: {
    "constructor": <#Global.WebGLSampler, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLRenderbuffer: {
    "length": <0, F, F, T>,
    "name": <"WebGLRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLRenderbuffer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLRenderbuffer.prototype: {
    "constructor": <#Global.WebGLRenderbuffer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Set: {
    "length": <0, F, F, T>,
    "name": <"Set", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Set.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Set.prototype: {
    "constructor": <#Global.Set, T, F, T>,
    "size": <undefined, T, F, T>,
    "add": <#Global.Set.prototype.add, T, F, T>,
    "has": <#Global.Set.prototype.has, T, F, T>,
    "delete": <#Global.Set.prototype.delete, T, F, T>,
    "clear": <#Global.Set.prototype.clear, T, F, T>,
    "forEach": <#Global.Set.prototype.forEach, T, F, T>,
    "entries": <#Global.Set.prototype.entries, T, F, T>,
    "keys": <#Global.Set.prototype.keys, T, F, T>,
    "values": <#Global.Set.prototype.keys, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Set.prototype.add: {
    "length": <1, F, F, T>,
    "name": <"add", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Set.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Set.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Set.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Set.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Set.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Set.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLQuery: {
    "length": <0, F, F, T>,
    "name": <"WebGLQuery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLQuery.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLQuery.prototype: {
    "constructor": <#Global.WebGLQuery, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLProgram: {
    "length": <0, F, F, T>,
    "name": <"WebGLProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLProgram.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLProgram.prototype: {
    "constructor": <#Global.WebGLProgram, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLFramebuffer: {
    "length": <0, F, F, T>,
    "name": <"WebGLFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLFramebuffer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLFramebuffer.prototype: {
    "constructor": <#Global.WebGLFramebuffer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGLContextEvent: {
    "length": <1, F, F, T>,
    "name": <"WebGLContextEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLContextEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLContextEvent.prototype: {
    "statusMessage": <undefined, T, T, T>,
    "constructor": <#Global.WebGLContextEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.WebGLBuffer: {
    "length": <0, F, F, T>,
    "name": <"WebGLBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLBuffer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLBuffer.prototype: {
    "constructor": <#Global.WebGLBuffer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WeakSet: {
    "length": <0, F, F, T>,
    "name": <"WeakSet", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WeakSet.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WeakSet.prototype: {
    "constructor": <#Global.WeakSet, T, F, T>,
    "add": <#Global.WeakSet.prototype.add, T, F, T>,
    "has": <#Global.WeakSet.prototype.has, T, F, T>,
    "delete": <#Global.WeakSet.prototype.delete, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WeakSet.prototype.add: {
    "length": <1, F, F, T>,
    "name": <"add", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WeakSet.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WeakSet.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGLActiveInfo: {
    "length": <0, F, F, T>,
    "name": <"WebGLActiveInfo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGLActiveInfo.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGLActiveInfo.prototype: {
    "size": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "constructor": <#Global.WebGLActiveInfo, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ArrayBuffer: {
    "length": <1, F, F, T>,
    "name": <"ArrayBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ArrayBuffer.prototype, F, F, F>,
    "isView": <#Global.ArrayBuffer.isView, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ArrayBuffer.prototype: {
    "constructor": <#Global.ArrayBuffer, T, F, T>,
    "byteLength": <undefined, T, F, T>,
    "slice": <#Global.ArrayBuffer.prototype.slice, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ArrayBuffer.prototype.slice: {
    "length": <2, F, F, T>,
    "name": <"slice", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ArrayBuffer.isView: {
    "length": <1, F, F, T>,
    "name": <"isView", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext: {
    "length": <0, F, F, T>,
    "name": <"WebGL2RenderingContext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebGL2RenderingContext.prototype, F, F, F>,
    "READ_BUFFER": <3074, F, T, F>,
    "UNPACK_ROW_LENGTH": <3314, F, T, F>,
    "UNPACK_SKIP_ROWS": <3315, F, T, F>,
    "UNPACK_SKIP_PIXELS": <3316, F, T, F>,
    "PACK_ROW_LENGTH": <3330, F, T, F>,
    "PACK_SKIP_ROWS": <3331, F, T, F>,
    "PACK_SKIP_PIXELS": <3332, F, T, F>,
    "COLOR": <6144, F, T, F>,
    "DEPTH": <6145, F, T, F>,
    "STENCIL": <6146, F, T, F>,
    "RED": <6403, F, T, F>,
    "RGB8": <32849, F, T, F>,
    "RGBA8": <32856, F, T, F>,
    "RGB10_A2": <32857, F, T, F>,
    "TEXTURE_BINDING_3D": <32874, F, T, F>,
    "UNPACK_SKIP_IMAGES": <32877, F, T, F>,
    "UNPACK_IMAGE_HEIGHT": <32878, F, T, F>,
    "TEXTURE_3D": <32879, F, T, F>,
    "TEXTURE_WRAP_R": <32882, F, T, F>,
    "MAX_3D_TEXTURE_SIZE": <32883, F, T, F>,
    "UNSIGNED_INT_2_10_10_10_REV": <33640, F, T, F>,
    "MAX_ELEMENTS_VERTICES": <33000, F, T, F>,
    "MAX_ELEMENTS_INDICES": <33001, F, T, F>,
    "TEXTURE_MIN_LOD": <33082, F, T, F>,
    "TEXTURE_MAX_LOD": <33083, F, T, F>,
    "TEXTURE_BASE_LEVEL": <33084, F, T, F>,
    "TEXTURE_MAX_LEVEL": <33085, F, T, F>,
    "MIN": <32775, F, T, F>,
    "MAX": <32776, F, T, F>,
    "DEPTH_COMPONENT24": <33190, F, T, F>,
    "MAX_TEXTURE_LOD_BIAS": <34045, F, T, F>,
    "TEXTURE_COMPARE_MODE": <34892, F, T, F>,
    "TEXTURE_COMPARE_FUNC": <34893, F, T, F>,
    "CURRENT_QUERY": <34917, F, T, F>,
    "QUERY_RESULT": <34918, F, T, F>,
    "QUERY_RESULT_AVAILABLE": <34919, F, T, F>,
    "STREAM_READ": <35041, F, T, F>,
    "STREAM_COPY": <35042, F, T, F>,
    "STATIC_READ": <35045, F, T, F>,
    "STATIC_COPY": <35046, F, T, F>,
    "DYNAMIC_READ": <35049, F, T, F>,
    "DYNAMIC_COPY": <35050, F, T, F>,
    "MAX_DRAW_BUFFERS": <34852, F, T, F>,
    "DRAW_BUFFER0": <34853, F, T, F>,
    "DRAW_BUFFER1": <34854, F, T, F>,
    "DRAW_BUFFER2": <34855, F, T, F>,
    "DRAW_BUFFER3": <34856, F, T, F>,
    "DRAW_BUFFER4": <34857, F, T, F>,
    "DRAW_BUFFER5": <34858, F, T, F>,
    "DRAW_BUFFER6": <34859, F, T, F>,
    "DRAW_BUFFER7": <34860, F, T, F>,
    "DRAW_BUFFER8": <34861, F, T, F>,
    "DRAW_BUFFER9": <34862, F, T, F>,
    "DRAW_BUFFER10": <34863, F, T, F>,
    "DRAW_BUFFER11": <34864, F, T, F>,
    "DRAW_BUFFER12": <34865, F, T, F>,
    "DRAW_BUFFER13": <34866, F, T, F>,
    "DRAW_BUFFER14": <34867, F, T, F>,
    "DRAW_BUFFER15": <34868, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_COMPONENTS": <35657, F, T, F>,
    "MAX_VERTEX_UNIFORM_COMPONENTS": <35658, F, T, F>,
    "SAMPLER_3D": <35679, F, T, F>,
    "SAMPLER_2D_SHADOW": <35682, F, T, F>,
    "FRAGMENT_SHADER_DERIVATIVE_HINT": <35723, F, T, F>,
    "PIXEL_PACK_BUFFER": <35051, F, T, F>,
    "PIXEL_UNPACK_BUFFER": <35052, F, T, F>,
    "PIXEL_PACK_BUFFER_BINDING": <35053, F, T, F>,
    "PIXEL_UNPACK_BUFFER_BINDING": <35055, F, T, F>,
    "FLOAT_MAT2x3": <35685, F, T, F>,
    "FLOAT_MAT2x4": <35686, F, T, F>,
    "FLOAT_MAT3x2": <35687, F, T, F>,
    "FLOAT_MAT3x4": <35688, F, T, F>,
    "FLOAT_MAT4x2": <35689, F, T, F>,
    "FLOAT_MAT4x3": <35690, F, T, F>,
    "SRGB": <35904, F, T, F>,
    "SRGB8": <35905, F, T, F>,
    "SRGB8_ALPHA8": <35907, F, T, F>,
    "COMPARE_REF_TO_TEXTURE": <34894, F, T, F>,
    "RGBA32F": <34836, F, T, F>,
    "RGB32F": <34837, F, T, F>,
    "RGBA16F": <34842, F, T, F>,
    "RGB16F": <34843, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_INTEGER": <35069, F, T, F>,
    "MAX_ARRAY_TEXTURE_LAYERS": <35071, F, T, F>,
    "MIN_PROGRAM_TEXEL_OFFSET": <35076, F, T, F>,
    "MAX_PROGRAM_TEXEL_OFFSET": <35077, F, T, F>,
    "MAX_VARYING_COMPONENTS": <35659, F, T, F>,
    "TEXTURE_2D_ARRAY": <35866, F, T, F>,
    "TEXTURE_BINDING_2D_ARRAY": <35869, F, T, F>,
    "R11F_G11F_B10F": <35898, F, T, F>,
    "UNSIGNED_INT_10F_11F_11F_REV": <35899, F, T, F>,
    "RGB9_E5": <35901, F, T, F>,
    "UNSIGNED_INT_5_9_9_9_REV": <35902, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_MODE": <35967, F, T, F>,
    "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": <35968, F, T, F>,
    "TRANSFORM_FEEDBACK_VARYINGS": <35971, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_START": <35972, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_SIZE": <35973, F, T, F>,
    "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": <35976, F, T, F>,
    "RASTERIZER_DISCARD": <35977, F, T, F>,
    "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": <35978, F, T, F>,
    "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": <35979, F, T, F>,
    "INTERLEAVED_ATTRIBS": <35980, F, T, F>,
    "SEPARATE_ATTRIBS": <35981, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER": <35982, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_BINDING": <35983, F, T, F>,
    "RGBA32UI": <36208, F, T, F>,
    "RGB32UI": <36209, F, T, F>,
    "RGBA16UI": <36214, F, T, F>,
    "RGB16UI": <36215, F, T, F>,
    "RGBA8UI": <36220, F, T, F>,
    "RGB8UI": <36221, F, T, F>,
    "RGBA32I": <36226, F, T, F>,
    "RGB32I": <36227, F, T, F>,
    "RGBA16I": <36232, F, T, F>,
    "RGB16I": <36233, F, T, F>,
    "RGBA8I": <36238, F, T, F>,
    "RGB8I": <36239, F, T, F>,
    "RED_INTEGER": <36244, F, T, F>,
    "RGB_INTEGER": <36248, F, T, F>,
    "RGBA_INTEGER": <36249, F, T, F>,
    "SAMPLER_2D_ARRAY": <36289, F, T, F>,
    "SAMPLER_2D_ARRAY_SHADOW": <36292, F, T, F>,
    "SAMPLER_CUBE_SHADOW": <36293, F, T, F>,
    "UNSIGNED_INT_VEC2": <36294, F, T, F>,
    "UNSIGNED_INT_VEC3": <36295, F, T, F>,
    "UNSIGNED_INT_VEC4": <36296, F, T, F>,
    "INT_SAMPLER_2D": <36298, F, T, F>,
    "INT_SAMPLER_3D": <36299, F, T, F>,
    "INT_SAMPLER_CUBE": <36300, F, T, F>,
    "INT_SAMPLER_2D_ARRAY": <36303, F, T, F>,
    "UNSIGNED_INT_SAMPLER_2D": <36306, F, T, F>,
    "UNSIGNED_INT_SAMPLER_3D": <36307, F, T, F>,
    "UNSIGNED_INT_SAMPLER_CUBE": <36308, F, T, F>,
    "UNSIGNED_INT_SAMPLER_2D_ARRAY": <36311, F, T, F>,
    "DEPTH_COMPONENT32F": <36012, F, T, F>,
    "DEPTH32F_STENCIL8": <36013, F, T, F>,
    "FLOAT_32_UNSIGNED_INT_24_8_REV": <36269, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": <33296, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": <33297, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_RED_SIZE": <33298, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": <33299, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": <33300, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": <33301, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": <33302, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": <33303, F, T, F>,
    "FRAMEBUFFER_DEFAULT": <33304, F, T, F>,
    "UNSIGNED_INT_24_8": <34042, F, T, F>,
    "DEPTH24_STENCIL8": <35056, F, T, F>,
    "UNSIGNED_NORMALIZED": <35863, F, T, F>,
    "DRAW_FRAMEBUFFER_BINDING": <36006, F, T, F>,
    "READ_FRAMEBUFFER": <36008, F, T, F>,
    "DRAW_FRAMEBUFFER": <36009, F, T, F>,
    "READ_FRAMEBUFFER_BINDING": <36010, F, T, F>,
    "RENDERBUFFER_SAMPLES": <36011, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": <36052, F, T, F>,
    "MAX_COLOR_ATTACHMENTS": <36063, F, T, F>,
    "COLOR_ATTACHMENT1": <36065, F, T, F>,
    "COLOR_ATTACHMENT2": <36066, F, T, F>,
    "COLOR_ATTACHMENT3": <36067, F, T, F>,
    "COLOR_ATTACHMENT4": <36068, F, T, F>,
    "COLOR_ATTACHMENT5": <36069, F, T, F>,
    "COLOR_ATTACHMENT6": <36070, F, T, F>,
    "COLOR_ATTACHMENT7": <36071, F, T, F>,
    "COLOR_ATTACHMENT8": <36072, F, T, F>,
    "COLOR_ATTACHMENT9": <36073, F, T, F>,
    "COLOR_ATTACHMENT10": <36074, F, T, F>,
    "COLOR_ATTACHMENT11": <36075, F, T, F>,
    "COLOR_ATTACHMENT12": <36076, F, T, F>,
    "COLOR_ATTACHMENT13": <36077, F, T, F>,
    "COLOR_ATTACHMENT14": <36078, F, T, F>,
    "COLOR_ATTACHMENT15": <36079, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": <36182, F, T, F>,
    "MAX_SAMPLES": <36183, F, T, F>,
    "HALF_FLOAT": <5131, F, T, F>,
    "RG": <33319, F, T, F>,
    "RG_INTEGER": <33320, F, T, F>,
    "R8": <33321, F, T, F>,
    "RG8": <33323, F, T, F>,
    "R16F": <33325, F, T, F>,
    "R32F": <33326, F, T, F>,
    "RG16F": <33327, F, T, F>,
    "RG32F": <33328, F, T, F>,
    "R8I": <33329, F, T, F>,
    "R8UI": <33330, F, T, F>,
    "R16I": <33331, F, T, F>,
    "R16UI": <33332, F, T, F>,
    "R32I": <33333, F, T, F>,
    "R32UI": <33334, F, T, F>,
    "RG8I": <33335, F, T, F>,
    "RG8UI": <33336, F, T, F>,
    "RG16I": <33337, F, T, F>,
    "RG16UI": <33338, F, T, F>,
    "RG32I": <33339, F, T, F>,
    "RG32UI": <33340, F, T, F>,
    "VERTEX_ARRAY_BINDING": <34229, F, T, F>,
    "R8_SNORM": <36756, F, T, F>,
    "RG8_SNORM": <36757, F, T, F>,
    "RGB8_SNORM": <36758, F, T, F>,
    "RGBA8_SNORM": <36759, F, T, F>,
    "SIGNED_NORMALIZED": <36764, F, T, F>,
    "COPY_READ_BUFFER": <36662, F, T, F>,
    "COPY_WRITE_BUFFER": <36663, F, T, F>,
    "COPY_READ_BUFFER_BINDING": <36662, F, T, F>,
    "COPY_WRITE_BUFFER_BINDING": <36663, F, T, F>,
    "UNIFORM_BUFFER": <35345, F, T, F>,
    "UNIFORM_BUFFER_BINDING": <35368, F, T, F>,
    "UNIFORM_BUFFER_START": <35369, F, T, F>,
    "UNIFORM_BUFFER_SIZE": <35370, F, T, F>,
    "MAX_VERTEX_UNIFORM_BLOCKS": <35371, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_BLOCKS": <35373, F, T, F>,
    "MAX_COMBINED_UNIFORM_BLOCKS": <35374, F, T, F>,
    "MAX_UNIFORM_BUFFER_BINDINGS": <35375, F, T, F>,
    "MAX_UNIFORM_BLOCK_SIZE": <35376, F, T, F>,
    "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": <35377, F, T, F>,
    "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": <35379, F, T, F>,
    "UNIFORM_BUFFER_OFFSET_ALIGNMENT": <35380, F, T, F>,
    "ACTIVE_UNIFORM_BLOCKS": <35382, F, T, F>,
    "UNIFORM_TYPE": <35383, F, T, F>,
    "UNIFORM_SIZE": <35384, F, T, F>,
    "UNIFORM_BLOCK_INDEX": <35386, F, T, F>,
    "UNIFORM_OFFSET": <35387, F, T, F>,
    "UNIFORM_ARRAY_STRIDE": <35388, F, T, F>,
    "UNIFORM_MATRIX_STRIDE": <35389, F, T, F>,
    "UNIFORM_IS_ROW_MAJOR": <35390, F, T, F>,
    "UNIFORM_BLOCK_BINDING": <35391, F, T, F>,
    "UNIFORM_BLOCK_DATA_SIZE": <35392, F, T, F>,
    "UNIFORM_BLOCK_ACTIVE_UNIFORMS": <35394, F, T, F>,
    "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": <35395, F, T, F>,
    "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": <35396, F, T, F>,
    "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": <35398, F, T, F>,
    "INVALID_INDEX": <4294967295, F, T, F>,
    "MAX_VERTEX_OUTPUT_COMPONENTS": <37154, F, T, F>,
    "MAX_FRAGMENT_INPUT_COMPONENTS": <37157, F, T, F>,
    "MAX_SERVER_WAIT_TIMEOUT": <37137, F, T, F>,
    "OBJECT_TYPE": <37138, F, T, F>,
    "SYNC_CONDITION": <37139, F, T, F>,
    "SYNC_STATUS": <37140, F, T, F>,
    "SYNC_FLAGS": <37141, F, T, F>,
    "SYNC_FENCE": <37142, F, T, F>,
    "SYNC_GPU_COMMANDS_COMPLETE": <37143, F, T, F>,
    "UNSIGNALED": <37144, F, T, F>,
    "SIGNALED": <37145, F, T, F>,
    "ALREADY_SIGNALED": <37146, F, T, F>,
    "TIMEOUT_EXPIRED": <37147, F, T, F>,
    "CONDITION_SATISFIED": <37148, F, T, F>,
    "WAIT_FAILED": <37149, F, T, F>,
    "SYNC_FLUSH_COMMANDS_BIT": <1, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_DIVISOR": <35070, F, T, F>,
    "ANY_SAMPLES_PASSED": <35887, F, T, F>,
    "ANY_SAMPLES_PASSED_CONSERVATIVE": <36202, F, T, F>,
    "SAMPLER_BINDING": <35097, F, T, F>,
    "RGB10_A2UI": <36975, F, T, F>,
    "INT_2_10_10_10_REV": <36255, F, T, F>,
    "TRANSFORM_FEEDBACK": <36386, F, T, F>,
    "TRANSFORM_FEEDBACK_PAUSED": <36387, F, T, F>,
    "TRANSFORM_FEEDBACK_ACTIVE": <36388, F, T, F>,
    "TRANSFORM_FEEDBACK_BINDING": <36389, F, T, F>,
    "TEXTURE_IMMUTABLE_FORMAT": <37167, F, T, F>,
    "MAX_ELEMENT_INDEX": <36203, F, T, F>,
    "TEXTURE_IMMUTABLE_LEVELS": <33503, F, T, F>,
    "TIMEOUT_IGNORED": <-1, F, T, F>,
    "MAX_CLIENT_WAIT_TIMEOUT_WEBGL": <37447, F, T, F>,
    "DEPTH_BUFFER_BIT": <256, F, T, F>,
    "STENCIL_BUFFER_BIT": <1024, F, T, F>,
    "COLOR_BUFFER_BIT": <16384, F, T, F>,
    "POINTS": <0, F, T, F>,
    "LINES": <1, F, T, F>,
    "LINE_LOOP": <2, F, T, F>,
    "LINE_STRIP": <3, F, T, F>,
    "TRIANGLES": <4, F, T, F>,
    "TRIANGLE_STRIP": <5, F, T, F>,
    "TRIANGLE_FAN": <6, F, T, F>,
    "ZERO": <0, F, T, F>,
    "ONE": <1, F, T, F>,
    "SRC_COLOR": <768, F, T, F>,
    "ONE_MINUS_SRC_COLOR": <769, F, T, F>,
    "SRC_ALPHA": <770, F, T, F>,
    "ONE_MINUS_SRC_ALPHA": <771, F, T, F>,
    "DST_ALPHA": <772, F, T, F>,
    "ONE_MINUS_DST_ALPHA": <773, F, T, F>,
    "DST_COLOR": <774, F, T, F>,
    "ONE_MINUS_DST_COLOR": <775, F, T, F>,
    "SRC_ALPHA_SATURATE": <776, F, T, F>,
    "FUNC_ADD": <32774, F, T, F>,
    "BLEND_EQUATION": <32777, F, T, F>,
    "BLEND_EQUATION_RGB": <32777, F, T, F>,
    "BLEND_EQUATION_ALPHA": <34877, F, T, F>,
    "FUNC_SUBTRACT": <32778, F, T, F>,
    "FUNC_REVERSE_SUBTRACT": <32779, F, T, F>,
    "BLEND_DST_RGB": <32968, F, T, F>,
    "BLEND_SRC_RGB": <32969, F, T, F>,
    "BLEND_DST_ALPHA": <32970, F, T, F>,
    "BLEND_SRC_ALPHA": <32971, F, T, F>,
    "CONSTANT_COLOR": <32769, F, T, F>,
    "ONE_MINUS_CONSTANT_COLOR": <32770, F, T, F>,
    "CONSTANT_ALPHA": <32771, F, T, F>,
    "ONE_MINUS_CONSTANT_ALPHA": <32772, F, T, F>,
    "BLEND_COLOR": <32773, F, T, F>,
    "ARRAY_BUFFER": <34962, F, T, F>,
    "ELEMENT_ARRAY_BUFFER": <34963, F, T, F>,
    "ARRAY_BUFFER_BINDING": <34964, F, T, F>,
    "ELEMENT_ARRAY_BUFFER_BINDING": <34965, F, T, F>,
    "STREAM_DRAW": <35040, F, T, F>,
    "STATIC_DRAW": <35044, F, T, F>,
    "DYNAMIC_DRAW": <35048, F, T, F>,
    "BUFFER_SIZE": <34660, F, T, F>,
    "BUFFER_USAGE": <34661, F, T, F>,
    "CURRENT_VERTEX_ATTRIB": <34342, F, T, F>,
    "FRONT": <1028, F, T, F>,
    "BACK": <1029, F, T, F>,
    "FRONT_AND_BACK": <1032, F, T, F>,
    "TEXTURE_2D": <3553, F, T, F>,
    "CULL_FACE": <2884, F, T, F>,
    "BLEND": <3042, F, T, F>,
    "DITHER": <3024, F, T, F>,
    "STENCIL_TEST": <2960, F, T, F>,
    "DEPTH_TEST": <2929, F, T, F>,
    "SCISSOR_TEST": <3089, F, T, F>,
    "POLYGON_OFFSET_FILL": <32823, F, T, F>,
    "SAMPLE_ALPHA_TO_COVERAGE": <32926, F, T, F>,
    "SAMPLE_COVERAGE": <32928, F, T, F>,
    "NO_ERROR": <0, F, T, F>,
    "INVALID_ENUM": <1280, F, T, F>,
    "INVALID_VALUE": <1281, F, T, F>,
    "INVALID_OPERATION": <1282, F, T, F>,
    "OUT_OF_MEMORY": <1285, F, T, F>,
    "CW": <2304, F, T, F>,
    "CCW": <2305, F, T, F>,
    "LINE_WIDTH": <2849, F, T, F>,
    "ALIASED_POINT_SIZE_RANGE": <33901, F, T, F>,
    "ALIASED_LINE_WIDTH_RANGE": <33902, F, T, F>,
    "CULL_FACE_MODE": <2885, F, T, F>,
    "FRONT_FACE": <2886, F, T, F>,
    "DEPTH_RANGE": <2928, F, T, F>,
    "DEPTH_WRITEMASK": <2930, F, T, F>,
    "DEPTH_CLEAR_VALUE": <2931, F, T, F>,
    "DEPTH_FUNC": <2932, F, T, F>,
    "STENCIL_CLEAR_VALUE": <2961, F, T, F>,
    "STENCIL_FUNC": <2962, F, T, F>,
    "STENCIL_FAIL": <2964, F, T, F>,
    "STENCIL_PASS_DEPTH_FAIL": <2965, F, T, F>,
    "STENCIL_PASS_DEPTH_PASS": <2966, F, T, F>,
    "STENCIL_REF": <2967, F, T, F>,
    "STENCIL_VALUE_MASK": <2963, F, T, F>,
    "STENCIL_WRITEMASK": <2968, F, T, F>,
    "STENCIL_BACK_FUNC": <34816, F, T, F>,
    "STENCIL_BACK_FAIL": <34817, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_FAIL": <34818, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_PASS": <34819, F, T, F>,
    "STENCIL_BACK_REF": <36003, F, T, F>,
    "STENCIL_BACK_VALUE_MASK": <36004, F, T, F>,
    "STENCIL_BACK_WRITEMASK": <36005, F, T, F>,
    "VIEWPORT": <2978, F, T, F>,
    "SCISSOR_BOX": <3088, F, T, F>,
    "COLOR_CLEAR_VALUE": <3106, F, T, F>,
    "COLOR_WRITEMASK": <3107, F, T, F>,
    "UNPACK_ALIGNMENT": <3317, F, T, F>,
    "PACK_ALIGNMENT": <3333, F, T, F>,
    "MAX_TEXTURE_SIZE": <3379, F, T, F>,
    "MAX_VIEWPORT_DIMS": <3386, F, T, F>,
    "SUBPIXEL_BITS": <3408, F, T, F>,
    "RED_BITS": <3410, F, T, F>,
    "GREEN_BITS": <3411, F, T, F>,
    "BLUE_BITS": <3412, F, T, F>,
    "ALPHA_BITS": <3413, F, T, F>,
    "DEPTH_BITS": <3414, F, T, F>,
    "STENCIL_BITS": <3415, F, T, F>,
    "POLYGON_OFFSET_UNITS": <10752, F, T, F>,
    "POLYGON_OFFSET_FACTOR": <32824, F, T, F>,
    "TEXTURE_BINDING_2D": <32873, F, T, F>,
    "SAMPLE_BUFFERS": <32936, F, T, F>,
    "SAMPLES": <32937, F, T, F>,
    "SAMPLE_COVERAGE_VALUE": <32938, F, T, F>,
    "SAMPLE_COVERAGE_INVERT": <32939, F, T, F>,
    "COMPRESSED_TEXTURE_FORMATS": <34467, F, T, F>,
    "DONT_CARE": <4352, F, T, F>,
    "FASTEST": <4353, F, T, F>,
    "NICEST": <4354, F, T, F>,
    "GENERATE_MIPMAP_HINT": <33170, F, T, F>,
    "BYTE": <5120, F, T, F>,
    "UNSIGNED_BYTE": <5121, F, T, F>,
    "SHORT": <5122, F, T, F>,
    "UNSIGNED_SHORT": <5123, F, T, F>,
    "INT": <5124, F, T, F>,
    "UNSIGNED_INT": <5125, F, T, F>,
    "FLOAT": <5126, F, T, F>,
    "DEPTH_COMPONENT": <6402, F, T, F>,
    "ALPHA": <6406, F, T, F>,
    "RGB": <6407, F, T, F>,
    "RGBA": <6408, F, T, F>,
    "LUMINANCE": <6409, F, T, F>,
    "LUMINANCE_ALPHA": <6410, F, T, F>,
    "UNSIGNED_SHORT_4_4_4_4": <32819, F, T, F>,
    "UNSIGNED_SHORT_5_5_5_1": <32820, F, T, F>,
    "UNSIGNED_SHORT_5_6_5": <33635, F, T, F>,
    "FRAGMENT_SHADER": <35632, F, T, F>,
    "VERTEX_SHADER": <35633, F, T, F>,
    "MAX_VERTEX_ATTRIBS": <34921, F, T, F>,
    "MAX_VERTEX_UNIFORM_VECTORS": <36347, F, T, F>,
    "MAX_VARYING_VECTORS": <36348, F, T, F>,
    "MAX_COMBINED_TEXTURE_IMAGE_UNITS": <35661, F, T, F>,
    "MAX_VERTEX_TEXTURE_IMAGE_UNITS": <35660, F, T, F>,
    "MAX_TEXTURE_IMAGE_UNITS": <34930, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_VECTORS": <36349, F, T, F>,
    "SHADER_TYPE": <35663, F, T, F>,
    "DELETE_STATUS": <35712, F, T, F>,
    "LINK_STATUS": <35714, F, T, F>,
    "VALIDATE_STATUS": <35715, F, T, F>,
    "ATTACHED_SHADERS": <35717, F, T, F>,
    "ACTIVE_UNIFORMS": <35718, F, T, F>,
    "ACTIVE_ATTRIBUTES": <35721, F, T, F>,
    "SHADING_LANGUAGE_VERSION": <35724, F, T, F>,
    "CURRENT_PROGRAM": <35725, F, T, F>,
    "NEVER": <512, F, T, F>,
    "LESS": <513, F, T, F>,
    "EQUAL": <514, F, T, F>,
    "LEQUAL": <515, F, T, F>,
    "GREATER": <516, F, T, F>,
    "NOTEQUAL": <517, F, T, F>,
    "GEQUAL": <518, F, T, F>,
    "ALWAYS": <519, F, T, F>,
    "KEEP": <7680, F, T, F>,
    "REPLACE": <7681, F, T, F>,
    "INCR": <7682, F, T, F>,
    "DECR": <7683, F, T, F>,
    "INVERT": <5386, F, T, F>,
    "INCR_WRAP": <34055, F, T, F>,
    "DECR_WRAP": <34056, F, T, F>,
    "VENDOR": <7936, F, T, F>,
    "RENDERER": <7937, F, T, F>,
    "VERSION": <7938, F, T, F>,
    "NEAREST": <9728, F, T, F>,
    "LINEAR": <9729, F, T, F>,
    "NEAREST_MIPMAP_NEAREST": <9984, F, T, F>,
    "LINEAR_MIPMAP_NEAREST": <9985, F, T, F>,
    "NEAREST_MIPMAP_LINEAR": <9986, F, T, F>,
    "LINEAR_MIPMAP_LINEAR": <9987, F, T, F>,
    "TEXTURE_MAG_FILTER": <10240, F, T, F>,
    "TEXTURE_MIN_FILTER": <10241, F, T, F>,
    "TEXTURE_WRAP_S": <10242, F, T, F>,
    "TEXTURE_WRAP_T": <10243, F, T, F>,
    "TEXTURE": <5890, F, T, F>,
    "TEXTURE_CUBE_MAP": <34067, F, T, F>,
    "TEXTURE_BINDING_CUBE_MAP": <34068, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_X": <34069, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_X": <34070, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Y": <34071, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Y": <34072, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Z": <34073, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Z": <34074, F, T, F>,
    "MAX_CUBE_MAP_TEXTURE_SIZE": <34076, F, T, F>,
    "TEXTURE0": <33984, F, T, F>,
    "TEXTURE1": <33985, F, T, F>,
    "TEXTURE2": <33986, F, T, F>,
    "TEXTURE3": <33987, F, T, F>,
    "TEXTURE4": <33988, F, T, F>,
    "TEXTURE5": <33989, F, T, F>,
    "TEXTURE6": <33990, F, T, F>,
    "TEXTURE7": <33991, F, T, F>,
    "TEXTURE8": <33992, F, T, F>,
    "TEXTURE9": <33993, F, T, F>,
    "TEXTURE10": <33994, F, T, F>,
    "TEXTURE11": <33995, F, T, F>,
    "TEXTURE12": <33996, F, T, F>,
    "TEXTURE13": <33997, F, T, F>,
    "TEXTURE14": <33998, F, T, F>,
    "TEXTURE15": <33999, F, T, F>,
    "TEXTURE16": <34000, F, T, F>,
    "TEXTURE17": <34001, F, T, F>,
    "TEXTURE18": <34002, F, T, F>,
    "TEXTURE19": <34003, F, T, F>,
    "TEXTURE20": <34004, F, T, F>,
    "TEXTURE21": <34005, F, T, F>,
    "TEXTURE22": <34006, F, T, F>,
    "TEXTURE23": <34007, F, T, F>,
    "TEXTURE24": <34008, F, T, F>,
    "TEXTURE25": <34009, F, T, F>,
    "TEXTURE26": <34010, F, T, F>,
    "TEXTURE27": <34011, F, T, F>,
    "TEXTURE28": <34012, F, T, F>,
    "TEXTURE29": <34013, F, T, F>,
    "TEXTURE30": <34014, F, T, F>,
    "TEXTURE31": <34015, F, T, F>,
    "ACTIVE_TEXTURE": <34016, F, T, F>,
    "REPEAT": <10497, F, T, F>,
    "CLAMP_TO_EDGE": <33071, F, T, F>,
    "MIRRORED_REPEAT": <33648, F, T, F>,
    "FLOAT_VEC2": <35664, F, T, F>,
    "FLOAT_VEC3": <35665, F, T, F>,
    "FLOAT_VEC4": <35666, F, T, F>,
    "INT_VEC2": <35667, F, T, F>,
    "INT_VEC3": <35668, F, T, F>,
    "INT_VEC4": <35669, F, T, F>,
    "BOOL": <35670, F, T, F>,
    "BOOL_VEC2": <35671, F, T, F>,
    "BOOL_VEC3": <35672, F, T, F>,
    "BOOL_VEC4": <35673, F, T, F>,
    "FLOAT_MAT2": <35674, F, T, F>,
    "FLOAT_MAT3": <35675, F, T, F>,
    "FLOAT_MAT4": <35676, F, T, F>,
    "SAMPLER_2D": <35678, F, T, F>,
    "SAMPLER_CUBE": <35680, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_ENABLED": <34338, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_SIZE": <34339, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_STRIDE": <34340, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_TYPE": <34341, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_NORMALIZED": <34922, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_POINTER": <34373, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": <34975, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_TYPE": <35738, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_FORMAT": <35739, F, T, F>,
    "COMPILE_STATUS": <35713, F, T, F>,
    "LOW_FLOAT": <36336, F, T, F>,
    "MEDIUM_FLOAT": <36337, F, T, F>,
    "HIGH_FLOAT": <36338, F, T, F>,
    "LOW_INT": <36339, F, T, F>,
    "MEDIUM_INT": <36340, F, T, F>,
    "HIGH_INT": <36341, F, T, F>,
    "FRAMEBUFFER": <36160, F, T, F>,
    "RENDERBUFFER": <36161, F, T, F>,
    "RGBA4": <32854, F, T, F>,
    "RGB5_A1": <32855, F, T, F>,
    "RGB565": <36194, F, T, F>,
    "DEPTH_COMPONENT16": <33189, F, T, F>,
    "STENCIL_INDEX": <6401, F, T, F>,
    "STENCIL_INDEX8": <36168, F, T, F>,
    "DEPTH_STENCIL": <34041, F, T, F>,
    "RENDERBUFFER_WIDTH": <36162, F, T, F>,
    "RENDERBUFFER_HEIGHT": <36163, F, T, F>,
    "RENDERBUFFER_INTERNAL_FORMAT": <36164, F, T, F>,
    "RENDERBUFFER_RED_SIZE": <36176, F, T, F>,
    "RENDERBUFFER_GREEN_SIZE": <36177, F, T, F>,
    "RENDERBUFFER_BLUE_SIZE": <36178, F, T, F>,
    "RENDERBUFFER_ALPHA_SIZE": <36179, F, T, F>,
    "RENDERBUFFER_DEPTH_SIZE": <36180, F, T, F>,
    "RENDERBUFFER_STENCIL_SIZE": <36181, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": <36048, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": <36049, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": <36050, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": <36051, F, T, F>,
    "COLOR_ATTACHMENT0": <36064, F, T, F>,
    "DEPTH_ATTACHMENT": <36096, F, T, F>,
    "STENCIL_ATTACHMENT": <36128, F, T, F>,
    "DEPTH_STENCIL_ATTACHMENT": <33306, F, T, F>,
    "NONE": <0, F, T, F>,
    "FRAMEBUFFER_COMPLETE": <36053, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": <36054, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": <36055, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": <36057, F, T, F>,
    "FRAMEBUFFER_UNSUPPORTED": <36061, F, T, F>,
    "FRAMEBUFFER_BINDING": <36006, F, T, F>,
    "RENDERBUFFER_BINDING": <36007, F, T, F>,
    "MAX_RENDERBUFFER_SIZE": <34024, F, T, F>,
    "INVALID_FRAMEBUFFER_OPERATION": <1286, F, T, F>,
    "UNPACK_FLIP_Y_WEBGL": <37440, F, T, F>,
    "UNPACK_PREMULTIPLY_ALPHA_WEBGL": <37441, F, T, F>,
    "CONTEXT_LOST_WEBGL": <37442, F, T, F>,
    "UNPACK_COLORSPACE_CONVERSION_WEBGL": <37443, F, T, F>,
    "BROWSER_DEFAULT_WEBGL": <37444, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype: {
    "READ_BUFFER": <3074, F, T, F>,
    "UNPACK_ROW_LENGTH": <3314, F, T, F>,
    "UNPACK_SKIP_ROWS": <3315, F, T, F>,
    "UNPACK_SKIP_PIXELS": <3316, F, T, F>,
    "PACK_ROW_LENGTH": <3330, F, T, F>,
    "PACK_SKIP_ROWS": <3331, F, T, F>,
    "PACK_SKIP_PIXELS": <3332, F, T, F>,
    "COLOR": <6144, F, T, F>,
    "DEPTH": <6145, F, T, F>,
    "STENCIL": <6146, F, T, F>,
    "RED": <6403, F, T, F>,
    "RGB8": <32849, F, T, F>,
    "RGBA8": <32856, F, T, F>,
    "RGB10_A2": <32857, F, T, F>,
    "TEXTURE_BINDING_3D": <32874, F, T, F>,
    "UNPACK_SKIP_IMAGES": <32877, F, T, F>,
    "UNPACK_IMAGE_HEIGHT": <32878, F, T, F>,
    "TEXTURE_3D": <32879, F, T, F>,
    "TEXTURE_WRAP_R": <32882, F, T, F>,
    "MAX_3D_TEXTURE_SIZE": <32883, F, T, F>,
    "UNSIGNED_INT_2_10_10_10_REV": <33640, F, T, F>,
    "MAX_ELEMENTS_VERTICES": <33000, F, T, F>,
    "MAX_ELEMENTS_INDICES": <33001, F, T, F>,
    "TEXTURE_MIN_LOD": <33082, F, T, F>,
    "TEXTURE_MAX_LOD": <33083, F, T, F>,
    "TEXTURE_BASE_LEVEL": <33084, F, T, F>,
    "TEXTURE_MAX_LEVEL": <33085, F, T, F>,
    "MIN": <32775, F, T, F>,
    "MAX": <32776, F, T, F>,
    "DEPTH_COMPONENT24": <33190, F, T, F>,
    "MAX_TEXTURE_LOD_BIAS": <34045, F, T, F>,
    "TEXTURE_COMPARE_MODE": <34892, F, T, F>,
    "TEXTURE_COMPARE_FUNC": <34893, F, T, F>,
    "CURRENT_QUERY": <34917, F, T, F>,
    "QUERY_RESULT": <34918, F, T, F>,
    "QUERY_RESULT_AVAILABLE": <34919, F, T, F>,
    "STREAM_READ": <35041, F, T, F>,
    "STREAM_COPY": <35042, F, T, F>,
    "STATIC_READ": <35045, F, T, F>,
    "STATIC_COPY": <35046, F, T, F>,
    "DYNAMIC_READ": <35049, F, T, F>,
    "DYNAMIC_COPY": <35050, F, T, F>,
    "MAX_DRAW_BUFFERS": <34852, F, T, F>,
    "DRAW_BUFFER0": <34853, F, T, F>,
    "DRAW_BUFFER1": <34854, F, T, F>,
    "DRAW_BUFFER2": <34855, F, T, F>,
    "DRAW_BUFFER3": <34856, F, T, F>,
    "DRAW_BUFFER4": <34857, F, T, F>,
    "DRAW_BUFFER5": <34858, F, T, F>,
    "DRAW_BUFFER6": <34859, F, T, F>,
    "DRAW_BUFFER7": <34860, F, T, F>,
    "DRAW_BUFFER8": <34861, F, T, F>,
    "DRAW_BUFFER9": <34862, F, T, F>,
    "DRAW_BUFFER10": <34863, F, T, F>,
    "DRAW_BUFFER11": <34864, F, T, F>,
    "DRAW_BUFFER12": <34865, F, T, F>,
    "DRAW_BUFFER13": <34866, F, T, F>,
    "DRAW_BUFFER14": <34867, F, T, F>,
    "DRAW_BUFFER15": <34868, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_COMPONENTS": <35657, F, T, F>,
    "MAX_VERTEX_UNIFORM_COMPONENTS": <35658, F, T, F>,
    "SAMPLER_3D": <35679, F, T, F>,
    "SAMPLER_2D_SHADOW": <35682, F, T, F>,
    "FRAGMENT_SHADER_DERIVATIVE_HINT": <35723, F, T, F>,
    "PIXEL_PACK_BUFFER": <35051, F, T, F>,
    "PIXEL_UNPACK_BUFFER": <35052, F, T, F>,
    "PIXEL_PACK_BUFFER_BINDING": <35053, F, T, F>,
    "PIXEL_UNPACK_BUFFER_BINDING": <35055, F, T, F>,
    "FLOAT_MAT2x3": <35685, F, T, F>,
    "FLOAT_MAT2x4": <35686, F, T, F>,
    "FLOAT_MAT3x2": <35687, F, T, F>,
    "FLOAT_MAT3x4": <35688, F, T, F>,
    "FLOAT_MAT4x2": <35689, F, T, F>,
    "FLOAT_MAT4x3": <35690, F, T, F>,
    "SRGB": <35904, F, T, F>,
    "SRGB8": <35905, F, T, F>,
    "SRGB8_ALPHA8": <35907, F, T, F>,
    "COMPARE_REF_TO_TEXTURE": <34894, F, T, F>,
    "RGBA32F": <34836, F, T, F>,
    "RGB32F": <34837, F, T, F>,
    "RGBA16F": <34842, F, T, F>,
    "RGB16F": <34843, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_INTEGER": <35069, F, T, F>,
    "MAX_ARRAY_TEXTURE_LAYERS": <35071, F, T, F>,
    "MIN_PROGRAM_TEXEL_OFFSET": <35076, F, T, F>,
    "MAX_PROGRAM_TEXEL_OFFSET": <35077, F, T, F>,
    "MAX_VARYING_COMPONENTS": <35659, F, T, F>,
    "TEXTURE_2D_ARRAY": <35866, F, T, F>,
    "TEXTURE_BINDING_2D_ARRAY": <35869, F, T, F>,
    "R11F_G11F_B10F": <35898, F, T, F>,
    "UNSIGNED_INT_10F_11F_11F_REV": <35899, F, T, F>,
    "RGB9_E5": <35901, F, T, F>,
    "UNSIGNED_INT_5_9_9_9_REV": <35902, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_MODE": <35967, F, T, F>,
    "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": <35968, F, T, F>,
    "TRANSFORM_FEEDBACK_VARYINGS": <35971, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_START": <35972, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_SIZE": <35973, F, T, F>,
    "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": <35976, F, T, F>,
    "RASTERIZER_DISCARD": <35977, F, T, F>,
    "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": <35978, F, T, F>,
    "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": <35979, F, T, F>,
    "INTERLEAVED_ATTRIBS": <35980, F, T, F>,
    "SEPARATE_ATTRIBS": <35981, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER": <35982, F, T, F>,
    "TRANSFORM_FEEDBACK_BUFFER_BINDING": <35983, F, T, F>,
    "RGBA32UI": <36208, F, T, F>,
    "RGB32UI": <36209, F, T, F>,
    "RGBA16UI": <36214, F, T, F>,
    "RGB16UI": <36215, F, T, F>,
    "RGBA8UI": <36220, F, T, F>,
    "RGB8UI": <36221, F, T, F>,
    "RGBA32I": <36226, F, T, F>,
    "RGB32I": <36227, F, T, F>,
    "RGBA16I": <36232, F, T, F>,
    "RGB16I": <36233, F, T, F>,
    "RGBA8I": <36238, F, T, F>,
    "RGB8I": <36239, F, T, F>,
    "RED_INTEGER": <36244, F, T, F>,
    "RGB_INTEGER": <36248, F, T, F>,
    "RGBA_INTEGER": <36249, F, T, F>,
    "SAMPLER_2D_ARRAY": <36289, F, T, F>,
    "SAMPLER_2D_ARRAY_SHADOW": <36292, F, T, F>,
    "SAMPLER_CUBE_SHADOW": <36293, F, T, F>,
    "UNSIGNED_INT_VEC2": <36294, F, T, F>,
    "UNSIGNED_INT_VEC3": <36295, F, T, F>,
    "UNSIGNED_INT_VEC4": <36296, F, T, F>,
    "INT_SAMPLER_2D": <36298, F, T, F>,
    "INT_SAMPLER_3D": <36299, F, T, F>,
    "INT_SAMPLER_CUBE": <36300, F, T, F>,
    "INT_SAMPLER_2D_ARRAY": <36303, F, T, F>,
    "UNSIGNED_INT_SAMPLER_2D": <36306, F, T, F>,
    "UNSIGNED_INT_SAMPLER_3D": <36307, F, T, F>,
    "UNSIGNED_INT_SAMPLER_CUBE": <36308, F, T, F>,
    "UNSIGNED_INT_SAMPLER_2D_ARRAY": <36311, F, T, F>,
    "DEPTH_COMPONENT32F": <36012, F, T, F>,
    "DEPTH32F_STENCIL8": <36013, F, T, F>,
    "FLOAT_32_UNSIGNED_INT_24_8_REV": <36269, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": <33296, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": <33297, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_RED_SIZE": <33298, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": <33299, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": <33300, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": <33301, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": <33302, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": <33303, F, T, F>,
    "FRAMEBUFFER_DEFAULT": <33304, F, T, F>,
    "UNSIGNED_INT_24_8": <34042, F, T, F>,
    "DEPTH24_STENCIL8": <35056, F, T, F>,
    "UNSIGNED_NORMALIZED": <35863, F, T, F>,
    "DRAW_FRAMEBUFFER_BINDING": <36006, F, T, F>,
    "READ_FRAMEBUFFER": <36008, F, T, F>,
    "DRAW_FRAMEBUFFER": <36009, F, T, F>,
    "READ_FRAMEBUFFER_BINDING": <36010, F, T, F>,
    "RENDERBUFFER_SAMPLES": <36011, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": <36052, F, T, F>,
    "MAX_COLOR_ATTACHMENTS": <36063, F, T, F>,
    "COLOR_ATTACHMENT1": <36065, F, T, F>,
    "COLOR_ATTACHMENT2": <36066, F, T, F>,
    "COLOR_ATTACHMENT3": <36067, F, T, F>,
    "COLOR_ATTACHMENT4": <36068, F, T, F>,
    "COLOR_ATTACHMENT5": <36069, F, T, F>,
    "COLOR_ATTACHMENT6": <36070, F, T, F>,
    "COLOR_ATTACHMENT7": <36071, F, T, F>,
    "COLOR_ATTACHMENT8": <36072, F, T, F>,
    "COLOR_ATTACHMENT9": <36073, F, T, F>,
    "COLOR_ATTACHMENT10": <36074, F, T, F>,
    "COLOR_ATTACHMENT11": <36075, F, T, F>,
    "COLOR_ATTACHMENT12": <36076, F, T, F>,
    "COLOR_ATTACHMENT13": <36077, F, T, F>,
    "COLOR_ATTACHMENT14": <36078, F, T, F>,
    "COLOR_ATTACHMENT15": <36079, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": <36182, F, T, F>,
    "MAX_SAMPLES": <36183, F, T, F>,
    "HALF_FLOAT": <5131, F, T, F>,
    "RG": <33319, F, T, F>,
    "RG_INTEGER": <33320, F, T, F>,
    "R8": <33321, F, T, F>,
    "RG8": <33323, F, T, F>,
    "R16F": <33325, F, T, F>,
    "R32F": <33326, F, T, F>,
    "RG16F": <33327, F, T, F>,
    "RG32F": <33328, F, T, F>,
    "R8I": <33329, F, T, F>,
    "R8UI": <33330, F, T, F>,
    "R16I": <33331, F, T, F>,
    "R16UI": <33332, F, T, F>,
    "R32I": <33333, F, T, F>,
    "R32UI": <33334, F, T, F>,
    "RG8I": <33335, F, T, F>,
    "RG8UI": <33336, F, T, F>,
    "RG16I": <33337, F, T, F>,
    "RG16UI": <33338, F, T, F>,
    "RG32I": <33339, F, T, F>,
    "RG32UI": <33340, F, T, F>,
    "VERTEX_ARRAY_BINDING": <34229, F, T, F>,
    "R8_SNORM": <36756, F, T, F>,
    "RG8_SNORM": <36757, F, T, F>,
    "RGB8_SNORM": <36758, F, T, F>,
    "RGBA8_SNORM": <36759, F, T, F>,
    "SIGNED_NORMALIZED": <36764, F, T, F>,
    "COPY_READ_BUFFER": <36662, F, T, F>,
    "COPY_WRITE_BUFFER": <36663, F, T, F>,
    "COPY_READ_BUFFER_BINDING": <36662, F, T, F>,
    "COPY_WRITE_BUFFER_BINDING": <36663, F, T, F>,
    "UNIFORM_BUFFER": <35345, F, T, F>,
    "UNIFORM_BUFFER_BINDING": <35368, F, T, F>,
    "UNIFORM_BUFFER_START": <35369, F, T, F>,
    "UNIFORM_BUFFER_SIZE": <35370, F, T, F>,
    "MAX_VERTEX_UNIFORM_BLOCKS": <35371, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_BLOCKS": <35373, F, T, F>,
    "MAX_COMBINED_UNIFORM_BLOCKS": <35374, F, T, F>,
    "MAX_UNIFORM_BUFFER_BINDINGS": <35375, F, T, F>,
    "MAX_UNIFORM_BLOCK_SIZE": <35376, F, T, F>,
    "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": <35377, F, T, F>,
    "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": <35379, F, T, F>,
    "UNIFORM_BUFFER_OFFSET_ALIGNMENT": <35380, F, T, F>,
    "ACTIVE_UNIFORM_BLOCKS": <35382, F, T, F>,
    "UNIFORM_TYPE": <35383, F, T, F>,
    "UNIFORM_SIZE": <35384, F, T, F>,
    "UNIFORM_BLOCK_INDEX": <35386, F, T, F>,
    "UNIFORM_OFFSET": <35387, F, T, F>,
    "UNIFORM_ARRAY_STRIDE": <35388, F, T, F>,
    "UNIFORM_MATRIX_STRIDE": <35389, F, T, F>,
    "UNIFORM_IS_ROW_MAJOR": <35390, F, T, F>,
    "UNIFORM_BLOCK_BINDING": <35391, F, T, F>,
    "UNIFORM_BLOCK_DATA_SIZE": <35392, F, T, F>,
    "UNIFORM_BLOCK_ACTIVE_UNIFORMS": <35394, F, T, F>,
    "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": <35395, F, T, F>,
    "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": <35396, F, T, F>,
    "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": <35398, F, T, F>,
    "INVALID_INDEX": <4294967295, F, T, F>,
    "MAX_VERTEX_OUTPUT_COMPONENTS": <37154, F, T, F>,
    "MAX_FRAGMENT_INPUT_COMPONENTS": <37157, F, T, F>,
    "MAX_SERVER_WAIT_TIMEOUT": <37137, F, T, F>,
    "OBJECT_TYPE": <37138, F, T, F>,
    "SYNC_CONDITION": <37139, F, T, F>,
    "SYNC_STATUS": <37140, F, T, F>,
    "SYNC_FLAGS": <37141, F, T, F>,
    "SYNC_FENCE": <37142, F, T, F>,
    "SYNC_GPU_COMMANDS_COMPLETE": <37143, F, T, F>,
    "UNSIGNALED": <37144, F, T, F>,
    "SIGNALED": <37145, F, T, F>,
    "ALREADY_SIGNALED": <37146, F, T, F>,
    "TIMEOUT_EXPIRED": <37147, F, T, F>,
    "CONDITION_SATISFIED": <37148, F, T, F>,
    "WAIT_FAILED": <37149, F, T, F>,
    "SYNC_FLUSH_COMMANDS_BIT": <1, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_DIVISOR": <35070, F, T, F>,
    "ANY_SAMPLES_PASSED": <35887, F, T, F>,
    "ANY_SAMPLES_PASSED_CONSERVATIVE": <36202, F, T, F>,
    "SAMPLER_BINDING": <35097, F, T, F>,
    "RGB10_A2UI": <36975, F, T, F>,
    "INT_2_10_10_10_REV": <36255, F, T, F>,
    "TRANSFORM_FEEDBACK": <36386, F, T, F>,
    "TRANSFORM_FEEDBACK_PAUSED": <36387, F, T, F>,
    "TRANSFORM_FEEDBACK_ACTIVE": <36388, F, T, F>,
    "TRANSFORM_FEEDBACK_BINDING": <36389, F, T, F>,
    "TEXTURE_IMMUTABLE_FORMAT": <37167, F, T, F>,
    "MAX_ELEMENT_INDEX": <36203, F, T, F>,
    "TEXTURE_IMMUTABLE_LEVELS": <33503, F, T, F>,
    "TIMEOUT_IGNORED": <-1, F, T, F>,
    "MAX_CLIENT_WAIT_TIMEOUT_WEBGL": <37447, F, T, F>,
    "DEPTH_BUFFER_BIT": <256, F, T, F>,
    "STENCIL_BUFFER_BIT": <1024, F, T, F>,
    "COLOR_BUFFER_BIT": <16384, F, T, F>,
    "POINTS": <0, F, T, F>,
    "LINES": <1, F, T, F>,
    "LINE_LOOP": <2, F, T, F>,
    "LINE_STRIP": <3, F, T, F>,
    "TRIANGLES": <4, F, T, F>,
    "TRIANGLE_STRIP": <5, F, T, F>,
    "TRIANGLE_FAN": <6, F, T, F>,
    "ZERO": <0, F, T, F>,
    "ONE": <1, F, T, F>,
    "SRC_COLOR": <768, F, T, F>,
    "ONE_MINUS_SRC_COLOR": <769, F, T, F>,
    "SRC_ALPHA": <770, F, T, F>,
    "ONE_MINUS_SRC_ALPHA": <771, F, T, F>,
    "DST_ALPHA": <772, F, T, F>,
    "ONE_MINUS_DST_ALPHA": <773, F, T, F>,
    "DST_COLOR": <774, F, T, F>,
    "ONE_MINUS_DST_COLOR": <775, F, T, F>,
    "SRC_ALPHA_SATURATE": <776, F, T, F>,
    "FUNC_ADD": <32774, F, T, F>,
    "BLEND_EQUATION": <32777, F, T, F>,
    "BLEND_EQUATION_RGB": <32777, F, T, F>,
    "BLEND_EQUATION_ALPHA": <34877, F, T, F>,
    "FUNC_SUBTRACT": <32778, F, T, F>,
    "FUNC_REVERSE_SUBTRACT": <32779, F, T, F>,
    "BLEND_DST_RGB": <32968, F, T, F>,
    "BLEND_SRC_RGB": <32969, F, T, F>,
    "BLEND_DST_ALPHA": <32970, F, T, F>,
    "BLEND_SRC_ALPHA": <32971, F, T, F>,
    "CONSTANT_COLOR": <32769, F, T, F>,
    "ONE_MINUS_CONSTANT_COLOR": <32770, F, T, F>,
    "CONSTANT_ALPHA": <32771, F, T, F>,
    "ONE_MINUS_CONSTANT_ALPHA": <32772, F, T, F>,
    "BLEND_COLOR": <32773, F, T, F>,
    "ARRAY_BUFFER": <34962, F, T, F>,
    "ELEMENT_ARRAY_BUFFER": <34963, F, T, F>,
    "ARRAY_BUFFER_BINDING": <34964, F, T, F>,
    "ELEMENT_ARRAY_BUFFER_BINDING": <34965, F, T, F>,
    "STREAM_DRAW": <35040, F, T, F>,
    "STATIC_DRAW": <35044, F, T, F>,
    "DYNAMIC_DRAW": <35048, F, T, F>,
    "BUFFER_SIZE": <34660, F, T, F>,
    "BUFFER_USAGE": <34661, F, T, F>,
    "CURRENT_VERTEX_ATTRIB": <34342, F, T, F>,
    "FRONT": <1028, F, T, F>,
    "BACK": <1029, F, T, F>,
    "FRONT_AND_BACK": <1032, F, T, F>,
    "TEXTURE_2D": <3553, F, T, F>,
    "CULL_FACE": <2884, F, T, F>,
    "BLEND": <3042, F, T, F>,
    "DITHER": <3024, F, T, F>,
    "STENCIL_TEST": <2960, F, T, F>,
    "DEPTH_TEST": <2929, F, T, F>,
    "SCISSOR_TEST": <3089, F, T, F>,
    "POLYGON_OFFSET_FILL": <32823, F, T, F>,
    "SAMPLE_ALPHA_TO_COVERAGE": <32926, F, T, F>,
    "SAMPLE_COVERAGE": <32928, F, T, F>,
    "NO_ERROR": <0, F, T, F>,
    "INVALID_ENUM": <1280, F, T, F>,
    "INVALID_VALUE": <1281, F, T, F>,
    "INVALID_OPERATION": <1282, F, T, F>,
    "OUT_OF_MEMORY": <1285, F, T, F>,
    "CW": <2304, F, T, F>,
    "CCW": <2305, F, T, F>,
    "LINE_WIDTH": <2849, F, T, F>,
    "ALIASED_POINT_SIZE_RANGE": <33901, F, T, F>,
    "ALIASED_LINE_WIDTH_RANGE": <33902, F, T, F>,
    "CULL_FACE_MODE": <2885, F, T, F>,
    "FRONT_FACE": <2886, F, T, F>,
    "DEPTH_RANGE": <2928, F, T, F>,
    "DEPTH_WRITEMASK": <2930, F, T, F>,
    "DEPTH_CLEAR_VALUE": <2931, F, T, F>,
    "DEPTH_FUNC": <2932, F, T, F>,
    "STENCIL_CLEAR_VALUE": <2961, F, T, F>,
    "STENCIL_FUNC": <2962, F, T, F>,
    "STENCIL_FAIL": <2964, F, T, F>,
    "STENCIL_PASS_DEPTH_FAIL": <2965, F, T, F>,
    "STENCIL_PASS_DEPTH_PASS": <2966, F, T, F>,
    "STENCIL_REF": <2967, F, T, F>,
    "STENCIL_VALUE_MASK": <2963, F, T, F>,
    "STENCIL_WRITEMASK": <2968, F, T, F>,
    "STENCIL_BACK_FUNC": <34816, F, T, F>,
    "STENCIL_BACK_FAIL": <34817, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_FAIL": <34818, F, T, F>,
    "STENCIL_BACK_PASS_DEPTH_PASS": <34819, F, T, F>,
    "STENCIL_BACK_REF": <36003, F, T, F>,
    "STENCIL_BACK_VALUE_MASK": <36004, F, T, F>,
    "STENCIL_BACK_WRITEMASK": <36005, F, T, F>,
    "VIEWPORT": <2978, F, T, F>,
    "SCISSOR_BOX": <3088, F, T, F>,
    "COLOR_CLEAR_VALUE": <3106, F, T, F>,
    "COLOR_WRITEMASK": <3107, F, T, F>,
    "UNPACK_ALIGNMENT": <3317, F, T, F>,
    "PACK_ALIGNMENT": <3333, F, T, F>,
    "MAX_TEXTURE_SIZE": <3379, F, T, F>,
    "MAX_VIEWPORT_DIMS": <3386, F, T, F>,
    "SUBPIXEL_BITS": <3408, F, T, F>,
    "RED_BITS": <3410, F, T, F>,
    "GREEN_BITS": <3411, F, T, F>,
    "BLUE_BITS": <3412, F, T, F>,
    "ALPHA_BITS": <3413, F, T, F>,
    "DEPTH_BITS": <3414, F, T, F>,
    "STENCIL_BITS": <3415, F, T, F>,
    "POLYGON_OFFSET_UNITS": <10752, F, T, F>,
    "POLYGON_OFFSET_FACTOR": <32824, F, T, F>,
    "TEXTURE_BINDING_2D": <32873, F, T, F>,
    "SAMPLE_BUFFERS": <32936, F, T, F>,
    "SAMPLES": <32937, F, T, F>,
    "SAMPLE_COVERAGE_VALUE": <32938, F, T, F>,
    "SAMPLE_COVERAGE_INVERT": <32939, F, T, F>,
    "COMPRESSED_TEXTURE_FORMATS": <34467, F, T, F>,
    "DONT_CARE": <4352, F, T, F>,
    "FASTEST": <4353, F, T, F>,
    "NICEST": <4354, F, T, F>,
    "GENERATE_MIPMAP_HINT": <33170, F, T, F>,
    "BYTE": <5120, F, T, F>,
    "UNSIGNED_BYTE": <5121, F, T, F>,
    "SHORT": <5122, F, T, F>,
    "UNSIGNED_SHORT": <5123, F, T, F>,
    "INT": <5124, F, T, F>,
    "UNSIGNED_INT": <5125, F, T, F>,
    "FLOAT": <5126, F, T, F>,
    "DEPTH_COMPONENT": <6402, F, T, F>,
    "ALPHA": <6406, F, T, F>,
    "RGB": <6407, F, T, F>,
    "RGBA": <6408, F, T, F>,
    "LUMINANCE": <6409, F, T, F>,
    "LUMINANCE_ALPHA": <6410, F, T, F>,
    "UNSIGNED_SHORT_4_4_4_4": <32819, F, T, F>,
    "UNSIGNED_SHORT_5_5_5_1": <32820, F, T, F>,
    "UNSIGNED_SHORT_5_6_5": <33635, F, T, F>,
    "FRAGMENT_SHADER": <35632, F, T, F>,
    "VERTEX_SHADER": <35633, F, T, F>,
    "MAX_VERTEX_ATTRIBS": <34921, F, T, F>,
    "MAX_VERTEX_UNIFORM_VECTORS": <36347, F, T, F>,
    "MAX_VARYING_VECTORS": <36348, F, T, F>,
    "MAX_COMBINED_TEXTURE_IMAGE_UNITS": <35661, F, T, F>,
    "MAX_VERTEX_TEXTURE_IMAGE_UNITS": <35660, F, T, F>,
    "MAX_TEXTURE_IMAGE_UNITS": <34930, F, T, F>,
    "MAX_FRAGMENT_UNIFORM_VECTORS": <36349, F, T, F>,
    "SHADER_TYPE": <35663, F, T, F>,
    "DELETE_STATUS": <35712, F, T, F>,
    "LINK_STATUS": <35714, F, T, F>,
    "VALIDATE_STATUS": <35715, F, T, F>,
    "ATTACHED_SHADERS": <35717, F, T, F>,
    "ACTIVE_UNIFORMS": <35718, F, T, F>,
    "ACTIVE_ATTRIBUTES": <35721, F, T, F>,
    "SHADING_LANGUAGE_VERSION": <35724, F, T, F>,
    "CURRENT_PROGRAM": <35725, F, T, F>,
    "NEVER": <512, F, T, F>,
    "LESS": <513, F, T, F>,
    "EQUAL": <514, F, T, F>,
    "LEQUAL": <515, F, T, F>,
    "GREATER": <516, F, T, F>,
    "NOTEQUAL": <517, F, T, F>,
    "GEQUAL": <518, F, T, F>,
    "ALWAYS": <519, F, T, F>,
    "KEEP": <7680, F, T, F>,
    "REPLACE": <7681, F, T, F>,
    "INCR": <7682, F, T, F>,
    "DECR": <7683, F, T, F>,
    "INVERT": <5386, F, T, F>,
    "INCR_WRAP": <34055, F, T, F>,
    "DECR_WRAP": <34056, F, T, F>,
    "VENDOR": <7936, F, T, F>,
    "RENDERER": <7937, F, T, F>,
    "VERSION": <7938, F, T, F>,
    "NEAREST": <9728, F, T, F>,
    "LINEAR": <9729, F, T, F>,
    "NEAREST_MIPMAP_NEAREST": <9984, F, T, F>,
    "LINEAR_MIPMAP_NEAREST": <9985, F, T, F>,
    "NEAREST_MIPMAP_LINEAR": <9986, F, T, F>,
    "LINEAR_MIPMAP_LINEAR": <9987, F, T, F>,
    "TEXTURE_MAG_FILTER": <10240, F, T, F>,
    "TEXTURE_MIN_FILTER": <10241, F, T, F>,
    "TEXTURE_WRAP_S": <10242, F, T, F>,
    "TEXTURE_WRAP_T": <10243, F, T, F>,
    "TEXTURE": <5890, F, T, F>,
    "TEXTURE_CUBE_MAP": <34067, F, T, F>,
    "TEXTURE_BINDING_CUBE_MAP": <34068, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_X": <34069, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_X": <34070, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Y": <34071, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Y": <34072, F, T, F>,
    "TEXTURE_CUBE_MAP_POSITIVE_Z": <34073, F, T, F>,
    "TEXTURE_CUBE_MAP_NEGATIVE_Z": <34074, F, T, F>,
    "MAX_CUBE_MAP_TEXTURE_SIZE": <34076, F, T, F>,
    "TEXTURE0": <33984, F, T, F>,
    "TEXTURE1": <33985, F, T, F>,
    "TEXTURE2": <33986, F, T, F>,
    "TEXTURE3": <33987, F, T, F>,
    "TEXTURE4": <33988, F, T, F>,
    "TEXTURE5": <33989, F, T, F>,
    "TEXTURE6": <33990, F, T, F>,
    "TEXTURE7": <33991, F, T, F>,
    "TEXTURE8": <33992, F, T, F>,
    "TEXTURE9": <33993, F, T, F>,
    "TEXTURE10": <33994, F, T, F>,
    "TEXTURE11": <33995, F, T, F>,
    "TEXTURE12": <33996, F, T, F>,
    "TEXTURE13": <33997, F, T, F>,
    "TEXTURE14": <33998, F, T, F>,
    "TEXTURE15": <33999, F, T, F>,
    "TEXTURE16": <34000, F, T, F>,
    "TEXTURE17": <34001, F, T, F>,
    "TEXTURE18": <34002, F, T, F>,
    "TEXTURE19": <34003, F, T, F>,
    "TEXTURE20": <34004, F, T, F>,
    "TEXTURE21": <34005, F, T, F>,
    "TEXTURE22": <34006, F, T, F>,
    "TEXTURE23": <34007, F, T, F>,
    "TEXTURE24": <34008, F, T, F>,
    "TEXTURE25": <34009, F, T, F>,
    "TEXTURE26": <34010, F, T, F>,
    "TEXTURE27": <34011, F, T, F>,
    "TEXTURE28": <34012, F, T, F>,
    "TEXTURE29": <34013, F, T, F>,
    "TEXTURE30": <34014, F, T, F>,
    "TEXTURE31": <34015, F, T, F>,
    "ACTIVE_TEXTURE": <34016, F, T, F>,
    "REPEAT": <10497, F, T, F>,
    "CLAMP_TO_EDGE": <33071, F, T, F>,
    "MIRRORED_REPEAT": <33648, F, T, F>,
    "FLOAT_VEC2": <35664, F, T, F>,
    "FLOAT_VEC3": <35665, F, T, F>,
    "FLOAT_VEC4": <35666, F, T, F>,
    "INT_VEC2": <35667, F, T, F>,
    "INT_VEC3": <35668, F, T, F>,
    "INT_VEC4": <35669, F, T, F>,
    "BOOL": <35670, F, T, F>,
    "BOOL_VEC2": <35671, F, T, F>,
    "BOOL_VEC3": <35672, F, T, F>,
    "BOOL_VEC4": <35673, F, T, F>,
    "FLOAT_MAT2": <35674, F, T, F>,
    "FLOAT_MAT3": <35675, F, T, F>,
    "FLOAT_MAT4": <35676, F, T, F>,
    "SAMPLER_2D": <35678, F, T, F>,
    "SAMPLER_CUBE": <35680, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_ENABLED": <34338, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_SIZE": <34339, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_STRIDE": <34340, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_TYPE": <34341, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_NORMALIZED": <34922, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_POINTER": <34373, F, T, F>,
    "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": <34975, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_TYPE": <35738, F, T, F>,
    "IMPLEMENTATION_COLOR_READ_FORMAT": <35739, F, T, F>,
    "COMPILE_STATUS": <35713, F, T, F>,
    "LOW_FLOAT": <36336, F, T, F>,
    "MEDIUM_FLOAT": <36337, F, T, F>,
    "HIGH_FLOAT": <36338, F, T, F>,
    "LOW_INT": <36339, F, T, F>,
    "MEDIUM_INT": <36340, F, T, F>,
    "HIGH_INT": <36341, F, T, F>,
    "FRAMEBUFFER": <36160, F, T, F>,
    "RENDERBUFFER": <36161, F, T, F>,
    "RGBA4": <32854, F, T, F>,
    "RGB5_A1": <32855, F, T, F>,
    "RGB565": <36194, F, T, F>,
    "DEPTH_COMPONENT16": <33189, F, T, F>,
    "STENCIL_INDEX": <6401, F, T, F>,
    "STENCIL_INDEX8": <36168, F, T, F>,
    "DEPTH_STENCIL": <34041, F, T, F>,
    "RENDERBUFFER_WIDTH": <36162, F, T, F>,
    "RENDERBUFFER_HEIGHT": <36163, F, T, F>,
    "RENDERBUFFER_INTERNAL_FORMAT": <36164, F, T, F>,
    "RENDERBUFFER_RED_SIZE": <36176, F, T, F>,
    "RENDERBUFFER_GREEN_SIZE": <36177, F, T, F>,
    "RENDERBUFFER_BLUE_SIZE": <36178, F, T, F>,
    "RENDERBUFFER_ALPHA_SIZE": <36179, F, T, F>,
    "RENDERBUFFER_DEPTH_SIZE": <36180, F, T, F>,
    "RENDERBUFFER_STENCIL_SIZE": <36181, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": <36048, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": <36049, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": <36050, F, T, F>,
    "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": <36051, F, T, F>,
    "COLOR_ATTACHMENT0": <36064, F, T, F>,
    "DEPTH_ATTACHMENT": <36096, F, T, F>,
    "STENCIL_ATTACHMENT": <36128, F, T, F>,
    "DEPTH_STENCIL_ATTACHMENT": <33306, F, T, F>,
    "NONE": <0, F, T, F>,
    "FRAMEBUFFER_COMPLETE": <36053, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": <36054, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": <36055, F, T, F>,
    "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": <36057, F, T, F>,
    "FRAMEBUFFER_UNSUPPORTED": <36061, F, T, F>,
    "FRAMEBUFFER_BINDING": <36006, F, T, F>,
    "RENDERBUFFER_BINDING": <36007, F, T, F>,
    "MAX_RENDERBUFFER_SIZE": <34024, F, T, F>,
    "INVALID_FRAMEBUFFER_OPERATION": <1286, F, T, F>,
    "UNPACK_FLIP_Y_WEBGL": <37440, F, T, F>,
    "UNPACK_PREMULTIPLY_ALPHA_WEBGL": <37441, F, T, F>,
    "CONTEXT_LOST_WEBGL": <37442, F, T, F>,
    "UNPACK_COLORSPACE_CONVERSION_WEBGL": <37443, F, T, F>,
    "BROWSER_DEFAULT_WEBGL": <37444, F, T, F>,
    "canvas": <undefined, T, T, T>,
    "drawingBufferWidth": <undefined, T, T, T>,
    "drawingBufferHeight": <undefined, T, T, T>,
    "copyBufferSubData": <#Global.WebGL2RenderingContext.prototype.copyBufferSubData, T, T, T>,
    "getBufferSubData": <#Global.WebGL2RenderingContext.prototype.getBufferSubData, T, T, T>,
    "blitFramebuffer": <#Global.WebGL2RenderingContext.prototype.blitFramebuffer, T, T, T>,
    "framebufferTextureLayer": <#Global.WebGL2RenderingContext.prototype.framebufferTextureLayer, T, T, T>,
    "getInternalformatParameter": <#Global.WebGL2RenderingContext.prototype.getInternalformatParameter, T, T, T>,
    "invalidateFramebuffer": <#Global.WebGL2RenderingContext.prototype.invalidateFramebuffer, T, T, T>,
    "invalidateSubFramebuffer": <#Global.WebGL2RenderingContext.prototype.invalidateSubFramebuffer, T, T, T>,
    "readBuffer": <#Global.WebGL2RenderingContext.prototype.readBuffer, T, T, T>,
    "renderbufferStorageMultisample": <#Global.WebGL2RenderingContext.prototype.renderbufferStorageMultisample, T, T, T>,
    "texStorage2D": <#Global.WebGL2RenderingContext.prototype.texStorage2D, T, T, T>,
    "texStorage3D": <#Global.WebGL2RenderingContext.prototype.texStorage3D, T, T, T>,
    "texImage3D": <#Global.WebGL2RenderingContext.prototype.texImage3D, T, T, T>,
    "texSubImage3D": <#Global.WebGL2RenderingContext.prototype.texSubImage3D, T, T, T>,
    "copyTexSubImage3D": <#Global.WebGL2RenderingContext.prototype.copyTexSubImage3D, T, T, T>,
    "compressedTexImage3D": <#Global.WebGL2RenderingContext.prototype.compressedTexImage3D, T, T, T>,
    "compressedTexSubImage3D": <#Global.WebGL2RenderingContext.prototype.compressedTexSubImage3D, T, T, T>,
    "getFragDataLocation": <#Global.WebGL2RenderingContext.prototype.getFragDataLocation, T, T, T>,
    "uniform1ui": <#Global.WebGL2RenderingContext.prototype.uniform1ui, T, T, T>,
    "uniform2ui": <#Global.WebGL2RenderingContext.prototype.uniform2ui, T, T, T>,
    "uniform3ui": <#Global.WebGL2RenderingContext.prototype.uniform3ui, T, T, T>,
    "uniform4ui": <#Global.WebGL2RenderingContext.prototype.uniform4ui, T, T, T>,
    "uniform1uiv": <#Global.WebGL2RenderingContext.prototype.uniform1uiv, T, T, T>,
    "uniform2uiv": <#Global.WebGL2RenderingContext.prototype.uniform2uiv, T, T, T>,
    "uniform3uiv": <#Global.WebGL2RenderingContext.prototype.uniform3uiv, T, T, T>,
    "uniform4uiv": <#Global.WebGL2RenderingContext.prototype.uniform4uiv, T, T, T>,
    "uniformMatrix2x3fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix2x3fv, T, T, T>,
    "uniformMatrix3x2fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix3x2fv, T, T, T>,
    "uniformMatrix2x4fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix2x4fv, T, T, T>,
    "uniformMatrix4x2fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix4x2fv, T, T, T>,
    "uniformMatrix3x4fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix3x4fv, T, T, T>,
    "uniformMatrix4x3fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix4x3fv, T, T, T>,
    "vertexAttribI4i": <#Global.WebGL2RenderingContext.prototype.vertexAttribI4i, T, T, T>,
    "vertexAttribI4iv": <#Global.WebGL2RenderingContext.prototype.vertexAttribI4iv, T, T, T>,
    "vertexAttribI4ui": <#Global.WebGL2RenderingContext.prototype.vertexAttribI4ui, T, T, T>,
    "vertexAttribI4uiv": <#Global.WebGL2RenderingContext.prototype.vertexAttribI4uiv, T, T, T>,
    "vertexAttribIPointer": <#Global.WebGL2RenderingContext.prototype.vertexAttribIPointer, T, T, T>,
    "vertexAttribDivisor": <#Global.WebGL2RenderingContext.prototype.vertexAttribDivisor, T, T, T>,
    "drawArraysInstanced": <#Global.WebGL2RenderingContext.prototype.drawArraysInstanced, T, T, T>,
    "drawElementsInstanced": <#Global.WebGL2RenderingContext.prototype.drawElementsInstanced, T, T, T>,
    "drawRangeElements": <#Global.WebGL2RenderingContext.prototype.drawRangeElements, T, T, T>,
    "drawBuffers": <#Global.WebGL2RenderingContext.prototype.drawBuffers, T, T, T>,
    "clearBufferiv": <#Global.WebGL2RenderingContext.prototype.clearBufferiv, T, T, T>,
    "clearBufferuiv": <#Global.WebGL2RenderingContext.prototype.clearBufferuiv, T, T, T>,
    "clearBufferfv": <#Global.WebGL2RenderingContext.prototype.clearBufferfv, T, T, T>,
    "clearBufferfi": <#Global.WebGL2RenderingContext.prototype.clearBufferfi, T, T, T>,
    "createQuery": <#Global.WebGL2RenderingContext.prototype.createQuery, T, T, T>,
    "deleteQuery": <#Global.WebGL2RenderingContext.prototype.deleteQuery, T, T, T>,
    "isQuery": <#Global.WebGL2RenderingContext.prototype.isQuery, T, T, T>,
    "beginQuery": <#Global.WebGL2RenderingContext.prototype.beginQuery, T, T, T>,
    "endQuery": <#Global.WebGL2RenderingContext.prototype.endQuery, T, T, T>,
    "getQuery": <#Global.WebGL2RenderingContext.prototype.getQuery, T, T, T>,
    "getQueryParameter": <#Global.WebGL2RenderingContext.prototype.getQueryParameter, T, T, T>,
    "createSampler": <#Global.WebGL2RenderingContext.prototype.createSampler, T, T, T>,
    "deleteSampler": <#Global.WebGL2RenderingContext.prototype.deleteSampler, T, T, T>,
    "isSampler": <#Global.WebGL2RenderingContext.prototype.isSampler, T, T, T>,
    "bindSampler": <#Global.WebGL2RenderingContext.prototype.bindSampler, T, T, T>,
    "samplerParameteri": <#Global.WebGL2RenderingContext.prototype.samplerParameteri, T, T, T>,
    "samplerParameterf": <#Global.WebGL2RenderingContext.prototype.samplerParameterf, T, T, T>,
    "getSamplerParameter": <#Global.WebGL2RenderingContext.prototype.getSamplerParameter, T, T, T>,
    "fenceSync": <#Global.WebGL2RenderingContext.prototype.fenceSync, T, T, T>,
    "isSync": <#Global.WebGL2RenderingContext.prototype.isSync, T, T, T>,
    "deleteSync": <#Global.WebGL2RenderingContext.prototype.deleteSync, T, T, T>,
    "clientWaitSync": <#Global.WebGL2RenderingContext.prototype.clientWaitSync, T, T, T>,
    "waitSync": <#Global.WebGL2RenderingContext.prototype.waitSync, T, T, T>,
    "getSyncParameter": <#Global.WebGL2RenderingContext.prototype.getSyncParameter, T, T, T>,
    "createTransformFeedback": <#Global.WebGL2RenderingContext.prototype.createTransformFeedback, T, T, T>,
    "deleteTransformFeedback": <#Global.WebGL2RenderingContext.prototype.deleteTransformFeedback, T, T, T>,
    "isTransformFeedback": <#Global.WebGL2RenderingContext.prototype.isTransformFeedback, T, T, T>,
    "bindTransformFeedback": <#Global.WebGL2RenderingContext.prototype.bindTransformFeedback, T, T, T>,
    "beginTransformFeedback": <#Global.WebGL2RenderingContext.prototype.beginTransformFeedback, T, T, T>,
    "endTransformFeedback": <#Global.WebGL2RenderingContext.prototype.endTransformFeedback, T, T, T>,
    "transformFeedbackVaryings": <#Global.WebGL2RenderingContext.prototype.transformFeedbackVaryings, T, T, T>,
    "getTransformFeedbackVarying": <#Global.WebGL2RenderingContext.prototype.getTransformFeedbackVarying, T, T, T>,
    "pauseTransformFeedback": <#Global.WebGL2RenderingContext.prototype.pauseTransformFeedback, T, T, T>,
    "resumeTransformFeedback": <#Global.WebGL2RenderingContext.prototype.resumeTransformFeedback, T, T, T>,
    "bindBufferBase": <#Global.WebGL2RenderingContext.prototype.bindBufferBase, T, T, T>,
    "bindBufferRange": <#Global.WebGL2RenderingContext.prototype.bindBufferRange, T, T, T>,
    "getIndexedParameter": <#Global.WebGL2RenderingContext.prototype.getIndexedParameter, T, T, T>,
    "getUniformIndices": <#Global.WebGL2RenderingContext.prototype.getUniformIndices, T, T, T>,
    "getActiveUniforms": <#Global.WebGL2RenderingContext.prototype.getActiveUniforms, T, T, T>,
    "getUniformBlockIndex": <#Global.WebGL2RenderingContext.prototype.getUniformBlockIndex, T, T, T>,
    "getActiveUniformBlockParameter": <#Global.WebGL2RenderingContext.prototype.getActiveUniformBlockParameter, T, T, T>,
    "getActiveUniformBlockName": <#Global.WebGL2RenderingContext.prototype.getActiveUniformBlockName, T, T, T>,
    "uniformBlockBinding": <#Global.WebGL2RenderingContext.prototype.uniformBlockBinding, T, T, T>,
    "createVertexArray": <#Global.WebGL2RenderingContext.prototype.createVertexArray, T, T, T>,
    "deleteVertexArray": <#Global.WebGL2RenderingContext.prototype.deleteVertexArray, T, T, T>,
    "isVertexArray": <#Global.WebGL2RenderingContext.prototype.isVertexArray, T, T, T>,
    "bindVertexArray": <#Global.WebGL2RenderingContext.prototype.bindVertexArray, T, T, T>,
    "activeTexture": <#Global.WebGL2RenderingContext.prototype.activeTexture, T, T, T>,
    "attachShader": <#Global.WebGL2RenderingContext.prototype.attachShader, T, T, T>,
    "bindAttribLocation": <#Global.WebGL2RenderingContext.prototype.bindAttribLocation, T, T, T>,
    "bindBuffer": <#Global.WebGL2RenderingContext.prototype.bindBuffer, T, T, T>,
    "bindFramebuffer": <#Global.WebGL2RenderingContext.prototype.bindFramebuffer, T, T, T>,
    "bindRenderbuffer": <#Global.WebGL2RenderingContext.prototype.bindRenderbuffer, T, T, T>,
    "bindTexture": <#Global.WebGL2RenderingContext.prototype.bindTexture, T, T, T>,
    "blendColor": <#Global.WebGL2RenderingContext.prototype.blendColor, T, T, T>,
    "blendEquation": <#Global.WebGL2RenderingContext.prototype.blendEquation, T, T, T>,
    "blendEquationSeparate": <#Global.WebGL2RenderingContext.prototype.blendEquationSeparate, T, T, T>,
    "blendFunc": <#Global.WebGL2RenderingContext.prototype.blendFunc, T, T, T>,
    "blendFuncSeparate": <#Global.WebGL2RenderingContext.prototype.blendFuncSeparate, T, T, T>,
    "bufferData": <#Global.WebGL2RenderingContext.prototype.bufferData, T, T, T>,
    "bufferSubData": <#Global.WebGL2RenderingContext.prototype.bufferSubData, T, T, T>,
    "checkFramebufferStatus": <#Global.WebGL2RenderingContext.prototype.checkFramebufferStatus, T, T, T>,
    "clear": <#Global.WebGL2RenderingContext.prototype.clear, T, T, T>,
    "clearColor": <#Global.WebGL2RenderingContext.prototype.clearColor, T, T, T>,
    "clearDepth": <#Global.WebGL2RenderingContext.prototype.clearDepth, T, T, T>,
    "clearStencil": <#Global.WebGL2RenderingContext.prototype.clearStencil, T, T, T>,
    "colorMask": <#Global.WebGL2RenderingContext.prototype.colorMask, T, T, T>,
    "compileShader": <#Global.WebGL2RenderingContext.prototype.compileShader, T, T, T>,
    "compressedTexImage2D": <#Global.WebGL2RenderingContext.prototype.compressedTexImage2D, T, T, T>,
    "compressedTexSubImage2D": <#Global.WebGL2RenderingContext.prototype.compressedTexSubImage2D, T, T, T>,
    "copyTexImage2D": <#Global.WebGL2RenderingContext.prototype.copyTexImage2D, T, T, T>,
    "copyTexSubImage2D": <#Global.WebGL2RenderingContext.prototype.copyTexSubImage2D, T, T, T>,
    "createBuffer": <#Global.WebGL2RenderingContext.prototype.createBuffer, T, T, T>,
    "createFramebuffer": <#Global.WebGL2RenderingContext.prototype.createFramebuffer, T, T, T>,
    "createProgram": <#Global.WebGL2RenderingContext.prototype.createProgram, T, T, T>,
    "createRenderbuffer": <#Global.WebGL2RenderingContext.prototype.createRenderbuffer, T, T, T>,
    "createShader": <#Global.WebGL2RenderingContext.prototype.createShader, T, T, T>,
    "createTexture": <#Global.WebGL2RenderingContext.prototype.createTexture, T, T, T>,
    "cullFace": <#Global.WebGL2RenderingContext.prototype.cullFace, T, T, T>,
    "deleteBuffer": <#Global.WebGL2RenderingContext.prototype.deleteBuffer, T, T, T>,
    "deleteFramebuffer": <#Global.WebGL2RenderingContext.prototype.deleteFramebuffer, T, T, T>,
    "deleteProgram": <#Global.WebGL2RenderingContext.prototype.deleteProgram, T, T, T>,
    "deleteRenderbuffer": <#Global.WebGL2RenderingContext.prototype.deleteRenderbuffer, T, T, T>,
    "deleteShader": <#Global.WebGL2RenderingContext.prototype.deleteShader, T, T, T>,
    "deleteTexture": <#Global.WebGL2RenderingContext.prototype.deleteTexture, T, T, T>,
    "depthFunc": <#Global.WebGL2RenderingContext.prototype.depthFunc, T, T, T>,
    "depthMask": <#Global.WebGL2RenderingContext.prototype.depthMask, T, T, T>,
    "depthRange": <#Global.WebGL2RenderingContext.prototype.depthRange, T, T, T>,
    "detachShader": <#Global.WebGL2RenderingContext.prototype.detachShader, T, T, T>,
    "disable": <#Global.WebGL2RenderingContext.prototype.disable, T, T, T>,
    "disableVertexAttribArray": <#Global.WebGL2RenderingContext.prototype.disableVertexAttribArray, T, T, T>,
    "drawArrays": <#Global.WebGL2RenderingContext.prototype.drawArrays, T, T, T>,
    "drawElements": <#Global.WebGL2RenderingContext.prototype.drawElements, T, T, T>,
    "enable": <#Global.WebGL2RenderingContext.prototype.enable, T, T, T>,
    "enableVertexAttribArray": <#Global.WebGL2RenderingContext.prototype.enableVertexAttribArray, T, T, T>,
    "finish": <#Global.WebGL2RenderingContext.prototype.finish, T, T, T>,
    "flush": <#Global.WebGL2RenderingContext.prototype.flush, T, T, T>,
    "framebufferRenderbuffer": <#Global.WebGL2RenderingContext.prototype.framebufferRenderbuffer, T, T, T>,
    "framebufferTexture2D": <#Global.WebGL2RenderingContext.prototype.framebufferTexture2D, T, T, T>,
    "frontFace": <#Global.WebGL2RenderingContext.prototype.frontFace, T, T, T>,
    "generateMipmap": <#Global.WebGL2RenderingContext.prototype.generateMipmap, T, T, T>,
    "getActiveAttrib": <#Global.WebGL2RenderingContext.prototype.getActiveAttrib, T, T, T>,
    "getActiveUniform": <#Global.WebGL2RenderingContext.prototype.getActiveUniform, T, T, T>,
    "getAttachedShaders": <#Global.WebGL2RenderingContext.prototype.getAttachedShaders, T, T, T>,
    "getAttribLocation": <#Global.WebGL2RenderingContext.prototype.getAttribLocation, T, T, T>,
    "getBufferParameter": <#Global.WebGL2RenderingContext.prototype.getBufferParameter, T, T, T>,
    "getContextAttributes": <#Global.WebGL2RenderingContext.prototype.getContextAttributes, T, T, T>,
    "getError": <#Global.WebGL2RenderingContext.prototype.getError, T, T, T>,
    "getExtension": <#Global.WebGL2RenderingContext.prototype.getExtension, T, T, T>,
    "getFramebufferAttachmentParameter": <#Global.WebGL2RenderingContext.prototype.getFramebufferAttachmentParameter, T, T, T>,
    "getParameter": <#Global.WebGL2RenderingContext.prototype.getParameter, T, T, T>,
    "getProgramParameter": <#Global.WebGL2RenderingContext.prototype.getProgramParameter, T, T, T>,
    "getProgramInfoLog": <#Global.WebGL2RenderingContext.prototype.getProgramInfoLog, T, T, T>,
    "getRenderbufferParameter": <#Global.WebGL2RenderingContext.prototype.getRenderbufferParameter, T, T, T>,
    "getShaderParameter": <#Global.WebGL2RenderingContext.prototype.getShaderParameter, T, T, T>,
    "getShaderInfoLog": <#Global.WebGL2RenderingContext.prototype.getShaderInfoLog, T, T, T>,
    "getShaderPrecisionFormat": <#Global.WebGL2RenderingContext.prototype.getShaderPrecisionFormat, T, T, T>,
    "getShaderSource": <#Global.WebGL2RenderingContext.prototype.getShaderSource, T, T, T>,
    "getSupportedExtensions": <#Global.WebGL2RenderingContext.prototype.getSupportedExtensions, T, T, T>,
    "getTexParameter": <#Global.WebGL2RenderingContext.prototype.getTexParameter, T, T, T>,
    "getUniform": <#Global.WebGL2RenderingContext.prototype.getUniform, T, T, T>,
    "getUniformLocation": <#Global.WebGL2RenderingContext.prototype.getUniformLocation, T, T, T>,
    "getVertexAttrib": <#Global.WebGL2RenderingContext.prototype.getVertexAttrib, T, T, T>,
    "getVertexAttribOffset": <#Global.WebGL2RenderingContext.prototype.getVertexAttribOffset, T, T, T>,
    "hint": <#Global.WebGL2RenderingContext.prototype.hint, T, T, T>,
    "isBuffer": <#Global.WebGL2RenderingContext.prototype.isBuffer, T, T, T>,
    "isContextLost": <#Global.WebGL2RenderingContext.prototype.isContextLost, T, T, T>,
    "isEnabled": <#Global.WebGL2RenderingContext.prototype.isEnabled, T, T, T>,
    "isFramebuffer": <#Global.WebGL2RenderingContext.prototype.isFramebuffer, T, T, T>,
    "isProgram": <#Global.WebGL2RenderingContext.prototype.isProgram, T, T, T>,
    "isRenderbuffer": <#Global.WebGL2RenderingContext.prototype.isRenderbuffer, T, T, T>,
    "isShader": <#Global.WebGL2RenderingContext.prototype.isShader, T, T, T>,
    "isTexture": <#Global.WebGL2RenderingContext.prototype.isTexture, T, T, T>,
    "lineWidth": <#Global.WebGL2RenderingContext.prototype.lineWidth, T, T, T>,
    "linkProgram": <#Global.WebGL2RenderingContext.prototype.linkProgram, T, T, T>,
    "pixelStorei": <#Global.WebGL2RenderingContext.prototype.pixelStorei, T, T, T>,
    "polygonOffset": <#Global.WebGL2RenderingContext.prototype.polygonOffset, T, T, T>,
    "readPixels": <#Global.WebGL2RenderingContext.prototype.readPixels, T, T, T>,
    "renderbufferStorage": <#Global.WebGL2RenderingContext.prototype.renderbufferStorage, T, T, T>,
    "sampleCoverage": <#Global.WebGL2RenderingContext.prototype.sampleCoverage, T, T, T>,
    "scissor": <#Global.WebGL2RenderingContext.prototype.scissor, T, T, T>,
    "shaderSource": <#Global.WebGL2RenderingContext.prototype.shaderSource, T, T, T>,
    "stencilFunc": <#Global.WebGL2RenderingContext.prototype.stencilFunc, T, T, T>,
    "stencilFuncSeparate": <#Global.WebGL2RenderingContext.prototype.stencilFuncSeparate, T, T, T>,
    "stencilMask": <#Global.WebGL2RenderingContext.prototype.stencilMask, T, T, T>,
    "stencilMaskSeparate": <#Global.WebGL2RenderingContext.prototype.stencilMaskSeparate, T, T, T>,
    "stencilOp": <#Global.WebGL2RenderingContext.prototype.stencilOp, T, T, T>,
    "stencilOpSeparate": <#Global.WebGL2RenderingContext.prototype.stencilOpSeparate, T, T, T>,
    "texParameterf": <#Global.WebGL2RenderingContext.prototype.texParameterf, T, T, T>,
    "texParameteri": <#Global.WebGL2RenderingContext.prototype.texParameteri, T, T, T>,
    "texImage2D": <#Global.WebGL2RenderingContext.prototype.texImage2D, T, T, T>,
    "texSubImage2D": <#Global.WebGL2RenderingContext.prototype.texSubImage2D, T, T, T>,
    "uniform1f": <#Global.WebGL2RenderingContext.prototype.uniform1f, T, T, T>,
    "uniform1fv": <#Global.WebGL2RenderingContext.prototype.uniform1fv, T, T, T>,
    "uniform1i": <#Global.WebGL2RenderingContext.prototype.uniform1i, T, T, T>,
    "uniform1iv": <#Global.WebGL2RenderingContext.prototype.uniform1iv, T, T, T>,
    "uniform2f": <#Global.WebGL2RenderingContext.prototype.uniform2f, T, T, T>,
    "uniform2fv": <#Global.WebGL2RenderingContext.prototype.uniform2fv, T, T, T>,
    "uniform2i": <#Global.WebGL2RenderingContext.prototype.uniform2i, T, T, T>,
    "uniform2iv": <#Global.WebGL2RenderingContext.prototype.uniform2iv, T, T, T>,
    "uniform3f": <#Global.WebGL2RenderingContext.prototype.uniform3f, T, T, T>,
    "uniform3fv": <#Global.WebGL2RenderingContext.prototype.uniform3fv, T, T, T>,
    "uniform3i": <#Global.WebGL2RenderingContext.prototype.uniform3i, T, T, T>,
    "uniform3iv": <#Global.WebGL2RenderingContext.prototype.uniform3iv, T, T, T>,
    "uniform4f": <#Global.WebGL2RenderingContext.prototype.uniform4f, T, T, T>,
    "uniform4fv": <#Global.WebGL2RenderingContext.prototype.uniform4fv, T, T, T>,
    "uniform4i": <#Global.WebGL2RenderingContext.prototype.uniform4i, T, T, T>,
    "uniform4iv": <#Global.WebGL2RenderingContext.prototype.uniform4iv, T, T, T>,
    "uniformMatrix2fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix2fv, T, T, T>,
    "uniformMatrix3fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix3fv, T, T, T>,
    "uniformMatrix4fv": <#Global.WebGL2RenderingContext.prototype.uniformMatrix4fv, T, T, T>,
    "useProgram": <#Global.WebGL2RenderingContext.prototype.useProgram, T, T, T>,
    "validateProgram": <#Global.WebGL2RenderingContext.prototype.validateProgram, T, T, T>,
    "vertexAttrib1f": <#Global.WebGL2RenderingContext.prototype.vertexAttrib1f, T, T, T>,
    "vertexAttrib1fv": <#Global.WebGL2RenderingContext.prototype.vertexAttrib1fv, T, T, T>,
    "vertexAttrib2f": <#Global.WebGL2RenderingContext.prototype.vertexAttrib2f, T, T, T>,
    "vertexAttrib2fv": <#Global.WebGL2RenderingContext.prototype.vertexAttrib2fv, T, T, T>,
    "vertexAttrib3f": <#Global.WebGL2RenderingContext.prototype.vertexAttrib3f, T, T, T>,
    "vertexAttrib3fv": <#Global.WebGL2RenderingContext.prototype.vertexAttrib3fv, T, T, T>,
    "vertexAttrib4f": <#Global.WebGL2RenderingContext.prototype.vertexAttrib4f, T, T, T>,
    "vertexAttrib4fv": <#Global.WebGL2RenderingContext.prototype.vertexAttrib4fv, T, T, T>,
    "vertexAttribPointer": <#Global.WebGL2RenderingContext.prototype.vertexAttribPointer, T, T, T>,
    "viewport": <#Global.WebGL2RenderingContext.prototype.viewport, T, T, T>,
    "constructor": <#Global.WebGL2RenderingContext, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebGL2RenderingContext.prototype.copyBufferSubData: {
    "length": <5, F, F, T>,
    "name": <"copyBufferSubData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getBufferSubData: {
    "length": <3, F, F, T>,
    "name": <"getBufferSubData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.blitFramebuffer: {
    "length": <10, F, F, T>,
    "name": <"blitFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.framebufferTextureLayer: {
    "length": <5, F, F, T>,
    "name": <"framebufferTextureLayer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getInternalformatParameter: {
    "length": <3, F, F, T>,
    "name": <"getInternalformatParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.invalidateFramebuffer: {
    "length": <2, F, F, T>,
    "name": <"invalidateFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.invalidateSubFramebuffer: {
    "length": <6, F, F, T>,
    "name": <"invalidateSubFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.readBuffer: {
    "length": <1, F, F, T>,
    "name": <"readBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.renderbufferStorageMultisample: {
    "length": <5, F, F, T>,
    "name": <"renderbufferStorageMultisample", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texStorage2D: {
    "length": <5, F, F, T>,
    "name": <"texStorage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texStorage3D: {
    "length": <6, F, F, T>,
    "name": <"texStorage3D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texImage3D: {
    "length": <10, F, F, T>,
    "name": <"texImage3D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texSubImage3D: {
    "length": <11, F, F, T>,
    "name": <"texSubImage3D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.copyTexSubImage3D: {
    "length": <9, F, F, T>,
    "name": <"copyTexSubImage3D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.compressedTexImage3D: {
    "length": <8, F, F, T>,
    "name": <"compressedTexImage3D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.compressedTexSubImage3D: {
    "length": <10, F, F, T>,
    "name": <"compressedTexSubImage3D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getFragDataLocation: {
    "length": <2, F, F, T>,
    "name": <"getFragDataLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform1ui: {
    "length": <2, F, F, T>,
    "name": <"uniform1ui", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform2ui: {
    "length": <3, F, F, T>,
    "name": <"uniform2ui", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform3ui: {
    "length": <4, F, F, T>,
    "name": <"uniform3ui", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform4ui: {
    "length": <5, F, F, T>,
    "name": <"uniform4ui", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform1uiv: {
    "length": <2, F, F, T>,
    "name": <"uniform1uiv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform2uiv: {
    "length": <2, F, F, T>,
    "name": <"uniform2uiv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform3uiv: {
    "length": <2, F, F, T>,
    "name": <"uniform3uiv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform4uiv: {
    "length": <2, F, F, T>,
    "name": <"uniform4uiv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix2x3fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix2x3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix3x2fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix3x2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix2x4fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix2x4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix4x2fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix4x2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix3x4fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix3x4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix4x3fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix4x3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttribI4i: {
    "length": <5, F, F, T>,
    "name": <"vertexAttribI4i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttribI4iv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttribI4iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttribI4ui: {
    "length": <5, F, F, T>,
    "name": <"vertexAttribI4ui", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttribI4uiv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttribI4uiv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttribIPointer: {
    "length": <5, F, F, T>,
    "name": <"vertexAttribIPointer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttribDivisor: {
    "length": <2, F, F, T>,
    "name": <"vertexAttribDivisor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.drawArraysInstanced: {
    "length": <4, F, F, T>,
    "name": <"drawArraysInstanced", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.drawElementsInstanced: {
    "length": <5, F, F, T>,
    "name": <"drawElementsInstanced", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.drawRangeElements: {
    "length": <6, F, F, T>,
    "name": <"drawRangeElements", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.drawBuffers: {
    "length": <1, F, F, T>,
    "name": <"drawBuffers", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clearBufferiv: {
    "length": <3, F, F, T>,
    "name": <"clearBufferiv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clearBufferuiv: {
    "length": <3, F, F, T>,
    "name": <"clearBufferuiv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clearBufferfv: {
    "length": <3, F, F, T>,
    "name": <"clearBufferfv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clearBufferfi: {
    "length": <4, F, F, T>,
    "name": <"clearBufferfi", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createQuery: {
    "length": <0, F, F, T>,
    "name": <"createQuery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteQuery: {
    "length": <1, F, F, T>,
    "name": <"deleteQuery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isQuery: {
    "length": <1, F, F, T>,
    "name": <"isQuery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.beginQuery: {
    "length": <2, F, F, T>,
    "name": <"beginQuery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.endQuery: {
    "length": <1, F, F, T>,
    "name": <"endQuery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getQuery: {
    "length": <2, F, F, T>,
    "name": <"getQuery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getQueryParameter: {
    "length": <2, F, F, T>,
    "name": <"getQueryParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createSampler: {
    "length": <0, F, F, T>,
    "name": <"createSampler", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteSampler: {
    "length": <1, F, F, T>,
    "name": <"deleteSampler", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isSampler: {
    "length": <1, F, F, T>,
    "name": <"isSampler", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindSampler: {
    "length": <2, F, F, T>,
    "name": <"bindSampler", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.samplerParameteri: {
    "length": <3, F, F, T>,
    "name": <"samplerParameteri", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.samplerParameterf: {
    "length": <3, F, F, T>,
    "name": <"samplerParameterf", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getSamplerParameter: {
    "length": <2, F, F, T>,
    "name": <"getSamplerParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.fenceSync: {
    "length": <2, F, F, T>,
    "name": <"fenceSync", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isSync: {
    "length": <1, F, F, T>,
    "name": <"isSync", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteSync: {
    "length": <1, F, F, T>,
    "name": <"deleteSync", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clientWaitSync: {
    "length": <3, F, F, T>,
    "name": <"clientWaitSync", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.waitSync: {
    "length": <3, F, F, T>,
    "name": <"waitSync", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getSyncParameter: {
    "length": <2, F, F, T>,
    "name": <"getSyncParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createTransformFeedback: {
    "length": <0, F, F, T>,
    "name": <"createTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteTransformFeedback: {
    "length": <1, F, F, T>,
    "name": <"deleteTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isTransformFeedback: {
    "length": <1, F, F, T>,
    "name": <"isTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindTransformFeedback: {
    "length": <2, F, F, T>,
    "name": <"bindTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.beginTransformFeedback: {
    "length": <1, F, F, T>,
    "name": <"beginTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.endTransformFeedback: {
    "length": <0, F, F, T>,
    "name": <"endTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.transformFeedbackVaryings: {
    "length": <3, F, F, T>,
    "name": <"transformFeedbackVaryings", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getTransformFeedbackVarying: {
    "length": <2, F, F, T>,
    "name": <"getTransformFeedbackVarying", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.pauseTransformFeedback: {
    "length": <0, F, F, T>,
    "name": <"pauseTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.resumeTransformFeedback: {
    "length": <0, F, F, T>,
    "name": <"resumeTransformFeedback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindBufferBase: {
    "length": <3, F, F, T>,
    "name": <"bindBufferBase", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindBufferRange: {
    "length": <5, F, F, T>,
    "name": <"bindBufferRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getIndexedParameter: {
    "length": <2, F, F, T>,
    "name": <"getIndexedParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getUniformIndices: {
    "length": <2, F, F, T>,
    "name": <"getUniformIndices", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getActiveUniforms: {
    "length": <3, F, F, T>,
    "name": <"getActiveUniforms", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getUniformBlockIndex: {
    "length": <2, F, F, T>,
    "name": <"getUniformBlockIndex", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getActiveUniformBlockParameter: {
    "length": <3, F, F, T>,
    "name": <"getActiveUniformBlockParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getActiveUniformBlockName: {
    "length": <2, F, F, T>,
    "name": <"getActiveUniformBlockName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformBlockBinding: {
    "length": <3, F, F, T>,
    "name": <"uniformBlockBinding", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createVertexArray: {
    "length": <0, F, F, T>,
    "name": <"createVertexArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteVertexArray: {
    "length": <1, F, F, T>,
    "name": <"deleteVertexArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isVertexArray: {
    "length": <1, F, F, T>,
    "name": <"isVertexArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindVertexArray: {
    "length": <1, F, F, T>,
    "name": <"bindVertexArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.activeTexture: {
    "length": <1, F, F, T>,
    "name": <"activeTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.attachShader: {
    "length": <2, F, F, T>,
    "name": <"attachShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindAttribLocation: {
    "length": <3, F, F, T>,
    "name": <"bindAttribLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindBuffer: {
    "length": <2, F, F, T>,
    "name": <"bindBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindFramebuffer: {
    "length": <2, F, F, T>,
    "name": <"bindFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindRenderbuffer: {
    "length": <2, F, F, T>,
    "name": <"bindRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bindTexture: {
    "length": <2, F, F, T>,
    "name": <"bindTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.blendColor: {
    "length": <4, F, F, T>,
    "name": <"blendColor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.blendEquation: {
    "length": <1, F, F, T>,
    "name": <"blendEquation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.blendEquationSeparate: {
    "length": <2, F, F, T>,
    "name": <"blendEquationSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.blendFunc: {
    "length": <2, F, F, T>,
    "name": <"blendFunc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.blendFuncSeparate: {
    "length": <4, F, F, T>,
    "name": <"blendFuncSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bufferData: {
    "length": <3, F, F, T>,
    "name": <"bufferData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.bufferSubData: {
    "length": <3, F, F, T>,
    "name": <"bufferSubData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.checkFramebufferStatus: {
    "length": <1, F, F, T>,
    "name": <"checkFramebufferStatus", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clear: {
    "length": <1, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clearColor: {
    "length": <4, F, F, T>,
    "name": <"clearColor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clearDepth: {
    "length": <1, F, F, T>,
    "name": <"clearDepth", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.clearStencil: {
    "length": <1, F, F, T>,
    "name": <"clearStencil", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.colorMask: {
    "length": <4, F, F, T>,
    "name": <"colorMask", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.compileShader: {
    "length": <1, F, F, T>,
    "name": <"compileShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.compressedTexImage2D: {
    "length": <7, F, F, T>,
    "name": <"compressedTexImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.compressedTexSubImage2D: {
    "length": <8, F, F, T>,
    "name": <"compressedTexSubImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.copyTexImage2D: {
    "length": <8, F, F, T>,
    "name": <"copyTexImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.copyTexSubImage2D: {
    "length": <8, F, F, T>,
    "name": <"copyTexSubImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createBuffer: {
    "length": <0, F, F, T>,
    "name": <"createBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createFramebuffer: {
    "length": <0, F, F, T>,
    "name": <"createFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createProgram: {
    "length": <0, F, F, T>,
    "name": <"createProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createRenderbuffer: {
    "length": <0, F, F, T>,
    "name": <"createRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createShader: {
    "length": <1, F, F, T>,
    "name": <"createShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.createTexture: {
    "length": <0, F, F, T>,
    "name": <"createTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.cullFace: {
    "length": <1, F, F, T>,
    "name": <"cullFace", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteBuffer: {
    "length": <1, F, F, T>,
    "name": <"deleteBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteFramebuffer: {
    "length": <1, F, F, T>,
    "name": <"deleteFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteProgram: {
    "length": <1, F, F, T>,
    "name": <"deleteProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteRenderbuffer: {
    "length": <1, F, F, T>,
    "name": <"deleteRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteShader: {
    "length": <1, F, F, T>,
    "name": <"deleteShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.deleteTexture: {
    "length": <1, F, F, T>,
    "name": <"deleteTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.depthFunc: {
    "length": <1, F, F, T>,
    "name": <"depthFunc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.depthMask: {
    "length": <1, F, F, T>,
    "name": <"depthMask", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.depthRange: {
    "length": <2, F, F, T>,
    "name": <"depthRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.detachShader: {
    "length": <2, F, F, T>,
    "name": <"detachShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.disable: {
    "length": <1, F, F, T>,
    "name": <"disable", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.disableVertexAttribArray: {
    "length": <1, F, F, T>,
    "name": <"disableVertexAttribArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.drawArrays: {
    "length": <3, F, F, T>,
    "name": <"drawArrays", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.drawElements: {
    "length": <4, F, F, T>,
    "name": <"drawElements", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.enable: {
    "length": <1, F, F, T>,
    "name": <"enable", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.enableVertexAttribArray: {
    "length": <1, F, F, T>,
    "name": <"enableVertexAttribArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.finish: {
    "length": <0, F, F, T>,
    "name": <"finish", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.flush: {
    "length": <0, F, F, T>,
    "name": <"flush", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.framebufferRenderbuffer: {
    "length": <4, F, F, T>,
    "name": <"framebufferRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.framebufferTexture2D: {
    "length": <5, F, F, T>,
    "name": <"framebufferTexture2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.frontFace: {
    "length": <1, F, F, T>,
    "name": <"frontFace", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.generateMipmap: {
    "length": <1, F, F, T>,
    "name": <"generateMipmap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getActiveAttrib: {
    "length": <2, F, F, T>,
    "name": <"getActiveAttrib", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getActiveUniform: {
    "length": <2, F, F, T>,
    "name": <"getActiveUniform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getAttachedShaders: {
    "length": <1, F, F, T>,
    "name": <"getAttachedShaders", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getAttribLocation: {
    "length": <2, F, F, T>,
    "name": <"getAttribLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getBufferParameter: {
    "length": <2, F, F, T>,
    "name": <"getBufferParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getContextAttributes: {
    "length": <0, F, F, T>,
    "name": <"getContextAttributes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getError: {
    "length": <0, F, F, T>,
    "name": <"getError", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getExtension: {
    "length": <1, F, F, T>,
    "name": <"getExtension", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getFramebufferAttachmentParameter: {
    "length": <3, F, F, T>,
    "name": <"getFramebufferAttachmentParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getParameter: {
    "length": <1, F, F, T>,
    "name": <"getParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getProgramParameter: {
    "length": <2, F, F, T>,
    "name": <"getProgramParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getProgramInfoLog: {
    "length": <1, F, F, T>,
    "name": <"getProgramInfoLog", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getRenderbufferParameter: {
    "length": <2, F, F, T>,
    "name": <"getRenderbufferParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getShaderParameter: {
    "length": <2, F, F, T>,
    "name": <"getShaderParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getShaderInfoLog: {
    "length": <1, F, F, T>,
    "name": <"getShaderInfoLog", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getShaderPrecisionFormat: {
    "length": <2, F, F, T>,
    "name": <"getShaderPrecisionFormat", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getShaderSource: {
    "length": <1, F, F, T>,
    "name": <"getShaderSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getSupportedExtensions: {
    "length": <0, F, F, T>,
    "name": <"getSupportedExtensions", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getTexParameter: {
    "length": <2, F, F, T>,
    "name": <"getTexParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getUniform: {
    "length": <2, F, F, T>,
    "name": <"getUniform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getUniformLocation: {
    "length": <2, F, F, T>,
    "name": <"getUniformLocation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getVertexAttrib: {
    "length": <2, F, F, T>,
    "name": <"getVertexAttrib", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.getVertexAttribOffset: {
    "length": <2, F, F, T>,
    "name": <"getVertexAttribOffset", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.hint: {
    "length": <2, F, F, T>,
    "name": <"hint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isBuffer: {
    "length": <1, F, F, T>,
    "name": <"isBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isContextLost: {
    "length": <0, F, F, T>,
    "name": <"isContextLost", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isEnabled: {
    "length": <1, F, F, T>,
    "name": <"isEnabled", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isFramebuffer: {
    "length": <1, F, F, T>,
    "name": <"isFramebuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isProgram: {
    "length": <1, F, F, T>,
    "name": <"isProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isRenderbuffer: {
    "length": <1, F, F, T>,
    "name": <"isRenderbuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isShader: {
    "length": <1, F, F, T>,
    "name": <"isShader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.isTexture: {
    "length": <1, F, F, T>,
    "name": <"isTexture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.lineWidth: {
    "length": <1, F, F, T>,
    "name": <"lineWidth", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.linkProgram: {
    "length": <1, F, F, T>,
    "name": <"linkProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.pixelStorei: {
    "length": <2, F, F, T>,
    "name": <"pixelStorei", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.polygonOffset: {
    "length": <2, F, F, T>,
    "name": <"polygonOffset", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.readPixels: {
    "length": <7, F, F, T>,
    "name": <"readPixels", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.renderbufferStorage: {
    "length": <4, F, F, T>,
    "name": <"renderbufferStorage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.sampleCoverage: {
    "length": <2, F, F, T>,
    "name": <"sampleCoverage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.scissor: {
    "length": <4, F, F, T>,
    "name": <"scissor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.shaderSource: {
    "length": <2, F, F, T>,
    "name": <"shaderSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.stencilFunc: {
    "length": <3, F, F, T>,
    "name": <"stencilFunc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.stencilFuncSeparate: {
    "length": <4, F, F, T>,
    "name": <"stencilFuncSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.stencilMask: {
    "length": <1, F, F, T>,
    "name": <"stencilMask", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.stencilMaskSeparate: {
    "length": <2, F, F, T>,
    "name": <"stencilMaskSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.stencilOp: {
    "length": <3, F, F, T>,
    "name": <"stencilOp", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.stencilOpSeparate: {
    "length": <4, F, F, T>,
    "name": <"stencilOpSeparate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texParameterf: {
    "length": <3, F, F, T>,
    "name": <"texParameterf", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texParameteri: {
    "length": <3, F, F, T>,
    "name": <"texParameteri", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texImage2D: {
    "length": <6, F, F, T>,
    "name": <"texImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.texSubImage2D: {
    "length": <7, F, F, T>,
    "name": <"texSubImage2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform1f: {
    "length": <2, F, F, T>,
    "name": <"uniform1f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform1fv: {
    "length": <2, F, F, T>,
    "name": <"uniform1fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform1i: {
    "length": <2, F, F, T>,
    "name": <"uniform1i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform1iv: {
    "length": <2, F, F, T>,
    "name": <"uniform1iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform2f: {
    "length": <3, F, F, T>,
    "name": <"uniform2f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform2fv: {
    "length": <2, F, F, T>,
    "name": <"uniform2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform2i: {
    "length": <3, F, F, T>,
    "name": <"uniform2i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform2iv: {
    "length": <2, F, F, T>,
    "name": <"uniform2iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform3f: {
    "length": <4, F, F, T>,
    "name": <"uniform3f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform3fv: {
    "length": <2, F, F, T>,
    "name": <"uniform3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform3i: {
    "length": <4, F, F, T>,
    "name": <"uniform3i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform3iv: {
    "length": <2, F, F, T>,
    "name": <"uniform3iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform4f: {
    "length": <5, F, F, T>,
    "name": <"uniform4f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform4fv: {
    "length": <2, F, F, T>,
    "name": <"uniform4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform4i: {
    "length": <5, F, F, T>,
    "name": <"uniform4i", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniform4iv: {
    "length": <2, F, F, T>,
    "name": <"uniform4iv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix2fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix3fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.uniformMatrix4fv: {
    "length": <3, F, F, T>,
    "name": <"uniformMatrix4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.useProgram: {
    "length": <1, F, F, T>,
    "name": <"useProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.validateProgram: {
    "length": <1, F, F, T>,
    "name": <"validateProgram", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib1f: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib1f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib1fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib1fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib2f: {
    "length": <3, F, F, T>,
    "name": <"vertexAttrib2f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib2fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib2fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib3f: {
    "length": <4, F, F, T>,
    "name": <"vertexAttrib3f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib3fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib3fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib4f: {
    "length": <5, F, F, T>,
    "name": <"vertexAttrib4f", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttrib4fv: {
    "length": <2, F, F, T>,
    "name": <"vertexAttrib4fv", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.vertexAttribPointer: {
    "length": <6, F, F, T>,
    "name": <"vertexAttribPointer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebGL2RenderingContext.prototype.viewport: {
    "length": <4, F, F, T>,
    "name": <"viewport", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WaveShaperNode: {
    "length": <1, F, F, T>,
    "name": <"WaveShaperNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WaveShaperNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WaveShaperNode.prototype: {
    "curve": <undefined, T, T, T>,
    "oversample": <undefined, T, T, T>,
    "constructor": <#Global.WaveShaperNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.WaveShaperNode.prototype.[[Prototype]]: {
    "context": <undefined, T, T, T>,
    "numberOfInputs": <undefined, T, T, T>,
    "numberOfOutputs": <undefined, T, T, T>,
    "channelCount": <undefined, T, T, T>,
    "channelCountMode": <undefined, T, T, T>,
    "channelInterpretation": <undefined, T, T, T>,
    "connect": <#Global.WaveShaperNode.prototype.[[Prototype]].connect, T, T, T>,
    "disconnect": <#Global.WaveShaperNode.prototype.[[Prototype]].disconnect, T, T, T>,
    "constructor": <#Global.WaveShaperNode.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.WaveShaperNode.prototype.[[Prototype]].connect: {
    "length": <1, F, F, T>,
    "name": <"connect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WaveShaperNode.prototype.[[Prototype]].disconnect: {
    "length": <0, F, F, T>,
    "name": <"disconnect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WaveShaperNode.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"AudioNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WaveShaperNode.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Uint8ClampedArray: {
    "length": <3, F, F, T>,
    "name": <"Uint8ClampedArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Uint8ClampedArray.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <1, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Uint8ClampedArray.prototype: {
    "constructor": <#Global.Uint8ClampedArray, T, F, T>,
    "BYTES_PER_ELEMENT": <1, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.TextEncoder: {
    "length": <0, F, F, T>,
    "name": <"TextEncoder", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TextEncoder.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TextEncoder.prototype: {
    "encoding": <undefined, T, T, T>,
    "encode": <#Global.TextEncoder.prototype.encode, T, T, T>,
    "constructor": <#Global.TextEncoder, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TextEncoder.prototype.encode: {
    "length": <0, F, F, T>,
    "name": <"encode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TextDecoder: {
    "length": <0, F, F, T>,
    "name": <"TextDecoder", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TextDecoder.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TextDecoder.prototype: {
    "encoding": <undefined, T, T, T>,
    "fatal": <undefined, T, T, T>,
    "ignoreBOM": <undefined, T, T, T>,
    "decode": <#Global.TextDecoder.prototype.decode, T, T, T>,
    "constructor": <#Global.TextDecoder, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TextDecoder.prototype.decode: {
    "length": <0, F, F, T>,
    "name": <"decode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto: {
    "length": <0, F, F, T>,
    "name": <"SubtleCrypto", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SubtleCrypto.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype: {
    "encrypt": <#Global.SubtleCrypto.prototype.encrypt, T, T, T>,
    "decrypt": <#Global.SubtleCrypto.prototype.decrypt, T, T, T>,
    "sign": <#Global.SubtleCrypto.prototype.sign, T, T, T>,
    "verify": <#Global.SubtleCrypto.prototype.verify, T, T, T>,
    "digest": <#Global.SubtleCrypto.prototype.digest, T, T, T>,
    "generateKey": <#Global.SubtleCrypto.prototype.generateKey, T, T, T>,
    "importKey": <#Global.SubtleCrypto.prototype.importKey, T, T, T>,
    "exportKey": <#Global.SubtleCrypto.prototype.exportKey, T, T, T>,
    "deriveBits": <#Global.SubtleCrypto.prototype.deriveBits, T, T, T>,
    "deriveKey": <#Global.SubtleCrypto.prototype.deriveKey, T, T, T>,
    "wrapKey": <#Global.SubtleCrypto.prototype.wrapKey, T, T, T>,
    "unwrapKey": <#Global.SubtleCrypto.prototype.unwrapKey, T, T, T>,
    "constructor": <#Global.SubtleCrypto, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SubtleCrypto.prototype.encrypt: {
    "length": <3, F, F, T>,
    "name": <"encrypt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.decrypt: {
    "length": <3, F, F, T>,
    "name": <"decrypt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.sign: {
    "length": <3, F, F, T>,
    "name": <"sign", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.verify: {
    "length": <4, F, F, T>,
    "name": <"verify", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.digest: {
    "length": <2, F, F, T>,
    "name": <"digest", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.generateKey: {
    "length": <3, F, F, T>,
    "name": <"generateKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.importKey: {
    "length": <5, F, F, T>,
    "name": <"importKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.exportKey: {
    "length": <2, F, F, T>,
    "name": <"exportKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.deriveBits: {
    "length": <3, F, F, T>,
    "name": <"deriveBits", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.deriveKey: {
    "length": <5, F, F, T>,
    "name": <"deriveKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.wrapKey: {
    "length": <4, F, F, T>,
    "name": <"wrapKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SubtleCrypto.prototype.unwrapKey: {
    "length": <7, F, F, T>,
    "name": <"unwrapKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.StorageEvent: {
    "length": <1, F, F, T>,
    "name": <"StorageEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.StorageEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.StorageEvent.prototype: {
    "key": <undefined, T, T, T>,
    "oldValue": <undefined, T, T, T>,
    "newValue": <undefined, T, T, T>,
    "url": <undefined, T, T, T>,
    "storageArea": <undefined, T, T, T>,
    "initStorageEvent": <#Global.StorageEvent.prototype.initStorageEvent, T, T, T>,
    "constructor": <#Global.StorageEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.StorageEvent.prototype.initStorageEvent: {
    "length": <0, F, F, T>,
    "name": <"initStorageEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Storage: {
    "length": <0, F, F, T>,
    "name": <"Storage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Storage.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Storage.prototype: {
    "length": <undefined, T, F, T>,
    "key": <#Global.Storage.prototype.key, T, F, T>,
    "getItem": <#Global.Storage.prototype.getItem, T, F, T>,
    "setItem": <#Global.Storage.prototype.setItem, T, F, T>,
    "removeItem": <#Global.Storage.prototype.removeItem, T, F, T>,
    "clear": <#Global.Storage.prototype.clear, T, F, T>,
    "constructor": <#Global.Storage, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Storage.prototype.key: {
    "length": <1, F, F, T>,
    "name": <"key", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Storage.prototype.getItem: {
    "length": <1, F, F, T>,
    "name": <"getItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Storage.prototype.setItem: {
    "length": <2, F, F, T>,
    "name": <"setItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Storage.prototype.removeItem: {
    "length": <1, F, F, T>,
    "name": <"removeItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Storage.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ByteLengthQueuingStrategy: {
    "length": <1, F, F, T>,
    "name": <"ByteLengthQueuingStrategy", F, F, T>,
    "prototype": <#Global.ByteLengthQueuingStrategy.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ByteLengthQueuingStrategy.prototype: {
    "constructor": <#Global.ByteLengthQueuingStrategy, T, F, T>,
    "size": <#Global.ByteLengthQueuingStrategy.prototype.size, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ByteLengthQueuingStrategy.prototype.size: {
    "length": <1, F, F, T>,
    "name": <"size", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.StereoPannerNode: {
    "length": <1, F, F, T>,
    "name": <"StereoPannerNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.StereoPannerNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.StereoPannerNode.prototype: {
    "pan": <undefined, T, T, T>,
    "constructor": <#Global.StereoPannerNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SourceBufferList: {
    "length": <0, F, F, T>,
    "name": <"SourceBufferList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SourceBufferList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SourceBufferList.prototype: {
    "length": <undefined, T, T, T>,
    "onaddsourcebuffer": <undefined, T, T, T>,
    "onremovesourcebuffer": <undefined, T, T, T>,
    "constructor": <#Global.SourceBufferList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SourceBuffer: {
    "length": <0, F, F, T>,
    "name": <"SourceBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SourceBuffer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SourceBuffer.prototype: {
    "mode": <undefined, T, T, T>,
    "updating": <undefined, T, T, T>,
    "buffered": <undefined, T, T, T>,
    "timestampOffset": <undefined, T, T, T>,
    "appendWindowStart": <undefined, T, T, T>,
    "appendWindowEnd": <undefined, T, T, T>,
    "onupdatestart": <undefined, T, T, T>,
    "onupdate": <undefined, T, T, T>,
    "onupdateend": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "appendBuffer": <#Global.SourceBuffer.prototype.appendBuffer, T, T, T>,
    "abort": <#Global.SourceBuffer.prototype.abort, T, T, T>,
    "remove": <#Global.SourceBuffer.prototype.remove, T, T, T>,
    "constructor": <#Global.SourceBuffer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SourceBuffer.prototype.appendBuffer: {
    "length": <1, F, F, T>,
    "name": <"appendBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SourceBuffer.prototype.abort: {
    "length": <0, F, F, T>,
    "name": <"abort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SourceBuffer.prototype.remove: {
    "length": <2, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerRegistration: {
    "length": <0, F, F, T>,
    "name": <"ServiceWorkerRegistration", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ServiceWorkerRegistration.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerRegistration.prototype: {
    "installing": <undefined, T, T, T>,
    "waiting": <undefined, T, T, T>,
    "active": <undefined, T, T, T>,
    "scope": <undefined, T, T, T>,
    "onupdatefound": <undefined, T, T, T>,
    "update": <#Global.ServiceWorkerRegistration.prototype.update, T, T, T>,
    "unregister": <#Global.ServiceWorkerRegistration.prototype.unregister, T, T, T>,
    "sync": <undefined, T, T, T>,
    "pushManager": <undefined, T, T, T>,
    "showNotification": <#Global.ServiceWorkerRegistration.prototype.showNotification, T, T, T>,
    "getNotifications": <#Global.ServiceWorkerRegistration.prototype.getNotifications, T, T, T>,
    "constructor": <#Global.ServiceWorkerRegistration, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ServiceWorkerRegistration.prototype.update: {
    "length": <0, F, F, T>,
    "name": <"update", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerRegistration.prototype.unregister: {
    "length": <0, F, F, T>,
    "name": <"unregister", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerRegistration.prototype.showNotification: {
    "length": <1, F, F, T>,
    "name": <"showNotification", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerRegistration.prototype.getNotifications: {
    "length": <0, F, F, T>,
    "name": <"getNotifications", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerMessageEvent: {
    "length": <0, F, F, T>,
    "name": <"ServiceWorkerMessageEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ServiceWorkerMessageEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerMessageEvent.prototype: {
    "data": <undefined, T, T, T>,
    "origin": <undefined, T, T, T>,
    "lastEventId": <undefined, T, T, T>,
    "source": <undefined, T, T, T>,
    "ports": <undefined, T, T, T>,
    "constructor": <#Global.ServiceWorkerMessageEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ServiceWorkerContainer: {
    "length": <0, F, F, T>,
    "name": <"ServiceWorkerContainer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ServiceWorkerContainer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerContainer.prototype: {
    "controller": <undefined, T, T, T>,
    "ready": <undefined, T, T, T>,
    "oncontrollerchange": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "register": <#Global.ServiceWorkerContainer.prototype.register, T, T, T>,
    "getRegistration": <#Global.ServiceWorkerContainer.prototype.getRegistration, T, T, T>,
    "getRegistrations": <#Global.ServiceWorkerContainer.prototype.getRegistrations, T, T, T>,
    "constructor": <#Global.ServiceWorkerContainer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ServiceWorkerContainer.prototype.register: {
    "length": <1, F, F, T>,
    "name": <"register", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerContainer.prototype.getRegistration: {
    "length": <0, F, F, T>,
    "name": <"getRegistration", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorkerContainer.prototype.getRegistrations: {
    "length": <0, F, F, T>,
    "name": <"getRegistrations", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ServiceWorker: {
    "length": <0, F, F, T>,
    "name": <"ServiceWorker", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ServiceWorker.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ServiceWorker.prototype: {
    "scriptURL": <undefined, T, T, T>,
    "state": <undefined, T, T, T>,
    "onstatechange": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "postMessage": <#Global.ServiceWorker.prototype.postMessage, T, T, T>,
    "constructor": <#Global.ServiceWorker, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ServiceWorker.prototype.postMessage: {
    "length": <1, F, F, T>,
    "name": <"postMessage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Uint16Array: {
    "length": <3, F, F, T>,
    "name": <"Uint16Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Uint16Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <2, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Uint16Array.prototype: {
    "constructor": <#Global.Uint16Array, T, F, T>,
    "BYTES_PER_ELEMENT": <2, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ScriptProcessorNode: {
    "length": <0, F, F, T>,
    "name": <"ScriptProcessorNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ScriptProcessorNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ScriptProcessorNode.prototype: {
    "onaudioprocess": <undefined, T, T, T>,
    "bufferSize": <undefined, T, T, T>,
    "constructor": <#Global.ScriptProcessorNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ScreenOrientation: {
    "length": <0, F, F, T>,
    "name": <"ScreenOrientation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ScreenOrientation.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ScreenOrientation.prototype: {
    "angle": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "lock": <#Global.ScreenOrientation.prototype.lock, T, T, T>,
    "unlock": <#Global.ScreenOrientation.prototype.unlock, T, T, T>,
    "constructor": <#Global.ScreenOrientation, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ScreenOrientation.prototype.lock: {
    "length": <1, F, F, T>,
    "name": <"lock", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ScreenOrientation.prototype.unlock: {
    "length": <0, F, F, T>,
    "name": <"unlock", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Response: {
    "length": <0, F, F, T>,
    "name": <"Response", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Response.prototype, F, F, F>,
    "error": <#Global.Response.error, T, T, T>,
    "redirect": <#Global.Response.redirect, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Response.prototype: {
    "type": <undefined, T, T, T>,
    "url": <undefined, T, T, T>,
    "status": <undefined, T, T, T>,
    "ok": <undefined, T, T, T>,
    "statusText": <undefined, T, T, T>,
    "headers": <undefined, T, T, T>,
    "body": <undefined, T, T, T>,
    "bodyUsed": <undefined, T, T, T>,
    "clone": <#Global.Response.prototype.clone, T, T, T>,
    "arrayBuffer": <#Global.Response.prototype.arrayBuffer, T, T, T>,
    "blob": <#Global.Response.prototype.blob, T, T, T>,
    "json": <#Global.Response.prototype.json, T, T, T>,
    "text": <#Global.Response.prototype.text, T, T, T>,
    "constructor": <#Global.Response, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Response.prototype.clone: {
    "length": <0, F, F, T>,
    "name": <"clone", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Response.prototype.arrayBuffer: {
    "length": <0, F, F, T>,
    "name": <"arrayBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Response.prototype.blob: {
    "length": <0, F, F, T>,
    "name": <"blob", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Response.prototype.json: {
    "length": <0, F, F, T>,
    "name": <"json", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Response.prototype.text: {
    "length": <0, F, F, T>,
    "name": <"text", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Response.error: {
    "length": <0, F, F, T>,
    "name": <"error", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Response.redirect: {
    "length": <1, F, F, T>,
    "name": <"redirect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Request: {
    "length": <1, F, F, T>,
    "name": <"Request", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Request.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Request.prototype: {
    "method": <undefined, T, T, T>,
    "url": <undefined, T, T, T>,
    "headers": <undefined, T, T, T>,
    "referrer": <undefined, T, T, T>,
    "referrerPolicy": <undefined, T, T, T>,
    "mode": <undefined, T, T, T>,
    "credentials": <undefined, T, T, T>,
    "redirect": <undefined, T, T, T>,
    "integrity": <undefined, T, T, T>,
    "bodyUsed": <undefined, T, T, T>,
    "clone": <#Global.Request.prototype.clone, T, T, T>,
    "arrayBuffer": <#Global.Request.prototype.arrayBuffer, T, T, T>,
    "blob": <#Global.Request.prototype.blob, T, T, T>,
    "json": <#Global.Request.prototype.json, T, T, T>,
    "text": <#Global.Request.prototype.text, T, T, T>,
    "constructor": <#Global.Request, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Request.prototype.clone: {
    "length": <0, F, F, T>,
    "name": <"clone", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Request.prototype.arrayBuffer: {
    "length": <0, F, F, T>,
    "name": <"arrayBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Request.prototype.blob: {
    "length": <0, F, F, T>,
    "name": <"blob", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Request.prototype.json: {
    "length": <0, F, F, T>,
    "name": <"json", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Request.prototype.text: {
    "length": <0, F, F, T>,
    "name": <"text", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RTCSessionDescription: {
    "length": <0, F, F, T>,
    "name": <"RTCSessionDescription", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RTCSessionDescription.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RTCSessionDescription.prototype: {
    "type": <undefined, T, T, T>,
    "sdp": <undefined, T, T, T>,
    "toJSON": <#Global.RTCSessionDescription.prototype.toJSON, T, T, T>,
    "constructor": <#Global.RTCSessionDescription, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.RTCSessionDescription.prototype.toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RTCPeerConnectionIceEvent: {
    "length": <1, F, F, T>,
    "name": <"RTCPeerConnectionIceEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RTCPeerConnectionIceEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RTCPeerConnectionIceEvent.prototype: {
    "candidate": <undefined, T, T, T>,
    "constructor": <#Global.RTCPeerConnectionIceEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.RTCIceCandidate: {
    "length": <1, F, F, T>,
    "name": <"RTCIceCandidate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RTCIceCandidate.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RTCIceCandidate.prototype: {
    "candidate": <undefined, T, T, T>,
    "sdpMid": <undefined, T, T, T>,
    "sdpMLineIndex": <undefined, T, T, T>,
    "toJSON": <#Global.RTCIceCandidate.prototype.toJSON, T, T, T>,
    "constructor": <#Global.RTCIceCandidate, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.RTCIceCandidate.prototype.toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RTCDataChannelEvent: {
    "length": <2, F, F, T>,
    "name": <"RTCDataChannelEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RTCDataChannelEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RTCDataChannelEvent.prototype: {
    "channel": <undefined, T, T, T>,
    "constructor": <#Global.RTCDataChannelEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.RTCDataChannel: {
    "length": <0, F, F, T>,
    "name": <"RTCDataChannel", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RTCDataChannel.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RTCDataChannel.prototype: {
    "label": <undefined, T, T, T>,
    "ordered": <undefined, T, T, T>,
    "maxRetransmitTime": <undefined, T, T, T>,
    "maxRetransmits": <undefined, T, T, T>,
    "protocol": <undefined, T, T, T>,
    "negotiated": <undefined, T, T, T>,
    "id": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "bufferedAmount": <undefined, T, T, T>,
    "bufferedAmountLowThreshold": <undefined, T, T, T>,
    "onopen": <undefined, T, T, T>,
    "onbufferedamountlow": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "binaryType": <undefined, T, T, T>,
    "reliable": <undefined, T, T, T>,
    "close": <#Global.RTCDataChannel.prototype.close, T, T, T>,
    "send": <#Global.RTCDataChannel.prototype.send, T, T, T>,
    "constructor": <#Global.RTCDataChannel, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.RTCDataChannel.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RTCDataChannel.prototype.send: {
    "length": <1, F, F, T>,
    "name": <"send", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RTCCertificate: {
    "length": <0, F, F, T>,
    "name": <"RTCCertificate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RTCCertificate.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RTCCertificate.prototype: {
    "expires": <undefined, T, T, T>,
    "constructor": <#Global.RTCCertificate, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Plugin: {
    "length": <0, F, F, T>,
    "name": <"Plugin", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Plugin.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Plugin.prototype: {
    "name": <undefined, T, T, T>,
    "filename": <undefined, T, T, T>,
    "description": <undefined, T, T, T>,
    "length": <undefined, T, T, T>,
    "item": <#Global.Plugin.prototype.item, T, T, T>,
    "namedItem": <#Global.Plugin.prototype.namedItem, T, T, T>,
    "constructor": <#Global.Plugin, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Plugin.prototype.item: {
    "length": <0, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Plugin.prototype.namedItem: {
    "length": <0, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PluginArray: {
    "length": <0, F, F, T>,
    "name": <"PluginArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PluginArray.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PluginArray.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.PluginArray.prototype.item, T, T, T>,
    "namedItem": <#Global.PluginArray.prototype.namedItem, T, T, T>,
    "refresh": <#Global.PluginArray.prototype.refresh, T, T, T>,
    "constructor": <#Global.PluginArray, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PluginArray.prototype.item: {
    "length": <0, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PluginArray.prototype.namedItem: {
    "length": <0, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PluginArray.prototype.refresh: {
    "length": <0, F, F, T>,
    "name": <"refresh", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Float32Array: {
    "length": <3, F, F, T>,
    "name": <"Float32Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Float32Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <4, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Float32Array.prototype: {
    "constructor": <#Global.Float32Array, T, F, T>,
    "BYTES_PER_ELEMENT": <4, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PeriodicWave: {
    "length": <1, F, F, T>,
    "name": <"PeriodicWave", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PeriodicWave.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PeriodicWave.prototype: {
    "constructor": <#Global.PeriodicWave, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PannerNode: {
    "length": <1, F, F, T>,
    "name": <"PannerNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PannerNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PannerNode.prototype: {
    "panningModel": <undefined, T, T, T>,
    "positionX": <undefined, T, T, T>,
    "positionY": <undefined, T, T, T>,
    "positionZ": <undefined, T, T, T>,
    "orientationX": <undefined, T, T, T>,
    "orientationY": <undefined, T, T, T>,
    "orientationZ": <undefined, T, T, T>,
    "distanceModel": <undefined, T, T, T>,
    "refDistance": <undefined, T, T, T>,
    "maxDistance": <undefined, T, T, T>,
    "rolloffFactor": <undefined, T, T, T>,
    "coneInnerAngle": <undefined, T, T, T>,
    "coneOuterAngle": <undefined, T, T, T>,
    "coneOuterGain": <undefined, T, T, T>,
    "setPosition": <#Global.PannerNode.prototype.setPosition, T, T, T>,
    "setOrientation": <#Global.PannerNode.prototype.setOrientation, T, T, T>,
    "constructor": <#Global.PannerNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PannerNode.prototype.setPosition: {
    "length": <3, F, F, T>,
    "name": <"setPosition", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PannerNode.prototype.setOrientation: {
    "length": <3, F, F, T>,
    "name": <"setOrientation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect: {
    "defineProperty": <#Global.Reflect.defineProperty, T, F, T>,
    "deleteProperty": <#Global.Reflect.deleteProperty, T, F, T>,
    "apply": <#Global.Reflect.apply, T, F, T>,
    "construct": <#Global.Reflect.construct, T, F, T>,
    "get": <#Global.Reflect.get, T, F, T>,
    "getOwnPropertyDescriptor": <#Global.Reflect.getOwnPropertyDescriptor, T, F, T>,
    "getPrototypeOf": <#Global.Reflect.getPrototypeOf, T, F, T>,
    "has": <#Global.Reflect.has, T, F, T>,
    "isExtensible": <#Global.Reflect.isExtensible, T, F, T>,
    "ownKeys": <#Global.Reflect.ownKeys, T, F, T>,
    "preventExtensions": <#Global.Reflect.preventExtensions, T, F, T>,
    "set": <#Global.Reflect.set, T, F, T>,
    "setPrototypeOf": <#Global.Reflect.setPrototypeOf, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Reflect.defineProperty: {
    "length": <3, F, F, T>,
    "name": <"defineProperty", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.deleteProperty: {
    "length": <2, F, F, T>,
    "name": <"deleteProperty", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.apply: {
    "length": <3, F, F, T>,
    "name": <"apply", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.construct: {
    "length": <2, F, F, T>,
    "name": <"construct", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.get: {
    "length": <2, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.getOwnPropertyDescriptor: {
    "length": <2, F, F, T>,
    "name": <"getOwnPropertyDescriptor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.getPrototypeOf: {
    "length": <1, F, F, T>,
    "name": <"getPrototypeOf", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.has: {
    "length": <2, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.isExtensible: {
    "length": <1, F, F, T>,
    "name": <"isExtensible", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.ownKeys: {
    "length": <1, F, F, T>,
    "name": <"ownKeys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.preventExtensions: {
    "length": <1, F, F, T>,
    "name": <"preventExtensions", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.set: {
    "length": <3, F, F, T>,
    "name": <"set", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Reflect.setPrototypeOf: {
    "length": <2, F, F, T>,
    "name": <"setPrototypeOf", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.OscillatorNode: {
    "length": <1, F, F, T>,
    "name": <"OscillatorNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.OscillatorNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.OscillatorNode.prototype: {
    "type": <undefined, T, T, T>,
    "frequency": <undefined, T, T, T>,
    "detune": <undefined, T, T, T>,
    "onended": <undefined, T, T, T>,
    "start": <#Global.OscillatorNode.prototype.start, T, T, T>,
    "stop": <#Global.OscillatorNode.prototype.stop, T, T, T>,
    "setPeriodicWave": <#Global.OscillatorNode.prototype.setPeriodicWave, T, T, T>,
    "constructor": <#Global.OscillatorNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.OscillatorNode.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.OscillatorNode.prototype.stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.OscillatorNode.prototype.setPeriodicWave: {
    "length": <1, F, F, T>,
    "name": <"setPeriodicWave", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.OscillatorNode.prototype.[[Prototype]]: {
    "constructor": <#Global.OscillatorNode.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.OscillatorNode.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"AudioSourceNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.OscillatorNode.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.OfflineAudioCompletionEvent: {
    "length": <0, F, F, T>,
    "name": <"OfflineAudioCompletionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.OfflineAudioCompletionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.OfflineAudioCompletionEvent.prototype: {
    "renderedBuffer": <undefined, T, T, T>,
    "constructor": <#Global.OfflineAudioCompletionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MimeType: {
    "length": <0, F, F, T>,
    "name": <"MimeType", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MimeType.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MimeType.prototype: {
    "type": <undefined, T, T, T>,
    "suffixes": <undefined, T, T, T>,
    "description": <undefined, T, T, T>,
    "enabledPlugin": <undefined, T, T, T>,
    "constructor": <#Global.MimeType, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MimeTypeArray: {
    "length": <0, F, F, T>,
    "name": <"MimeTypeArray", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MimeTypeArray.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MimeTypeArray.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.MimeTypeArray.prototype.item, T, T, T>,
    "namedItem": <#Global.MimeTypeArray.prototype.namedItem, T, T, T>,
    "constructor": <#Global.MimeTypeArray, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MimeTypeArray.prototype.item: {
    "length": <0, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MimeTypeArray.prototype.namedItem: {
    "length": <0, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Proxy: {
    "length": <2, F, F, T>,
    "name": <"Proxy", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "revocable": <#Global.Proxy.revocable, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Proxy.revocable: {
    "length": <2, F, F, T>,
    "name": <"revocable", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaStreamTrackEvent: {
    "length": <2, F, F, T>,
    "name": <"MediaStreamTrackEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaStreamTrackEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaStreamTrackEvent.prototype: {
    "track": <undefined, T, T, T>,
    "constructor": <#Global.MediaStreamTrackEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaStreamEvent: {
    "length": <1, F, F, T>,
    "name": <"MediaStreamEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaStreamEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaStreamEvent.prototype: {
    "stream": <undefined, T, T, T>,
    "constructor": <#Global.MediaStreamEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Uint32Array: {
    "length": <3, F, F, T>,
    "name": <"Uint32Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Uint32Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <4, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Uint32Array.prototype: {
    "constructor": <#Global.Uint32Array, T, F, T>,
    "BYTES_PER_ELEMENT": <4, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaStreamAudioSourceNode: {
    "length": <2, F, F, T>,
    "name": <"MediaStreamAudioSourceNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaStreamAudioSourceNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaStreamAudioSourceNode.prototype: {
    "mediaStream": <undefined, T, T, T>,
    "constructor": <#Global.MediaStreamAudioSourceNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaStreamAudioDestinationNode: {
    "length": <0, F, F, T>,
    "name": <"MediaStreamAudioDestinationNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaStreamAudioDestinationNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaStreamAudioDestinationNode.prototype: {
    "stream": <undefined, T, T, T>,
    "constructor": <#Global.MediaStreamAudioDestinationNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaSource: {
    "length": <0, F, F, T>,
    "name": <"MediaSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaSource.prototype, F, F, F>,
    "isTypeSupported": <#Global.MediaSource.isTypeSupported, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaSource.prototype: {
    "sourceBuffers": <undefined, T, T, T>,
    "activeSourceBuffers": <undefined, T, T, T>,
    "duration": <undefined, T, T, T>,
    "onsourceopen": <undefined, T, T, T>,
    "onsourceended": <undefined, T, T, T>,
    "onsourceclose": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "addSourceBuffer": <#Global.MediaSource.prototype.addSourceBuffer, T, T, T>,
    "removeSourceBuffer": <#Global.MediaSource.prototype.removeSourceBuffer, T, T, T>,
    "endOfStream": <#Global.MediaSource.prototype.endOfStream, T, T, T>,
    "constructor": <#Global.MediaSource, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaSource.prototype.addSourceBuffer: {
    "length": <1, F, F, T>,
    "name": <"addSourceBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaSource.prototype.removeSourceBuffer: {
    "length": <1, F, F, T>,
    "name": <"removeSourceBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaSource.prototype.endOfStream: {
    "length": <0, F, F, T>,
    "name": <"endOfStream", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaSource.isTypeSupported: {
    "length": <1, F, F, T>,
    "name": <"isTypeSupported", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaRecorder: {
    "length": <1, F, F, T>,
    "name": <"MediaRecorder", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaRecorder.prototype, F, F, F>,
    "isTypeSupported": <#Global.MediaRecorder.isTypeSupported, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaRecorder.prototype: {
    "stream": <undefined, T, T, T>,
    "mimeType": <undefined, T, T, T>,
    "state": <undefined, T, T, T>,
    "onstart": <undefined, T, T, T>,
    "onstop": <undefined, T, T, T>,
    "ondataavailable": <undefined, T, T, T>,
    "onpause": <undefined, T, T, T>,
    "onresume": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "ignoreMutedMedia": <undefined, T, T, T>,
    "videoBitsPerSecond": <undefined, T, T, T>,
    "audioBitsPerSecond": <undefined, T, T, T>,
    "start": <#Global.MediaRecorder.prototype.start, T, T, T>,
    "stop": <#Global.MediaRecorder.prototype.stop, T, T, T>,
    "pause": <#Global.MediaRecorder.prototype.pause, T, T, T>,
    "resume": <#Global.MediaRecorder.prototype.resume, T, T, T>,
    "requestData": <#Global.MediaRecorder.prototype.requestData, T, T, T>,
    "constructor": <#Global.MediaRecorder, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaRecorder.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaRecorder.prototype.stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaRecorder.prototype.pause: {
    "length": <0, F, F, T>,
    "name": <"pause", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaRecorder.prototype.resume: {
    "length": <0, F, F, T>,
    "name": <"resume", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaRecorder.prototype.requestData: {
    "length": <0, F, F, T>,
    "name": <"requestData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaRecorder.isTypeSupported: {
    "length": <1, F, F, T>,
    "name": <"isTypeSupported", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Int8Array: {
    "length": <3, F, F, T>,
    "name": <"Int8Array", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Int8Array.prototype, F, F, F>,
    "BYTES_PER_ELEMENT": <1, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Int8Array.prototype: {
    "constructor": <#Global.Int8Array, T, F, T>,
    "BYTES_PER_ELEMENT": <1, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Uint8Array.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaKeys: {
    "length": <0, F, F, T>,
    "name": <"MediaKeys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaKeys.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaKeys.prototype: {
    "createSession": <#Global.MediaKeys.prototype.createSession, T, T, T>,
    "setServerCertificate": <#Global.MediaKeys.prototype.setServerCertificate, T, T, T>,
    "constructor": <#Global.MediaKeys, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MediaKeys.prototype.createSession: {
    "length": <0, F, F, T>,
    "name": <"createSession", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeys.prototype.setServerCertificate: {
    "length": <1, F, F, T>,
    "name": <"setServerCertificate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeySystemAccess: {
    "length": <0, F, F, T>,
    "name": <"MediaKeySystemAccess", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaKeySystemAccess.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaKeySystemAccess.prototype: {
    "keySystem": <undefined, T, T, T>,
    "getConfiguration": <#Global.MediaKeySystemAccess.prototype.getConfiguration, T, T, T>,
    "createMediaKeys": <#Global.MediaKeySystemAccess.prototype.createMediaKeys, T, T, T>,
    "constructor": <#Global.MediaKeySystemAccess, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MediaKeySystemAccess.prototype.getConfiguration: {
    "length": <0, F, F, T>,
    "name": <"getConfiguration", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeySystemAccess.prototype.createMediaKeys: {
    "length": <0, F, F, T>,
    "name": <"createMediaKeys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ReadableStream: {
    "length": <0, F, F, T>,
    "name": <"ReadableStream", F, F, T>,
    "prototype": <#Global.ReadableStream.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ReadableStream.prototype: {
    "constructor": <#Global.ReadableStream, T, F, T>,
    "locked": <undefined, T, F, T>,
    "cancel": <#Global.ReadableStream.prototype.cancel, T, F, T>,
    "getReader": <#Global.ReadableStream.prototype.getReader, T, F, T>,
    "tee": <#Global.ReadableStream.prototype.tee, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ReadableStream.prototype.cancel: {
    "length": <1, F, F, T>,
    "name": <"cancel", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ReadableStream.prototype.getReader: {
    "length": <0, F, F, T>,
    "name": <"getReader", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ReadableStream.prototype.tee: {
    "length": <0, F, F, T>,
    "name": <"tee", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeyStatusMap: {
    "length": <0, F, F, T>,
    "name": <"MediaKeyStatusMap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaKeyStatusMap.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaKeyStatusMap.prototype: {
    "size": <undefined, T, T, T>,
    "has": <#Global.MediaKeyStatusMap.prototype.has, T, T, T>,
    "get": <#Global.MediaKeyStatusMap.prototype.get, T, T, T>,
    "keys": <#Global.MediaKeyStatusMap.prototype.keys, T, T, T>,
    "values": <#Global.MediaKeyStatusMap.prototype.values, T, T, T>,
    "entries": <#Global.MediaKeyStatusMap.prototype.entries, T, T, T>,
    "forEach": <#Global.MediaKeyStatusMap.prototype.forEach, T, T, T>,
    "constructor": <#Global.MediaKeyStatusMap, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MediaKeyStatusMap.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeyStatusMap.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeyStatusMap.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeyStatusMap.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeyStatusMap.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeyStatusMap.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl: {
    "getCanonicalLocales": <#Global.Intl.getCanonicalLocales, T, F, T>,
    "Collator": <#Global.Intl.Collator, T, F, T>,
    "NumberFormat": <#Global.Intl.NumberFormat, T, F, T>,
    "DateTimeFormat": <#Global.Intl.DateTimeFormat, T, F, T>,
    "v8BreakIterator": <#Global.Intl.v8BreakIterator, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Intl.getCanonicalLocales: {
    "length": <1, F, F, T>,
    "name": <"getCanonicalLocales", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.Collator: {
    "length": <0, F, F, T>,
    "name": <"Collator", F, F, T>,
    "prototype": <#Global.Intl.Collator.prototype, F, F, F>,
    "supportedLocalesOf": <#Global.Intl.Collator.supportedLocalesOf, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Intl.Collator.prototype: {
    "constructor": <#Global.Intl.Collator, T, F, T>,
    "resolvedOptions": <#Global.Intl.Collator.prototype.resolvedOptions, T, F, T>,
    "compare": <undefined, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Intl.Collator.prototype.resolvedOptions: {
    "length": <0, F, F, T>,
    "name": <"resolvedOptions", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.Collator.supportedLocalesOf: {
    "length": <1, F, F, T>,
    "name": <"supportedLocalesOf", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.NumberFormat: {
    "length": <0, F, F, T>,
    "name": <"NumberFormat", F, F, T>,
    "prototype": <#Global.Intl.NumberFormat.prototype, F, F, F>,
    "supportedLocalesOf": <#Global.Intl.NumberFormat.supportedLocalesOf, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Intl.NumberFormat.prototype: {
    "constructor": <#Global.Intl.NumberFormat, T, F, T>,
    "resolvedOptions": <#Global.Intl.NumberFormat.prototype.resolvedOptions, T, F, T>,
    "format": <undefined, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Intl.NumberFormat.prototype.resolvedOptions: {
    "length": <0, F, F, T>,
    "name": <"resolvedOptions", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.NumberFormat.supportedLocalesOf: {
    "length": <1, F, F, T>,
    "name": <"supportedLocalesOf", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.DateTimeFormat: {
    "length": <0, F, F, T>,
    "name": <"DateTimeFormat", F, F, T>,
    "prototype": <#Global.Intl.DateTimeFormat.prototype, F, F, F>,
    "supportedLocalesOf": <#Global.Intl.DateTimeFormat.supportedLocalesOf, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Intl.DateTimeFormat.prototype: {
    "constructor": <#Global.Intl.DateTimeFormat, T, F, T>,
    "resolvedOptions": <#Global.Intl.DateTimeFormat.prototype.resolvedOptions, T, F, T>,
    "format": <undefined, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Intl.DateTimeFormat.prototype.resolvedOptions: {
    "length": <0, F, F, T>,
    "name": <"resolvedOptions", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.DateTimeFormat.supportedLocalesOf: {
    "length": <1, F, F, T>,
    "name": <"supportedLocalesOf", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.v8BreakIterator: {
    "length": <0, F, F, T>,
    "name": <"v8BreakIterator", F, F, T>,
    "prototype": <#Global.Intl.v8BreakIterator.prototype, F, F, F>,
    "supportedLocalesOf": <#Global.Intl.v8BreakIterator.supportedLocalesOf, T, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Intl.v8BreakIterator.prototype: {
    "constructor": <#Global.Intl.v8BreakIterator, T, F, T>,
    "resolvedOptions": <#Global.Intl.v8BreakIterator.prototype.resolvedOptions, T, F, T>,
    "adoptText": <undefined, T, F, T>,
    "first": <undefined, T, F, T>,
    "next": <undefined, T, F, T>,
    "current": <undefined, T, F, T>,
    "breakType": <undefined, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Intl.v8BreakIterator.prototype.resolvedOptions: {
    "length": <0, F, F, T>,
    "name": <"resolvedOptions", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Intl.v8BreakIterator.supportedLocalesOf: {
    "length": <1, F, F, T>,
    "name": <"supportedLocalesOf", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeySession: {
    "length": <0, F, F, T>,
    "name": <"MediaKeySession", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaKeySession.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaKeySession.prototype: {
    "sessionId": <undefined, T, T, T>,
    "expiration": <undefined, T, T, T>,
    "closed": <undefined, T, T, T>,
    "keyStatuses": <undefined, T, T, T>,
    "onkeystatuseschange": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "generateRequest": <#Global.MediaKeySession.prototype.generateRequest, T, T, T>,
    "load": <#Global.MediaKeySession.prototype.load, T, T, T>,
    "update": <#Global.MediaKeySession.prototype.update, T, T, T>,
    "close": <#Global.MediaKeySession.prototype.close, T, T, T>,
    "remove": <#Global.MediaKeySession.prototype.remove, T, T, T>,
    "constructor": <#Global.MediaKeySession, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaKeySession.prototype.generateRequest: {
    "length": <2, F, F, T>,
    "name": <"generateRequest", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeySession.prototype.load: {
    "length": <1, F, F, T>,
    "name": <"load", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeySession.prototype.update: {
    "length": <1, F, F, T>,
    "name": <"update", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeySession.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeySession.prototype.remove: {
    "length": <0, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaKeyMessageEvent: {
    "length": <2, F, F, T>,
    "name": <"MediaKeyMessageEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaKeyMessageEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaKeyMessageEvent.prototype: {
    "messageType": <undefined, T, T, T>,
    "message": <undefined, T, T, T>,
    "constructor": <#Global.MediaKeyMessageEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaEncryptedEvent: {
    "length": <1, F, F, T>,
    "name": <"MediaEncryptedEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaEncryptedEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaEncryptedEvent.prototype: {
    "initDataType": <undefined, T, T, T>,
    "initData": <undefined, T, T, T>,
    "constructor": <#Global.MediaEncryptedEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaElementAudioSourceNode: {
    "length": <2, F, F, T>,
    "name": <"MediaElementAudioSourceNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaElementAudioSourceNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaElementAudioSourceNode.prototype: {
    "mediaElement": <undefined, T, T, T>,
    "constructor": <#Global.MediaElementAudioSourceNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Map: {
    "length": <0, F, F, T>,
    "name": <"Map", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Map.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Map.prototype: {
    "constructor": <#Global.Map, T, F, T>,
    "size": <undefined, T, F, T>,
    "get": <#Global.Map.prototype.get, T, F, T>,
    "set": <#Global.Map.prototype.set, T, F, T>,
    "has": <#Global.Map.prototype.has, T, F, T>,
    "delete": <#Global.Map.prototype.delete, T, F, T>,
    "clear": <#Global.Map.prototype.clear, T, F, T>,
    "forEach": <#Global.Map.prototype.forEach, T, F, T>,
    "entries": <#Global.Map.prototype.entries, T, F, T>,
    "keys": <#Global.Map.prototype.keys, T, F, T>,
    "values": <#Global.Map.prototype.values, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Map.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.set: {
    "length": <2, F, F, T>,
    "name": <"set", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Map.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaDevices: {
    "length": <0, F, F, T>,
    "name": <"MediaDevices", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaDevices.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaDevices.prototype: {
    "enumerateDevices": <#Global.MediaDevices.prototype.enumerateDevices, T, T, T>,
    "getSupportedConstraints": <#Global.MediaDevices.prototype.getSupportedConstraints, T, T, T>,
    "getUserMedia": <#Global.MediaDevices.prototype.getUserMedia, T, T, T>,
    "constructor": <#Global.MediaDevices, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaDevices.prototype.enumerateDevices: {
    "length": <0, F, F, T>,
    "name": <"enumerateDevices", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaDevices.prototype.getSupportedConstraints: {
    "length": <0, F, F, T>,
    "name": <"getSupportedConstraints", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaDevices.prototype.getUserMedia: {
    "length": <0, F, F, T>,
    "name": <"getUserMedia", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaDeviceInfo: {
    "length": <0, F, F, T>,
    "name": <"MediaDeviceInfo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaDeviceInfo.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaDeviceInfo.prototype: {
    "deviceId": <undefined, T, T, T>,
    "kind": <undefined, T, T, T>,
    "label": <undefined, T, T, T>,
    "groupId": <undefined, T, T, T>,
    "toJSON": <#Global.MediaDeviceInfo.prototype.toJSON, T, T, T>,
    "constructor": <#Global.MediaDeviceInfo, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MediaDeviceInfo.prototype.toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIPort: {
    "length": <0, F, F, T>,
    "name": <"MIDIPort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIPort.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIPort.prototype: {
    "connection": <undefined, T, T, T>,
    "id": <undefined, T, T, T>,
    "manufacturer": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "state": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "version": <undefined, T, T, T>,
    "onstatechange": <undefined, T, T, T>,
    "open": <#Global.MIDIPort.prototype.open, T, T, T>,
    "close": <#Global.MIDIPort.prototype.close, T, T, T>,
    "constructor": <#Global.MIDIPort, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MIDIPort.prototype.open: {
    "length": <0, F, F, T>,
    "name": <"open", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIPort.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIOutputMap: {
    "length": <0, F, F, T>,
    "name": <"MIDIOutputMap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIOutputMap.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIOutputMap.prototype: {
    "size": <undefined, T, T, T>,
    "keys": <#Global.MIDIOutputMap.prototype.keys, T, T, T>,
    "values": <#Global.MIDIOutputMap.prototype.values, T, T, T>,
    "entries": <#Global.MIDIOutputMap.prototype.entries, T, T, T>,
    "forEach": <#Global.MIDIOutputMap.prototype.forEach, T, T, T>,
    "has": <#Global.MIDIOutputMap.prototype.has, T, T, T>,
    "get": <#Global.MIDIOutputMap.prototype.get, T, T, T>,
    "constructor": <#Global.MIDIOutputMap, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MIDIOutputMap.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIOutputMap.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIOutputMap.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIOutputMap.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIOutputMap.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIOutputMap.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIOutput: {
    "length": <0, F, F, T>,
    "name": <"MIDIOutput", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIOutput.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.MIDIPort,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIOutput.prototype: {
    "send": <#Global.MIDIOutput.prototype.send, T, T, T>,
    "constructor": <#Global.MIDIOutput, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.MIDIPort.prototype,
    [[Class]]: "Object"
  },
  #Global.MIDIOutput.prototype.send: {
    "length": <1, F, F, T>,
    "name": <"send", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.open: {
    "length": <2, F, F, T>,
    "name": <"open", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIMessageEvent: {
    "length": <1, F, F, T>,
    "name": <"MIDIMessageEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIMessageEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIMessageEvent.prototype: {
    "data": <undefined, T, T, T>,
    "constructor": <#Global.MIDIMessageEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.alert: {
    "length": <0, F, F, T>,
    "name": <"alert", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIInputMap: {
    "length": <0, F, F, T>,
    "name": <"MIDIInputMap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIInputMap.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIInputMap.prototype: {
    "size": <undefined, T, T, T>,
    "keys": <#Global.MIDIInputMap.prototype.keys, T, T, T>,
    "values": <#Global.MIDIInputMap.prototype.values, T, T, T>,
    "entries": <#Global.MIDIInputMap.prototype.entries, T, T, T>,
    "forEach": <#Global.MIDIInputMap.prototype.forEach, T, T, T>,
    "has": <#Global.MIDIInputMap.prototype.has, T, T, T>,
    "get": <#Global.MIDIInputMap.prototype.get, T, T, T>,
    "constructor": <#Global.MIDIInputMap, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MIDIInputMap.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIInputMap.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIInputMap.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIInputMap.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIInputMap.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIInputMap.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIInput: {
    "length": <0, F, F, T>,
    "name": <"MIDIInput", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIInput.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.MIDIPort,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIInput.prototype: {
    "onmidimessage": <undefined, T, T, T>,
    "constructor": <#Global.MIDIInput, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.MIDIPort.prototype,
    [[Class]]: "Object"
  },
  #Global.confirm: {
    "length": <0, F, F, T>,
    "name": <"confirm", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MIDIConnectionEvent: {
    "length": <1, F, F, T>,
    "name": <"MIDIConnectionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIConnectionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIConnectionEvent.prototype: {
    "port": <undefined, T, T, T>,
    "constructor": <#Global.MIDIConnectionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MIDIAccess: {
    "length": <0, F, F, T>,
    "name": <"MIDIAccess", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MIDIAccess.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MIDIAccess.prototype: {
    "inputs": <undefined, T, T, T>,
    "outputs": <undefined, T, T, T>,
    "sysexEnabled": <undefined, T, T, T>,
    "onstatechange": <undefined, T, T, T>,
    "constructor": <#Global.MIDIAccess, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ImageBitmapRenderingContext: {
    "length": <0, F, F, T>,
    "name": <"ImageBitmapRenderingContext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ImageBitmapRenderingContext.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ImageBitmapRenderingContext.prototype: {
    "canvas": <undefined, T, T, T>,
    "transferFromImageBitmap": <#Global.ImageBitmapRenderingContext.prototype.transferFromImageBitmap, T, T, T>,
    "constructor": <#Global.ImageBitmapRenderingContext, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ImageBitmapRenderingContext.prototype.transferFromImageBitmap: {
    "length": <1, F, F, T>,
    "name": <"transferFromImageBitmap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.prompt: {
    "length": <0, F, F, T>,
    "name": <"prompt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IIRFilterNode: {
    "length": <2, F, F, T>,
    "name": <"IIRFilterNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IIRFilterNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IIRFilterNode.prototype: {
    "getFrequencyResponse": <#Global.IIRFilterNode.prototype.getFrequencyResponse, T, T, T>,
    "constructor": <#Global.IIRFilterNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.IIRFilterNode.prototype.getFrequencyResponse: {
    "length": <3, F, F, T>,
    "name": <"getFrequencyResponse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBVersionChangeEvent: {
    "length": <1, F, F, T>,
    "name": <"IDBVersionChangeEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBVersionChangeEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBVersionChangeEvent.prototype: {
    "oldVersion": <undefined, T, T, T>,
    "newVersion": <undefined, T, T, T>,
    "dataLoss": <undefined, T, T, T>,
    "dataLossMessage": <undefined, T, T, T>,
    "constructor": <#Global.IDBVersionChangeEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.print: {
    "length": <0, F, F, T>,
    "name": <"print", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBTransaction: {
    "length": <0, F, F, T>,
    "name": <"IDBTransaction", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBTransaction.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBTransaction.prototype: {
    "objectStoreNames": <undefined, T, T, T>,
    "mode": <undefined, T, T, T>,
    "db": <undefined, T, T, T>,
    "error": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "oncomplete": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "objectStore": <#Global.IDBTransaction.prototype.objectStore, T, T, T>,
    "abort": <#Global.IDBTransaction.prototype.abort, T, T, T>,
    "constructor": <#Global.IDBTransaction, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.IDBTransaction.prototype.objectStore: {
    "length": <1, F, F, T>,
    "name": <"objectStore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBTransaction.prototype.abort: {
    "length": <0, F, F, T>,
    "name": <"abort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.requestAnimationFrame: {
    "length": <1, F, F, T>,
    "name": <"requestAnimationFrame", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBRequest: {
    "length": <0, F, F, T>,
    "name": <"IDBRequest", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBRequest.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBRequest.prototype: {
    "result": <undefined, T, T, T>,
    "error": <undefined, T, T, T>,
    "source": <undefined, T, T, T>,
    "transaction": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "onsuccess": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "constructor": <#Global.IDBRequest, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.IDBOpenDBRequest: {
    "length": <0, F, F, T>,
    "name": <"IDBOpenDBRequest", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBOpenDBRequest.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.IDBRequest,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBOpenDBRequest.prototype: {
    "onblocked": <undefined, T, T, T>,
    "onupgradeneeded": <undefined, T, T, T>,
    "constructor": <#Global.IDBOpenDBRequest, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.IDBRequest.prototype,
    [[Class]]: "Object"
  },
  #Global.cancelAnimationFrame: {
    "length": <1, F, F, T>,
    "name": <"cancelAnimationFrame", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore: {
    "length": <0, F, F, T>,
    "name": <"IDBObjectStore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBObjectStore.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype: {
    "name": <undefined, T, T, T>,
    "keyPath": <undefined, T, T, T>,
    "indexNames": <undefined, T, T, T>,
    "transaction": <undefined, T, T, T>,
    "autoIncrement": <undefined, T, T, T>,
    "put": <#Global.IDBObjectStore.prototype.put, T, T, T>,
    "add": <#Global.IDBObjectStore.prototype.add, T, T, T>,
    "delete": <#Global.IDBObjectStore.prototype.delete, T, T, T>,
    "clear": <#Global.IDBObjectStore.prototype.clear, T, T, T>,
    "get": <#Global.IDBObjectStore.prototype.get, T, T, T>,
    "getAll": <#Global.IDBObjectStore.prototype.getAll, T, T, T>,
    "getAllKeys": <#Global.IDBObjectStore.prototype.getAllKeys, T, T, T>,
    "count": <#Global.IDBObjectStore.prototype.count, T, T, T>,
    "openCursor": <#Global.IDBObjectStore.prototype.openCursor, T, T, T>,
    "openKeyCursor": <#Global.IDBObjectStore.prototype.openKeyCursor, T, T, T>,
    "createIndex": <#Global.IDBObjectStore.prototype.createIndex, T, T, T>,
    "index": <#Global.IDBObjectStore.prototype.index, T, T, T>,
    "deleteIndex": <#Global.IDBObjectStore.prototype.deleteIndex, T, T, T>,
    "constructor": <#Global.IDBObjectStore, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IDBObjectStore.prototype.put: {
    "length": <1, F, F, T>,
    "name": <"put", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.add: {
    "length": <1, F, F, T>,
    "name": <"add", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.getAll: {
    "length": <0, F, F, T>,
    "name": <"getAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.getAllKeys: {
    "length": <0, F, F, T>,
    "name": <"getAllKeys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.count: {
    "length": <0, F, F, T>,
    "name": <"count", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.openCursor: {
    "length": <0, F, F, T>,
    "name": <"openCursor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.openKeyCursor: {
    "length": <0, F, F, T>,
    "name": <"openKeyCursor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.createIndex: {
    "length": <2, F, F, T>,
    "name": <"createIndex", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.index: {
    "length": <1, F, F, T>,
    "name": <"index", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBObjectStore.prototype.deleteIndex: {
    "length": <1, F, F, T>,
    "name": <"deleteIndex", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBKeyRange: {
    "length": <0, F, F, T>,
    "name": <"IDBKeyRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBKeyRange.prototype, F, F, F>,
    "only": <#Global.IDBKeyRange.only, T, T, T>,
    "lowerBound": <#Global.IDBKeyRange.lowerBound, T, T, T>,
    "upperBound": <#Global.IDBKeyRange.upperBound, T, T, T>,
    "bound": <#Global.IDBKeyRange.bound, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBKeyRange.prototype: {
    "lower": <undefined, T, T, T>,
    "upper": <undefined, T, T, T>,
    "lowerOpen": <undefined, T, T, T>,
    "upperOpen": <undefined, T, T, T>,
    "includes": <#Global.IDBKeyRange.prototype.includes, T, T, T>,
    "constructor": <#Global.IDBKeyRange, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IDBKeyRange.prototype.includes: {
    "length": <1, F, F, T>,
    "name": <"includes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBKeyRange.only: {
    "length": <1, F, F, T>,
    "name": <"only", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBKeyRange.lowerBound: {
    "length": <1, F, F, T>,
    "name": <"lowerBound", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBKeyRange.upperBound: {
    "length": <1, F, F, T>,
    "name": <"upperBound", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBKeyRange.bound: {
    "length": <2, F, F, T>,
    "name": <"bound", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBIndex: {
    "length": <0, F, F, T>,
    "name": <"IDBIndex", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBIndex.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBIndex.prototype: {
    "name": <undefined, T, T, T>,
    "objectStore": <undefined, T, T, T>,
    "keyPath": <undefined, T, T, T>,
    "multiEntry": <undefined, T, T, T>,
    "unique": <undefined, T, T, T>,
    "get": <#Global.IDBIndex.prototype.get, T, T, T>,
    "getKey": <#Global.IDBIndex.prototype.getKey, T, T, T>,
    "getAll": <#Global.IDBIndex.prototype.getAll, T, T, T>,
    "getAllKeys": <#Global.IDBIndex.prototype.getAllKeys, T, T, T>,
    "count": <#Global.IDBIndex.prototype.count, T, T, T>,
    "openCursor": <#Global.IDBIndex.prototype.openCursor, T, T, T>,
    "openKeyCursor": <#Global.IDBIndex.prototype.openKeyCursor, T, T, T>,
    "constructor": <#Global.IDBIndex, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IDBIndex.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBIndex.prototype.getKey: {
    "length": <1, F, F, T>,
    "name": <"getKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBIndex.prototype.getAll: {
    "length": <0, F, F, T>,
    "name": <"getAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBIndex.prototype.getAllKeys: {
    "length": <0, F, F, T>,
    "name": <"getAllKeys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBIndex.prototype.count: {
    "length": <0, F, F, T>,
    "name": <"count", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBIndex.prototype.openCursor: {
    "length": <0, F, F, T>,
    "name": <"openCursor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBIndex.prototype.openKeyCursor: {
    "length": <0, F, F, T>,
    "name": <"openKeyCursor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.requestIdleCallback: {
    "length": <1, F, F, T>,
    "name": <"requestIdleCallback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBFactory: {
    "length": <0, F, F, T>,
    "name": <"IDBFactory", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBFactory.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBFactory.prototype: {
    "webkitGetDatabaseNames": <#Global.IDBFactory.prototype.webkitGetDatabaseNames, T, T, T>,
    "open": <#Global.IDBFactory.prototype.open, T, T, T>,
    "deleteDatabase": <#Global.IDBFactory.prototype.deleteDatabase, T, T, T>,
    "cmp": <#Global.IDBFactory.prototype.cmp, T, T, T>,
    "constructor": <#Global.IDBFactory, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IDBFactory.prototype.webkitGetDatabaseNames: {
    "length": <0, F, F, T>,
    "name": <"webkitGetDatabaseNames", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBFactory.prototype.open: {
    "length": <1, F, F, T>,
    "name": <"open", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBFactory.prototype.deleteDatabase: {
    "length": <1, F, F, T>,
    "name": <"deleteDatabase", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBFactory.prototype.cmp: {
    "length": <2, F, F, T>,
    "name": <"cmp", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBDatabase: {
    "length": <0, F, F, T>,
    "name": <"IDBDatabase", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBDatabase.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBDatabase.prototype: {
    "name": <undefined, T, T, T>,
    "version": <undefined, T, T, T>,
    "objectStoreNames": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onversionchange": <undefined, T, T, T>,
    "createObjectStore": <#Global.IDBDatabase.prototype.createObjectStore, T, T, T>,
    "deleteObjectStore": <#Global.IDBDatabase.prototype.deleteObjectStore, T, T, T>,
    "transaction": <#Global.IDBDatabase.prototype.transaction, T, T, T>,
    "close": <#Global.IDBDatabase.prototype.close, T, T, T>,
    "constructor": <#Global.IDBDatabase, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.IDBDatabase.prototype.createObjectStore: {
    "length": <1, F, F, T>,
    "name": <"createObjectStore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBDatabase.prototype.deleteObjectStore: {
    "length": <1, F, F, T>,
    "name": <"deleteObjectStore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBDatabase.prototype.transaction: {
    "length": <1, F, F, T>,
    "name": <"transaction", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBDatabase.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.cancelIdleCallback: {
    "length": <1, F, F, T>,
    "name": <"cancelIdleCallback", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBCursorWithValue: {
    "length": <0, F, F, T>,
    "name": <"IDBCursorWithValue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBCursorWithValue.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.IDBCursorWithValue.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IDBCursorWithValue.prototype: {
    "value": <undefined, T, T, T>,
    "constructor": <#Global.IDBCursorWithValue, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.IDBCursorWithValue.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.IDBCursorWithValue.prototype.[[Prototype]]: {
    "source": <undefined, T, T, T>,
    "direction": <undefined, T, T, T>,
    "key": <undefined, T, T, T>,
    "primaryKey": <undefined, T, T, T>,
    "update": <#Global.IDBCursorWithValue.prototype.[[Prototype]].update, T, T, T>,
    "advance": <#Global.IDBCursorWithValue.prototype.[[Prototype]].advance, T, T, T>,
    "continue": <#Global.IDBCursorWithValue.prototype.[[Prototype]].continue, T, T, T>,
    "delete": <#Global.IDBCursorWithValue.prototype.[[Prototype]].delete, T, T, T>,
    "constructor": <#Global.IDBCursorWithValue.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IDBCursorWithValue.prototype.[[Prototype]].update: {
    "length": <1, F, F, T>,
    "name": <"update", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBCursorWithValue.prototype.[[Prototype]].advance: {
    "length": <1, F, F, T>,
    "name": <"advance", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBCursorWithValue.prototype.[[Prototype]].continue: {
    "length": <0, F, F, T>,
    "name": <"continue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBCursorWithValue.prototype.[[Prototype]].delete: {
    "length": <0, F, F, T>,
    "name": <"delete", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IDBCursorWithValue.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"IDBCursor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IDBCursorWithValue.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.captureEvents: {
    "length": <0, F, F, T>,
    "name": <"captureEvents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers: {
    "length": <0, F, F, T>,
    "name": <"Headers", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Headers.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype: {
    "append": <#Global.Headers.prototype.append, T, T, T>,
    "delete": <#Global.Headers.prototype.delete, T, T, T>,
    "get": <#Global.Headers.prototype.get, T, T, T>,
    "getAll": <#Global.Headers.prototype.getAll, T, T, T>,
    "has": <#Global.Headers.prototype.has, T, T, T>,
    "set": <#Global.Headers.prototype.set, T, T, T>,
    "keys": <#Global.Headers.prototype.keys, T, T, T>,
    "values": <#Global.Headers.prototype.values, T, T, T>,
    "entries": <#Global.Headers.prototype.entries, T, T, T>,
    "forEach": <#Global.Headers.prototype.forEach, T, T, T>,
    "constructor": <#Global.Headers, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Headers.prototype.append: {
    "length": <2, F, F, T>,
    "name": <"append", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.getAll: {
    "length": <1, F, F, T>,
    "name": <"getAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.set: {
    "length": <2, F, F, T>,
    "name": <"set", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Headers.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.releaseEvents: {
    "length": <0, F, F, T>,
    "name": <"releaseEvents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.GamepadEvent: {
    "length": <1, F, F, T>,
    "name": <"GamepadEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.GamepadEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.GamepadEvent.prototype: {
    "gamepad": <undefined, T, T, T>,
    "constructor": <#Global.GamepadEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Gamepad: {
    "length": <0, F, F, T>,
    "name": <"Gamepad", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Gamepad.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Gamepad.prototype: {
    "id": <undefined, T, T, T>,
    "index": <undefined, T, T, T>,
    "connected": <undefined, T, T, T>,
    "timestamp": <undefined, T, T, T>,
    "mapping": <undefined, T, T, T>,
    "axes": <undefined, T, T, T>,
    "buttons": <undefined, T, T, T>,
    "constructor": <#Global.Gamepad, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.GamepadButton: {
    "length": <0, F, F, T>,
    "name": <"GamepadButton", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.GamepadButton.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.GamepadButton.prototype: {
    "pressed": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "constructor": <#Global.GamepadButton, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.getComputedStyle: {
    "length": <1, F, F, T>,
    "name": <"getComputedStyle", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.GainNode: {
    "length": <1, F, F, T>,
    "name": <"GainNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.GainNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.GainNode.prototype: {
    "gain": <undefined, T, T, T>,
    "constructor": <#Global.GainNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.matchMedia: {
    "length": <1, F, F, T>,
    "name": <"matchMedia", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.EventSource: {
    "length": <1, F, F, T>,
    "name": <"EventSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.EventSource.prototype, F, F, F>,
    "CONNECTING": <0, F, T, F>,
    "OPEN": <1, F, T, F>,
    "CLOSED": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.EventSource.prototype: {
    "CONNECTING": <0, F, T, F>,
    "OPEN": <1, F, T, F>,
    "CLOSED": <2, F, T, F>,
    "url": <undefined, T, T, T>,
    "withCredentials": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "onopen": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "close": <#Global.EventSource.prototype.close, T, T, T>,
    "constructor": <#Global.EventSource, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.EventSource.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DynamicsCompressorNode: {
    "length": <1, F, F, T>,
    "name": <"DynamicsCompressorNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DynamicsCompressorNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DynamicsCompressorNode.prototype: {
    "threshold": <undefined, T, T, T>,
    "knee": <undefined, T, T, T>,
    "ratio": <undefined, T, T, T>,
    "reduction": <undefined, T, T, T>,
    "attack": <undefined, T, T, T>,
    "release": <undefined, T, T, T>,
    "constructor": <#Global.DynamicsCompressorNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.moveTo: {
    "length": <2, F, F, T>,
    "name": <"moveTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DeviceOrientationEvent: {
    "length": <0, F, F, T>,
    "name": <"DeviceOrientationEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DeviceOrientationEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DeviceOrientationEvent.prototype: {
    "alpha": <undefined, T, T, T>,
    "beta": <undefined, T, T, T>,
    "gamma": <undefined, T, T, T>,
    "absolute": <undefined, T, T, T>,
    "initDeviceOrientationEvent": <#Global.DeviceOrientationEvent.prototype.initDeviceOrientationEvent, T, T, T>,
    "constructor": <#Global.DeviceOrientationEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.DeviceOrientationEvent.prototype.initDeviceOrientationEvent: {
    "length": <0, F, F, T>,
    "name": <"initDeviceOrientationEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DeviceMotionEvent: {
    "length": <0, F, F, T>,
    "name": <"DeviceMotionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DeviceMotionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DeviceMotionEvent.prototype: {
    "acceleration": <undefined, T, T, T>,
    "accelerationIncludingGravity": <undefined, T, T, T>,
    "rotationRate": <undefined, T, T, T>,
    "interval": <undefined, T, T, T>,
    "initDeviceMotionEvent": <#Global.DeviceMotionEvent.prototype.initDeviceMotionEvent, T, T, T>,
    "constructor": <#Global.DeviceMotionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.DeviceMotionEvent.prototype.initDeviceMotionEvent: {
    "length": <0, F, F, T>,
    "name": <"initDeviceMotionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.moveBy: {
    "length": <2, F, F, T>,
    "name": <"moveBy", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DelayNode: {
    "length": <1, F, F, T>,
    "name": <"DelayNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DelayNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DelayNode.prototype: {
    "delayTime": <undefined, T, T, T>,
    "constructor": <#Global.DelayNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.DOMError: {
    "length": <1, F, F, T>,
    "name": <"DOMError", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DOMError.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DOMError.prototype: {
    "name": <undefined, T, T, T>,
    "message": <undefined, T, T, T>,
    "constructor": <#Global.DOMError, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.resizeTo: {
    "length": <2, F, F, T>,
    "name": <"resizeTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CryptoKey: {
    "length": <0, F, F, T>,
    "name": <"CryptoKey", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CryptoKey.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CryptoKey.prototype: {
    "type": <undefined, T, T, T>,
    "extractable": <undefined, T, T, T>,
    "algorithm": <undefined, T, T, T>,
    "usages": <undefined, T, T, T>,
    "constructor": <#Global.CryptoKey, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Crypto: {
    "length": <0, F, F, T>,
    "name": <"Crypto", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Crypto.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Crypto.prototype: {
    "subtle": <undefined, T, T, T>,
    "getRandomValues": <#Global.Crypto.prototype.getRandomValues, T, T, T>,
    "constructor": <#Global.Crypto, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Crypto.prototype.getRandomValues: {
    "length": <1, F, F, T>,
    "name": <"getRandomValues", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ConvolverNode: {
    "length": <1, F, F, T>,
    "name": <"ConvolverNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ConvolverNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ConvolverNode.prototype: {
    "buffer": <undefined, T, T, T>,
    "normalize": <undefined, T, T, T>,
    "constructor": <#Global.ConvolverNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.resizeBy: {
    "length": <2, F, F, T>,
    "name": <"resizeBy", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ConstantSourceNode: {
    "length": <1, F, F, T>,
    "name": <"ConstantSourceNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ConstantSourceNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ConstantSourceNode.prototype: {
    "offset": <undefined, T, T, T>,
    "onended": <undefined, T, T, T>,
    "start": <#Global.ConstantSourceNode.prototype.start, T, T, T>,
    "stop": <#Global.ConstantSourceNode.prototype.stop, T, T, T>,
    "constructor": <#Global.ConstantSourceNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ConstantSourceNode.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ConstantSourceNode.prototype.stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.getSelection: {
    "length": <0, F, F, T>,
    "name": <"getSelection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CloseEvent: {
    "length": <1, F, F, T>,
    "name": <"CloseEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CloseEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CloseEvent.prototype: {
    "wasClean": <undefined, T, T, T>,
    "code": <undefined, T, T, T>,
    "reason": <undefined, T, T, T>,
    "constructor": <#Global.CloseEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ChannelSplitterNode: {
    "length": <1, F, F, T>,
    "name": <"ChannelSplitterNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ChannelSplitterNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ChannelSplitterNode.prototype: {
    "constructor": <#Global.ChannelSplitterNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ChannelMergerNode: {
    "length": <1, F, F, T>,
    "name": <"ChannelMergerNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ChannelMergerNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ChannelMergerNode.prototype: {
    "constructor": <#Global.ChannelMergerNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.find: {
    "length": <0, F, F, T>,
    "name": <"find", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D: {
    "length": <0, F, F, T>,
    "name": <"CanvasRenderingContext2D", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CanvasRenderingContext2D.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype: {
    "canvas": <undefined, T, T, T>,
    "globalAlpha": <undefined, T, T, T>,
    "globalCompositeOperation": <undefined, T, T, T>,
    "filter": <undefined, T, T, T>,
    "imageSmoothingEnabled": <undefined, T, T, T>,
    "imageSmoothingQuality": <undefined, T, T, T>,
    "strokeStyle": <undefined, T, T, T>,
    "fillStyle": <undefined, T, T, T>,
    "shadowOffsetX": <undefined, T, T, T>,
    "shadowOffsetY": <undefined, T, T, T>,
    "shadowBlur": <undefined, T, T, T>,
    "shadowColor": <undefined, T, T, T>,
    "lineWidth": <undefined, T, T, T>,
    "lineCap": <undefined, T, T, T>,
    "lineJoin": <undefined, T, T, T>,
    "miterLimit": <undefined, T, T, T>,
    "lineDashOffset": <undefined, T, T, T>,
    "font": <undefined, T, T, T>,
    "textAlign": <undefined, T, T, T>,
    "textBaseline": <undefined, T, T, T>,
    "save": <#Global.CanvasRenderingContext2D.prototype.save, T, T, T>,
    "restore": <#Global.CanvasRenderingContext2D.prototype.restore, T, T, T>,
    "scale": <#Global.CanvasRenderingContext2D.prototype.scale, T, T, T>,
    "rotate": <#Global.CanvasRenderingContext2D.prototype.rotate, T, T, T>,
    "translate": <#Global.CanvasRenderingContext2D.prototype.translate, T, T, T>,
    "transform": <#Global.CanvasRenderingContext2D.prototype.transform, T, T, T>,
    "setTransform": <#Global.CanvasRenderingContext2D.prototype.setTransform, T, T, T>,
    "resetTransform": <#Global.CanvasRenderingContext2D.prototype.resetTransform, T, T, T>,
    "createLinearGradient": <#Global.CanvasRenderingContext2D.prototype.createLinearGradient, T, T, T>,
    "createRadialGradient": <#Global.CanvasRenderingContext2D.prototype.createRadialGradient, T, T, T>,
    "createPattern": <#Global.CanvasRenderingContext2D.prototype.createPattern, T, T, T>,
    "clearRect": <#Global.CanvasRenderingContext2D.prototype.clearRect, T, T, T>,
    "fillRect": <#Global.CanvasRenderingContext2D.prototype.fillRect, T, T, T>,
    "strokeRect": <#Global.CanvasRenderingContext2D.prototype.strokeRect, T, T, T>,
    "beginPath": <#Global.CanvasRenderingContext2D.prototype.beginPath, T, T, T>,
    "fill": <#Global.CanvasRenderingContext2D.prototype.fill, T, T, T>,
    "stroke": <#Global.CanvasRenderingContext2D.prototype.stroke, T, T, T>,
    "drawFocusIfNeeded": <#Global.CanvasRenderingContext2D.prototype.drawFocusIfNeeded, T, T, T>,
    "clip": <#Global.CanvasRenderingContext2D.prototype.clip, T, T, T>,
    "isPointInPath": <#Global.CanvasRenderingContext2D.prototype.isPointInPath, T, T, T>,
    "isPointInStroke": <#Global.CanvasRenderingContext2D.prototype.isPointInStroke, T, T, T>,
    "fillText": <#Global.CanvasRenderingContext2D.prototype.fillText, T, T, T>,
    "strokeText": <#Global.CanvasRenderingContext2D.prototype.strokeText, T, T, T>,
    "measureText": <#Global.CanvasRenderingContext2D.prototype.measureText, T, T, T>,
    "drawImage": <#Global.CanvasRenderingContext2D.prototype.drawImage, T, T, T>,
    "createImageData": <#Global.CanvasRenderingContext2D.prototype.createImageData, T, T, T>,
    "getImageData": <#Global.CanvasRenderingContext2D.prototype.getImageData, T, T, T>,
    "putImageData": <#Global.CanvasRenderingContext2D.prototype.putImageData, T, T, T>,
    "getContextAttributes": <#Global.CanvasRenderingContext2D.prototype.getContextAttributes, T, T, T>,
    "setLineDash": <#Global.CanvasRenderingContext2D.prototype.setLineDash, T, T, T>,
    "getLineDash": <#Global.CanvasRenderingContext2D.prototype.getLineDash, T, T, T>,
    "closePath": <#Global.CanvasRenderingContext2D.prototype.closePath, T, T, T>,
    "moveTo": <#Global.CanvasRenderingContext2D.prototype.moveTo, T, T, T>,
    "lineTo": <#Global.CanvasRenderingContext2D.prototype.lineTo, T, T, T>,
    "quadraticCurveTo": <#Global.CanvasRenderingContext2D.prototype.quadraticCurveTo, T, T, T>,
    "bezierCurveTo": <#Global.CanvasRenderingContext2D.prototype.bezierCurveTo, T, T, T>,
    "arcTo": <#Global.CanvasRenderingContext2D.prototype.arcTo, T, T, T>,
    "rect": <#Global.CanvasRenderingContext2D.prototype.rect, T, T, T>,
    "arc": <#Global.CanvasRenderingContext2D.prototype.arc, T, T, T>,
    "ellipse": <#Global.CanvasRenderingContext2D.prototype.ellipse, T, T, T>,
    "constructor": <#Global.CanvasRenderingContext2D, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CanvasRenderingContext2D.prototype.save: {
    "length": <0, F, F, T>,
    "name": <"save", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.restore: {
    "length": <0, F, F, T>,
    "name": <"restore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.scale: {
    "length": <2, F, F, T>,
    "name": <"scale", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.rotate: {
    "length": <1, F, F, T>,
    "name": <"rotate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.translate: {
    "length": <2, F, F, T>,
    "name": <"translate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.transform: {
    "length": <6, F, F, T>,
    "name": <"transform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.setTransform: {
    "length": <6, F, F, T>,
    "name": <"setTransform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.resetTransform: {
    "length": <0, F, F, T>,
    "name": <"resetTransform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.createLinearGradient: {
    "length": <4, F, F, T>,
    "name": <"createLinearGradient", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.createRadialGradient: {
    "length": <6, F, F, T>,
    "name": <"createRadialGradient", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.createPattern: {
    "length": <2, F, F, T>,
    "name": <"createPattern", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.clearRect: {
    "length": <4, F, F, T>,
    "name": <"clearRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.fillRect: {
    "length": <4, F, F, T>,
    "name": <"fillRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.strokeRect: {
    "length": <4, F, F, T>,
    "name": <"strokeRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.beginPath: {
    "length": <0, F, F, T>,
    "name": <"beginPath", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.fill: {
    "length": <0, F, F, T>,
    "name": <"fill", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.stroke: {
    "length": <0, F, F, T>,
    "name": <"stroke", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.drawFocusIfNeeded: {
    "length": <1, F, F, T>,
    "name": <"drawFocusIfNeeded", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.clip: {
    "length": <0, F, F, T>,
    "name": <"clip", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.isPointInPath: {
    "length": <2, F, F, T>,
    "name": <"isPointInPath", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.isPointInStroke: {
    "length": <2, F, F, T>,
    "name": <"isPointInStroke", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.fillText: {
    "length": <3, F, F, T>,
    "name": <"fillText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.strokeText: {
    "length": <3, F, F, T>,
    "name": <"strokeText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.measureText: {
    "length": <1, F, F, T>,
    "name": <"measureText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.drawImage: {
    "length": <3, F, F, T>,
    "name": <"drawImage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.createImageData: {
    "length": <1, F, F, T>,
    "name": <"createImageData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.getImageData: {
    "length": <4, F, F, T>,
    "name": <"getImageData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.putImageData: {
    "length": <3, F, F, T>,
    "name": <"putImageData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.getContextAttributes: {
    "length": <0, F, F, T>,
    "name": <"getContextAttributes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.setLineDash: {
    "length": <1, F, F, T>,
    "name": <"setLineDash", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.getLineDash: {
    "length": <0, F, F, T>,
    "name": <"getLineDash", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.closePath: {
    "length": <0, F, F, T>,
    "name": <"closePath", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.moveTo: {
    "length": <2, F, F, T>,
    "name": <"moveTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.lineTo: {
    "length": <2, F, F, T>,
    "name": <"lineTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.quadraticCurveTo: {
    "length": <4, F, F, T>,
    "name": <"quadraticCurveTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.bezierCurveTo: {
    "length": <6, F, F, T>,
    "name": <"bezierCurveTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.arcTo: {
    "length": <5, F, F, T>,
    "name": <"arcTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.rect: {
    "length": <4, F, F, T>,
    "name": <"rect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.arc: {
    "length": <5, F, F, T>,
    "name": <"arc", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CanvasRenderingContext2D.prototype.ellipse: {
    "length": <7, F, F, T>,
    "name": <"ellipse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.getMatchedCSSRules: {
    "length": <0, F, F, T>,
    "name": <"getMatchedCSSRules", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Cache: {
    "length": <0, F, F, T>,
    "name": <"Cache", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Cache.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Cache.prototype: {
    "match": <#Global.Cache.prototype.match, T, T, T>,
    "matchAll": <#Global.Cache.prototype.matchAll, T, T, T>,
    "add": <#Global.Cache.prototype.add, T, T, T>,
    "addAll": <#Global.Cache.prototype.addAll, T, T, T>,
    "put": <#Global.Cache.prototype.put, T, T, T>,
    "delete": <#Global.Cache.prototype.delete, T, T, T>,
    "keys": <#Global.Cache.prototype.keys, T, T, T>,
    "constructor": <#Global.Cache, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Cache.prototype.match: {
    "length": <1, F, F, T>,
    "name": <"match", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Cache.prototype.matchAll: {
    "length": <0, F, F, T>,
    "name": <"matchAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Cache.prototype.add: {
    "length": <1, F, F, T>,
    "name": <"add", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Cache.prototype.addAll: {
    "length": <1, F, F, T>,
    "name": <"addAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Cache.prototype.put: {
    "length": <2, F, F, T>,
    "name": <"put", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Cache.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Cache.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRequestAnimationFrame: {
    "length": <1, F, F, T>,
    "name": <"webkitRequestAnimationFrame", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BlobEvent: {
    "length": <2, F, F, T>,
    "name": <"BlobEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BlobEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BlobEvent.prototype: {
    "data": <undefined, T, T, T>,
    "constructor": <#Global.BlobEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BiquadFilterNode: {
    "length": <1, F, F, T>,
    "name": <"BiquadFilterNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BiquadFilterNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BiquadFilterNode.prototype: {
    "type": <undefined, T, T, T>,
    "frequency": <undefined, T, T, T>,
    "detune": <undefined, T, T, T>,
    "Q": <undefined, T, T, T>,
    "gain": <undefined, T, T, T>,
    "getFrequencyResponse": <#Global.BiquadFilterNode.prototype.getFrequencyResponse, T, T, T>,
    "constructor": <#Global.BiquadFilterNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BiquadFilterNode.prototype.getFrequencyResponse: {
    "length": <3, F, F, T>,
    "name": <"getFrequencyResponse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BeforeInstallPromptEvent: {
    "length": <1, F, F, T>,
    "name": <"BeforeInstallPromptEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BeforeInstallPromptEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BeforeInstallPromptEvent.prototype: {
    "platforms": <undefined, T, T, T>,
    "userChoice": <undefined, T, T, T>,
    "prompt": <#Global.BeforeInstallPromptEvent.prototype.prompt, T, T, T>,
    "constructor": <#Global.BeforeInstallPromptEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BeforeInstallPromptEvent.prototype.prompt: {
    "length": <0, F, F, T>,
    "name": <"prompt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitCancelAnimationFrame: {
    "length": <1, F, F, T>,
    "name": <"webkitCancelAnimationFrame", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BatteryManager: {
    "length": <0, F, F, T>,
    "name": <"BatteryManager", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BatteryManager.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BatteryManager.prototype: {
    "charging": <undefined, T, T, T>,
    "chargingTime": <undefined, T, T, T>,
    "dischargingTime": <undefined, T, T, T>,
    "level": <undefined, T, T, T>,
    "onchargingchange": <undefined, T, T, T>,
    "onchargingtimechange": <undefined, T, T, T>,
    "ondischargingtimechange": <undefined, T, T, T>,
    "onlevelchange": <undefined, T, T, T>,
    "constructor": <#Global.BatteryManager, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.webkitCancelRequestAnimationFrame: {
    "length": <1, F, F, T>,
    "name": <"webkitCancelRequestAnimationFrame", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext: {
    "length": <0, F, F, T>,
    "name": <"BaseAudioContext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BaseAudioContext.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype: {
    "destination": <undefined, T, T, T>,
    "currentTime": <undefined, T, T, T>,
    "sampleRate": <undefined, T, T, T>,
    "listener": <undefined, T, T, T>,
    "state": <undefined, T, T, T>,
    "onstatechange": <undefined, T, T, T>,
    "createBuffer": <#Global.BaseAudioContext.prototype.createBuffer, T, T, T>,
    "decodeAudioData": <#Global.BaseAudioContext.prototype.decodeAudioData, T, T, T>,
    "createBufferSource": <#Global.BaseAudioContext.prototype.createBufferSource, T, T, T>,
    "createConstantSource": <#Global.BaseAudioContext.prototype.createConstantSource, T, T, T>,
    "createGain": <#Global.BaseAudioContext.prototype.createGain, T, T, T>,
    "createDelay": <#Global.BaseAudioContext.prototype.createDelay, T, T, T>,
    "createBiquadFilter": <#Global.BaseAudioContext.prototype.createBiquadFilter, T, T, T>,
    "createIIRFilter": <#Global.BaseAudioContext.prototype.createIIRFilter, T, T, T>,
    "createWaveShaper": <#Global.BaseAudioContext.prototype.createWaveShaper, T, T, T>,
    "createPanner": <#Global.BaseAudioContext.prototype.createPanner, T, T, T>,
    "createConvolver": <#Global.BaseAudioContext.prototype.createConvolver, T, T, T>,
    "createDynamicsCompressor": <#Global.BaseAudioContext.prototype.createDynamicsCompressor, T, T, T>,
    "createAnalyser": <#Global.BaseAudioContext.prototype.createAnalyser, T, T, T>,
    "createScriptProcessor": <#Global.BaseAudioContext.prototype.createScriptProcessor, T, T, T>,
    "createStereoPanner": <#Global.BaseAudioContext.prototype.createStereoPanner, T, T, T>,
    "createOscillator": <#Global.BaseAudioContext.prototype.createOscillator, T, T, T>,
    "createPeriodicWave": <#Global.BaseAudioContext.prototype.createPeriodicWave, T, T, T>,
    "createChannelSplitter": <#Global.BaseAudioContext.prototype.createChannelSplitter, T, T, T>,
    "createChannelMerger": <#Global.BaseAudioContext.prototype.createChannelMerger, T, T, T>,
    "resume": <#Global.BaseAudioContext.prototype.resume, T, T, T>,
    "createMediaElementSource": <#Global.BaseAudioContext.prototype.createMediaElementSource, T, T, T>,
    "createMediaStreamSource": <#Global.BaseAudioContext.prototype.createMediaStreamSource, T, T, T>,
    "createMediaStreamDestination": <#Global.BaseAudioContext.prototype.createMediaStreamDestination, T, T, T>,
    "constructor": <#Global.BaseAudioContext, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BaseAudioContext.prototype.createBuffer: {
    "length": <3, F, F, T>,
    "name": <"createBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.decodeAudioData: {
    "length": <1, F, F, T>,
    "name": <"decodeAudioData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createBufferSource: {
    "length": <0, F, F, T>,
    "name": <"createBufferSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createConstantSource: {
    "length": <0, F, F, T>,
    "name": <"createConstantSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createGain: {
    "length": <0, F, F, T>,
    "name": <"createGain", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createDelay: {
    "length": <0, F, F, T>,
    "name": <"createDelay", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createBiquadFilter: {
    "length": <0, F, F, T>,
    "name": <"createBiquadFilter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createIIRFilter: {
    "length": <2, F, F, T>,
    "name": <"createIIRFilter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createWaveShaper: {
    "length": <0, F, F, T>,
    "name": <"createWaveShaper", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createPanner: {
    "length": <0, F, F, T>,
    "name": <"createPanner", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createConvolver: {
    "length": <0, F, F, T>,
    "name": <"createConvolver", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createDynamicsCompressor: {
    "length": <0, F, F, T>,
    "name": <"createDynamicsCompressor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createAnalyser: {
    "length": <0, F, F, T>,
    "name": <"createAnalyser", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createScriptProcessor: {
    "length": <0, F, F, T>,
    "name": <"createScriptProcessor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createStereoPanner: {
    "length": <0, F, F, T>,
    "name": <"createStereoPanner", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createOscillator: {
    "length": <0, F, F, T>,
    "name": <"createOscillator", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createPeriodicWave: {
    "length": <2, F, F, T>,
    "name": <"createPeriodicWave", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createChannelSplitter: {
    "length": <0, F, F, T>,
    "name": <"createChannelSplitter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createChannelMerger: {
    "length": <0, F, F, T>,
    "name": <"createChannelMerger", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.resume: {
    "length": <0, F, F, T>,
    "name": <"resume", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createMediaElementSource: {
    "length": <1, F, F, T>,
    "name": <"createMediaElementSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createMediaStreamSource: {
    "length": <1, F, F, T>,
    "name": <"createMediaStreamSource", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.BaseAudioContext.prototype.createMediaStreamDestination: {
    "length": <0, F, F, T>,
    "name": <"createMediaStreamDestination", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioProcessingEvent: {
    "length": <0, F, F, T>,
    "name": <"AudioProcessingEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AudioProcessingEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AudioProcessingEvent.prototype: {
    "playbackTime": <undefined, T, T, T>,
    "inputBuffer": <undefined, T, T, T>,
    "outputBuffer": <undefined, T, T, T>,
    "constructor": <#Global.AudioProcessingEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.AudioParam: {
    "length": <0, F, F, T>,
    "name": <"AudioParam", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AudioParam.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AudioParam.prototype: {
    "value": <undefined, T, T, T>,
    "defaultValue": <undefined, T, T, T>,
    "minValue": <undefined, T, T, T>,
    "maxValue": <undefined, T, T, T>,
    "setValueAtTime": <#Global.AudioParam.prototype.setValueAtTime, T, T, T>,
    "linearRampToValueAtTime": <#Global.AudioParam.prototype.linearRampToValueAtTime, T, T, T>,
    "exponentialRampToValueAtTime": <#Global.AudioParam.prototype.exponentialRampToValueAtTime, T, T, T>,
    "setTargetAtTime": <#Global.AudioParam.prototype.setTargetAtTime, T, T, T>,
    "setValueCurveAtTime": <#Global.AudioParam.prototype.setValueCurveAtTime, T, T, T>,
    "cancelScheduledValues": <#Global.AudioParam.prototype.cancelScheduledValues, T, T, T>,
    "constructor": <#Global.AudioParam, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.AudioParam.prototype.setValueAtTime: {
    "length": <2, F, F, T>,
    "name": <"setValueAtTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioParam.prototype.linearRampToValueAtTime: {
    "length": <2, F, F, T>,
    "name": <"linearRampToValueAtTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioParam.prototype.exponentialRampToValueAtTime: {
    "length": <2, F, F, T>,
    "name": <"exponentialRampToValueAtTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioParam.prototype.setTargetAtTime: {
    "length": <3, F, F, T>,
    "name": <"setTargetAtTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioParam.prototype.setValueCurveAtTime: {
    "length": <3, F, F, T>,
    "name": <"setValueCurveAtTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioParam.prototype.cancelScheduledValues: {
    "length": <1, F, F, T>,
    "name": <"cancelScheduledValues", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.btoa: {
    "length": <1, F, F, T>,
    "name": <"btoa", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.atob: {
    "length": <1, F, F, T>,
    "name": <"atob", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioListener: {
    "length": <0, F, F, T>,
    "name": <"AudioListener", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AudioListener.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AudioListener.prototype: {
    "positionX": <undefined, T, T, T>,
    "positionY": <undefined, T, T, T>,
    "positionZ": <undefined, T, T, T>,
    "forwardX": <undefined, T, T, T>,
    "forwardY": <undefined, T, T, T>,
    "forwardZ": <undefined, T, T, T>,
    "upX": <undefined, T, T, T>,
    "upY": <undefined, T, T, T>,
    "upZ": <undefined, T, T, T>,
    "setPosition": <#Global.AudioListener.prototype.setPosition, T, T, T>,
    "setOrientation": <#Global.AudioListener.prototype.setOrientation, T, T, T>,
    "constructor": <#Global.AudioListener, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.AudioListener.prototype.setPosition: {
    "length": <3, F, F, T>,
    "name": <"setPosition", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioListener.prototype.setOrientation: {
    "length": <6, F, F, T>,
    "name": <"setOrientation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioDestinationNode: {
    "length": <0, F, F, T>,
    "name": <"AudioDestinationNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AudioDestinationNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AudioDestinationNode.prototype: {
    "maxChannelCount": <undefined, T, T, T>,
    "constructor": <#Global.AudioDestinationNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.AudioBufferSourceNode: {
    "length": <1, F, F, T>,
    "name": <"AudioBufferSourceNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AudioBufferSourceNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AudioBufferSourceNode.prototype: {
    "buffer": <undefined, T, T, T>,
    "playbackRate": <undefined, T, T, T>,
    "detune": <undefined, T, T, T>,
    "loop": <undefined, T, T, T>,
    "loopStart": <undefined, T, T, T>,
    "loopEnd": <undefined, T, T, T>,
    "onended": <undefined, T, T, T>,
    "start": <#Global.AudioBufferSourceNode.prototype.start, T, T, T>,
    "stop": <#Global.AudioBufferSourceNode.prototype.stop, T, T, T>,
    "constructor": <#Global.AudioBufferSourceNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.OscillatorNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.AudioBufferSourceNode.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioBufferSourceNode.prototype.stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.setTimeout: {
    "length": <1, F, F, T>,
    "name": <"setTimeout", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioBuffer: {
    "length": <2, F, F, T>,
    "name": <"AudioBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AudioBuffer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AudioBuffer.prototype: {
    "length": <undefined, T, T, T>,
    "duration": <undefined, T, T, T>,
    "sampleRate": <undefined, T, T, T>,
    "numberOfChannels": <undefined, T, T, T>,
    "getChannelData": <#Global.AudioBuffer.prototype.getChannelData, T, T, T>,
    "copyFromChannel": <#Global.AudioBuffer.prototype.copyFromChannel, T, T, T>,
    "copyToChannel": <#Global.AudioBuffer.prototype.copyToChannel, T, T, T>,
    "constructor": <#Global.AudioBuffer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.AudioBuffer.prototype.getChannelData: {
    "length": <1, F, F, T>,
    "name": <"getChannelData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioBuffer.prototype.copyFromChannel: {
    "length": <2, F, F, T>,
    "name": <"copyFromChannel", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AudioBuffer.prototype.copyToChannel: {
    "length": <2, F, F, T>,
    "name": <"copyToChannel", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.clearTimeout: {
    "length": <0, F, F, T>,
    "name": <"clearTimeout", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AppBannerPromptResult: {
    "length": <0, F, F, T>,
    "name": <"AppBannerPromptResult", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AppBannerPromptResult.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AppBannerPromptResult.prototype: {
    "platform": <undefined, T, T, T>,
    "outcome": <undefined, T, T, T>,
    "constructor": <#Global.AppBannerPromptResult, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.AnalyserNode: {
    "length": <1, F, F, T>,
    "name": <"AnalyserNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AnalyserNode.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AnalyserNode.prototype: {
    "fftSize": <undefined, T, T, T>,
    "frequencyBinCount": <undefined, T, T, T>,
    "minDecibels": <undefined, T, T, T>,
    "maxDecibels": <undefined, T, T, T>,
    "smoothingTimeConstant": <undefined, T, T, T>,
    "getFloatFrequencyData": <#Global.AnalyserNode.prototype.getFloatFrequencyData, T, T, T>,
    "getByteFrequencyData": <#Global.AnalyserNode.prototype.getByteFrequencyData, T, T, T>,
    "getFloatTimeDomainData": <#Global.AnalyserNode.prototype.getFloatTimeDomainData, T, T, T>,
    "getByteTimeDomainData": <#Global.AnalyserNode.prototype.getByteTimeDomainData, T, T, T>,
    "constructor": <#Global.AnalyserNode, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.WaveShaperNode.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.AnalyserNode.prototype.getFloatFrequencyData: {
    "length": <1, F, F, T>,
    "name": <"getFloatFrequencyData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AnalyserNode.prototype.getByteFrequencyData: {
    "length": <1, F, F, T>,
    "name": <"getByteFrequencyData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AnalyserNode.prototype.getFloatTimeDomainData: {
    "length": <1, F, F, T>,
    "name": <"getFloatTimeDomainData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AnalyserNode.prototype.getByteTimeDomainData: {
    "length": <1, F, F, T>,
    "name": <"getByteTimeDomainData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitOfflineAudioContext: {
    "length": <3, F, F, T>,
    "name": <"OfflineAudioContext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitOfflineAudioContext.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BaseAudioContext,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitOfflineAudioContext.prototype: {
    "oncomplete": <undefined, T, T, T>,
    "length": <undefined, T, T, T>,
    "startRendering": <#Global.webkitOfflineAudioContext.prototype.startRendering, T, T, T>,
    "suspend": <#Global.webkitOfflineAudioContext.prototype.suspend, T, T, T>,
    "constructor": <#Global.webkitOfflineAudioContext, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BaseAudioContext.prototype,
    [[Class]]: "Object"
  },
  #Global.webkitOfflineAudioContext.prototype.startRendering: {
    "length": <0, F, F, T>,
    "name": <"startRendering", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitOfflineAudioContext.prototype.suspend: {
    "length": <1, F, F, T>,
    "name": <"suspend", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.setInterval: {
    "length": <1, F, F, T>,
    "name": <"setInterval", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitAudioContext: {
    "length": <0, F, F, T>,
    "name": <"AudioContext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitAudioContext.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BaseAudioContext,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.webkitAudioContext.prototype: {
    "suspend": <#Global.webkitAudioContext.prototype.suspend, T, T, T>,
    "close": <#Global.webkitAudioContext.prototype.close, T, T, T>,
    "constructor": <#Global.webkitAudioContext, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BaseAudioContext.prototype,
    [[Class]]: "Object"
  },
  #Global.webkitAudioContext.prototype.suspend: {
    "length": <0, F, F, T>,
    "name": <"suspend", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitAudioContext.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.clearInterval: {
    "length": <0, F, F, T>,
    "name": <"clearInterval", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.localStorage: {
    "1": <"0", T, F, T>,
    "2": <"0", T, F, T>,
    "3": <"0", T, F, T>,
    "4": <"0", T, F, T>,
    "5": <"0", T, F, T>,
    "6": <"0", T, F, T>,
    "7": <"0", T, F, T>,
    "8": <"0", T, F, T>,
    "9": <"0", T, F, T>,
    "10": <"0", T, F, T>,
    "11": <"0", T, F, T>,
    "12": <"0", T, F, T>,
    "13": <"0", T, F, T>,
    "14": <"0", T, F, T>,
    "15": <"0", T, F, T>,
    "16": <"0", T, F, T>,
    "17": <"0", T, F, T>,
    "18": <"0", T, F, T>,
    "19": <"0", T, F, T>,
    "20": <"0", T, F, T>,
    "21": <"0", T, F, T>,
    "22": <"0", T, F, T>,
    "23": <"0", T, F, T>,
    "24": <"0", T, F, T>,
    "25": <"0", T, F, T>,
    "26": <"0", T, F, T>,
    "27": <"0", T, F, T>,
    "28": <"0", T, F, T>,
    "29": <"0", T, F, T>,
    "30": <"0", T, F, T>,
    "31": <"0", T, F, T>,
    "32": <"0", T, F, T>,
    "33": <"0", T, F, T>,
    "34": <"0", T, F, T>,
    "35": <"0", T, F, T>,
    "36": <"0", T, F, T>,
    "37": <"0", T, F, T>,
    "38": <"0", T, F, T>,
    "39": <"0", T, F, T>,
    "40": <"0", T, F, T>,
    "41": <"0", T, F, T>,
    "42": <"0", T, F, T>,
    "43": <"0", T, F, T>,
    "44": <"0", T, F, T>,
    "45": <"0", T, F, T>,
    "46": <"0", T, F, T>,
    "47": <"0", T, F, T>,
    "48": <"0", T, F, T>,
    "49": <"0", T, F, T>,
    "50": <"0", T, F, T>,
    "51": <"0", T, F, T>,
    "52": <"0", T, F, T>,
    "53": <"0", T, F, T>,
    "54": <"0", T, F, T>,
    "55": <"0", T, F, T>,
    "56": <"0", T, F, T>,
    "57": <"0", T, F, T>,
    "58": <"0", T, F, T>,
    "59": <"0", T, F, T>,
    "60": <"0", T, F, T>,
    "61": <"0", T, F, T>,
    "62": <"0", T, F, T>,
    "63": <"0", T, F, T>,
    "64": <"0", T, F, T>,
    "65": <"0", T, F, T>,
    "66": <"0", T, F, T>,
    "67": <"0", T, F, T>,
    "68": <"0", T, F, T>,
    "69": <"0", T, F, T>,
    "70": <"0", T, F, T>,
    "71": <"0", T, F, T>,
    "72": <"0", T, F, T>,
    "73": <"0", T, F, T>,
    "74": <"0", T, F, T>,
    "75": <"0", T, F, T>,
    "76": <"0", T, F, T>,
    "77": <"0", T, F, T>,
    "78": <"0", T, F, T>,
    "79": <"0", T, F, T>,
    "80": <"0", T, F, T>,
    "81": <"0", T, F, T>,
    "82": <"0", T, F, T>,
    "83": <"0", T, F, T>,
    "84": <"0", T, F, T>,
    "85": <"0", T, F, T>,
    "86": <"0", T, F, T>,
    "87": <"0", T, F, T>,
    "88": <"0", T, F, T>,
    "89": <"0", T, F, T>,
    "90": <"0", T, F, T>,
    "91": <"0", T, F, T>,
    "92": <"0", T, F, T>,
    "93": <"0", T, F, T>,
    "94": <"0", T, F, T>,
    "95": <"0", T, F, T>,
    "96": <"0", T, F, T>,
    "97": <"0", T, F, T>,
    "98": <"0", T, F, T>,
    "99": <"0", T, F, T>,
    "100": <"0", T, F, T>,
    "101": <"0", T, F, T>,
    "102": <"0", T, F, T>,
    "103": <"0", T, F, T>,
    "104": <"0", T, F, T>,
    "105": <"0", T, F, T>,
    "106": <"0", T, F, T>,
    "107": <"0", T, F, T>,
    "108": <"0", T, F, T>,
    "109": <"0", T, F, T>,
    "110": <"0", T, F, T>,
    "111": <"0", T, F, T>,
    "112": <"0", T, F, T>,
    "113": <"0", T, F, T>,
    "114": <"0", T, F, T>,
    "115": <"0", T, F, T>,
    "116": <"0", T, F, T>,
    "117": <"0", T, F, T>,
    "118": <"0", T, F, T>,
    "119": <"0", T, F, T>,
    "120": <"0", T, F, T>,
    "121": <"0", T, F, T>,
    "122": <"0", T, F, T>,
    "123": <"0", T, F, T>,
    "124": <"0", T, F, T>,
    "125": <"0", T, F, T>,
    "126": <"0", T, F, T>,
    "127": <"0", T, F, T>,
    "128": <"0", T, F, T>,
    "129": <"0", T, F, T>,
    "130": <"0", T, F, T>,
    "131": <"0", T, F, T>,
    "132": <"0", T, F, T>,
    "133": <"0", T, F, T>,
    "134": <"0", T, F, T>,
    "135": <"0", T, F, T>,
    "136": <"0", T, F, T>,
    "137": <"0", T, F, T>,
    "138": <"0", T, F, T>,
    "139": <"0", T, F, T>,
    "140": <"0", T, F, T>,
    "141": <"0", T, F, T>,
    "142": <"0", T, F, T>,
    "143": <"0", T, F, T>,
    "144": <"0", T, F, T>,
    "145": <"0", T, F, T>,
    "146": <"0", T, F, T>,
    "147": <"0", T, F, T>,
    "148": <"0", T, F, T>,
    "149": <"0", T, F, T>,
    "150": <"0", T, F, T>,
    "151": <"0", T, F, T>,
    "152": <"0", T, F, T>,
    "153": <"0", T, F, T>,
    "154": <"0", T, F, T>,
    "155": <"0", T, F, T>,
    "156": <"0", T, F, T>,
    "157": <"0", T, F, T>,
    "158": <"0", T, F, T>,
    "159": <"0", T, F, T>,
    "160": <"0", T, F, T>,
    "161": <"0", T, F, T>,
    "162": <"0", T, F, T>,
    "163": <"0", T, F, T>,
    "164": <"0", T, F, T>,
    "165": <"0", T, F, T>,
    "166": <"0", T, F, T>,
    "167": <"0", T, F, T>,
    "168": <"0", T, F, T>,
    "169": <"0", T, F, T>,
    "170": <"0", T, F, T>,
    "171": <"0", T, F, T>,
    "172": <"0", T, F, T>,
    "173": <"0", T, F, T>,
    "174": <"0", T, F, T>,
    "175": <"0", T, F, T>,
    "176": <"0", T, F, T>,
    "177": <"0", T, F, T>,
    "178": <"0", T, F, T>,
    "179": <"0", T, F, T>,
    "180": <"0", T, F, T>,
    "181": <"0", T, F, T>,
    "182": <"0", T, F, T>,
    "183": <"0", T, F, T>,
    "184": <"0", T, F, T>,
    "185": <"0", T, F, T>,
    "186": <"0", T, F, T>,
    "187": <"0", T, F, T>,
    "188": <"0", T, F, T>,
    "189": <"0", T, F, T>,
    "190": <"0", T, F, T>,
    "191": <"0", T, F, T>,
    "192": <"0", T, F, T>,
    "193": <"0", T, F, T>,
    "194": <"0", T, F, T>,
    "195": <"0", T, F, T>,
    "196": <"0", T, F, T>,
    "197": <"0", T, F, T>,
    "198": <"0", T, F, T>,
    "199": <"0", T, F, T>,
    "200": <"0", T, F, T>,
    "201": <"0", T, F, T>,
    "202": <"0", T, F, T>,
    "203": <"0", T, F, T>,
    "204": <"0", T, F, T>,
    "205": <"0", T, F, T>,
    "206": <"0", T, F, T>,
    "207": <"0", T, F, T>,
    "208": <"0", T, F, T>,
    "209": <"0", T, F, T>,
    "210": <"0", T, F, T>,
    "211": <"0", T, F, T>,
    "212": <"0", T, F, T>,
    "213": <"0", T, F, T>,
    "214": <"0", T, F, T>,
    "215": <"0", T, F, T>,
    "216": <"0", T, F, T>,
    "217": <"0", T, F, T>,
    "218": <"0", T, F, T>,
    "219": <"0", T, F, T>,
    "220": <"0", T, F, T>,
    "221": <"0", T, F, T>,
    "222": <"0", T, F, T>,
    "223": <"0", T, F, T>,
    "224": <"0", T, F, T>,
    "225": <"0", T, F, T>,
    "226": <"0", T, F, T>,
    "227": <"0", T, F, T>,
    "228": <"0", T, F, T>,
    "229": <"0", T, F, T>,
    "230": <"0", T, F, T>,
    "231": <"0", T, F, T>,
    "232": <"0", T, F, T>,
    "233": <"0", T, F, T>,
    "234": <"0", T, F, T>,
    "235": <"0", T, F, T>,
    "236": <"0", T, F, T>,
    "237": <"0", T, F, T>,
    "238": <"0", T, F, T>,
    "239": <"0", T, F, T>,
    "240": <"0", T, F, T>,
    "241": <"0", T, F, T>,
    "242": <"0", T, F, T>,
    "243": <"0", T, F, T>,
    "244": <"0", T, F, T>,
    "245": <"0", T, F, T>,
    "246": <"0", T, F, T>,
    "247": <"0", T, F, T>,
    "248": <"1", T, F, T>,
    "249": <"0", T, F, T>,
    "250": <"0", T, F, T>,
    "251": <"0", T, F, T>,
    "firstRun": <"1", T, T, T>,
    "firstRunGen2": <"1", T, T, T>,
    "test": <"2", T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Storage.prototype,
    [[Class]]: "Object"
  },
  #Global.createImageBitmap: {
    "length": <1, F, F, T>,
    "name": <"createImageBitmap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.sessionStorage: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.Storage.prototype,
    [[Class]]: "Object"
  },
  #Global.scroll: {
    "length": <2, F, F, T>,
    "name": <"scroll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitStorageInfo: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.webkitStorageInfo.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.webkitStorageInfo.[[Prototype]]: {
    "TEMPORARY": <0, F, T, F>,
    "PERSISTENT": <1, F, T, F>,
    "queryUsageAndQuota": <#Global.webkitStorageInfo.[[Prototype]].queryUsageAndQuota, T, T, T>,
    "requestQuota": <#Global.webkitStorageInfo.[[Prototype]].requestQuota, T, T, T>,
    "constructor": <#Global.webkitStorageInfo.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.webkitStorageInfo.[[Prototype]].queryUsageAndQuota: {
    "length": <1, F, F, T>,
    "name": <"queryUsageAndQuota", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitStorageInfo.[[Prototype]].requestQuota: {
    "length": <2, F, F, T>,
    "name": <"requestQuota", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitStorageInfo.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"DeprecatedStorageInfo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.webkitStorageInfo.[[Prototype]], F, F, F>,
    "TEMPORARY": <0, F, T, F>,
    "PERSISTENT": <1, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.scrollTo: {
    "length": <2, F, F, T>,
    "name": <"scrollTo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.scrollBy: {
    "length": <2, F, F, T>,
    "name": <"scrollBy", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.fetch: {
    "length": <1, F, F, T>,
    "name": <"fetch", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.webkitRequestFileSystem: {
    "length": <3, F, F, T>,
    "name": <"webkitRequestFileSystem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.indexedDB: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.IDBFactory.prototype,
    [[Class]]: "Object"
  },
  #Global.webkitResolveLocalFileSystemURL: {
    "length": <2, F, F, T>,
    "name": <"webkitResolveLocalFileSystemURL", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.openDatabase: {
    "length": <4, F, F, T>,
    "name": <"openDatabase", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.crypto: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.Crypto.prototype,
    [[Class]]: "Object"
  },
  #Global.postMessage: {
    "length": <2, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.blur: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.focus: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.close: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement: {
    "length": <0, F, F, T>,
    "name": <"SVGMPathElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMPathElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype: {
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGMPathElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]]: {
    "className": <undefined, T, T, T>,
    "dataset": <undefined, T, T, T>,
    "style": <undefined, T, T, T>,
    "ownerSVGElement": <undefined, T, T, T>,
    "viewportElement": <undefined, T, T, T>,
    "tabIndex": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "onblur": <undefined, T, T, T>,
    "oncancel": <undefined, T, T, T>,
    "oncanplay": <undefined, T, T, T>,
    "oncanplaythrough": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "onclick": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "oncontextmenu": <undefined, T, T, T>,
    "oncuechange": <undefined, T, T, T>,
    "ondblclick": <undefined, T, T, T>,
    "ondrag": <undefined, T, T, T>,
    "ondragend": <undefined, T, T, T>,
    "ondragenter": <undefined, T, T, T>,
    "ondragleave": <undefined, T, T, T>,
    "ondragover": <undefined, T, T, T>,
    "ondragstart": <undefined, T, T, T>,
    "ondrop": <undefined, T, T, T>,
    "ondurationchange": <undefined, T, T, T>,
    "onemptied": <undefined, T, T, T>,
    "onended": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onfocus": <undefined, T, T, T>,
    "oninput": <undefined, T, T, T>,
    "oninvalid": <undefined, T, T, T>,
    "onkeydown": <undefined, T, T, T>,
    "onkeypress": <undefined, T, T, T>,
    "onkeyup": <undefined, T, T, T>,
    "onload": <undefined, T, T, T>,
    "onloadeddata": <undefined, T, T, T>,
    "onloadedmetadata": <undefined, T, T, T>,
    "onloadstart": <undefined, T, T, T>,
    "onmousedown": <undefined, T, T, T>,
    "onmouseenter": <undefined, T, T, T>,
    "onmouseleave": <undefined, T, T, T>,
    "onmousemove": <undefined, T, T, T>,
    "onmouseout": <undefined, T, T, T>,
    "onmouseover": <undefined, T, T, T>,
    "onmouseup": <undefined, T, T, T>,
    "onmousewheel": <undefined, T, T, T>,
    "onpause": <undefined, T, T, T>,
    "onplay": <undefined, T, T, T>,
    "onplaying": <undefined, T, T, T>,
    "onprogress": <undefined, T, T, T>,
    "onratechange": <undefined, T, T, T>,
    "onreset": <undefined, T, T, T>,
    "onresize": <undefined, T, T, T>,
    "onscroll": <undefined, T, T, T>,
    "onseeked": <undefined, T, T, T>,
    "onseeking": <undefined, T, T, T>,
    "onselect": <undefined, T, T, T>,
    "onshow": <undefined, T, T, T>,
    "onstalled": <undefined, T, T, T>,
    "onsubmit": <undefined, T, T, T>,
    "onsuspend": <undefined, T, T, T>,
    "ontimeupdate": <undefined, T, T, T>,
    "ontoggle": <undefined, T, T, T>,
    "onvolumechange": <undefined, T, T, T>,
    "onwaiting": <undefined, T, T, T>,
    "focus": <#Global.SVGMPathElement.prototype.[[Prototype]].focus, T, T, T>,
    "blur": <#Global.SVGMPathElement.prototype.[[Prototype]].blur, T, T, T>,
    "onauxclick": <undefined, T, T, T>,
    "onpointercancel": <undefined, T, T, T>,
    "onpointerdown": <undefined, T, T, T>,
    "onpointerenter": <undefined, T, T, T>,
    "onpointerleave": <undefined, T, T, T>,
    "onpointermove": <undefined, T, T, T>,
    "onpointerout": <undefined, T, T, T>,
    "onpointerover": <undefined, T, T, T>,
    "onpointerup": <undefined, T, T, T>,
    "constructor": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].focus: {
    "length": <0, F, F, T>,
    "name": <"focus", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].blur: {
    "length": <0, F, F, T>,
    "name": <"blur", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"SVGElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMPathElement.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]]: {
    "length": <0, F, F, T>,
    "name": <"Element", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype: {
    "namespaceURI": <undefined, T, T, T>,
    "prefix": <undefined, T, T, T>,
    "localName": <undefined, T, T, T>,
    "tagName": <undefined, T, T, T>,
    "id": <undefined, T, T, T>,
    "className": <undefined, T, T, T>,
    "classList": <undefined, T, T, T>,
    "attributes": <undefined, T, T, T>,
    "innerHTML": <undefined, T, T, T>,
    "outerHTML": <undefined, T, T, T>,
    "shadowRoot": <undefined, T, T, T>,
    "scrollTop": <undefined, T, T, T>,
    "scrollLeft": <undefined, T, T, T>,
    "scrollWidth": <undefined, T, T, T>,
    "scrollHeight": <undefined, T, T, T>,
    "clientTop": <undefined, T, T, T>,
    "clientLeft": <undefined, T, T, T>,
    "clientWidth": <undefined, T, T, T>,
    "clientHeight": <undefined, T, T, T>,
    "onbeforecopy": <undefined, T, T, T>,
    "onbeforecut": <undefined, T, T, T>,
    "onbeforepaste": <undefined, T, T, T>,
    "oncopy": <undefined, T, T, T>,
    "oncut": <undefined, T, T, T>,
    "onpaste": <undefined, T, T, T>,
    "onsearch": <undefined, T, T, T>,
    "onselectstart": <undefined, T, T, T>,
    "onwheel": <undefined, T, T, T>,
    "onwebkitfullscreenchange": <undefined, T, T, T>,
    "onwebkitfullscreenerror": <undefined, T, T, T>,
    "previousElementSibling": <undefined, T, T, T>,
    "nextElementSibling": <undefined, T, T, T>,
    "children": <undefined, T, T, T>,
    "firstElementChild": <undefined, T, T, T>,
    "lastElementChild": <undefined, T, T, T>,
    "childElementCount": <undefined, T, T, T>,
    "hasAttributes": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasAttributes, T, T, T>,
    "getAttribute": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttribute, T, T, T>,
    "getAttributeNS": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttributeNS, T, T, T>,
    "setAttribute": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttribute, T, T, T>,
    "setAttributeNS": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttributeNS, T, T, T>,
    "removeAttribute": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.removeAttribute, T, T, T>,
    "removeAttributeNS": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.removeAttributeNS, T, T, T>,
    "hasAttribute": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasAttribute, T, T, T>,
    "hasAttributeNS": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasAttributeNS, T, T, T>,
    "getAttributeNode": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttributeNode, T, T, T>,
    "getAttributeNodeNS": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttributeNodeNS, T, T, T>,
    "setAttributeNode": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttributeNode, T, T, T>,
    "setAttributeNodeNS": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttributeNodeNS, T, T, T>,
    "removeAttributeNode": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.removeAttributeNode, T, T, T>,
    "closest": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.closest, T, T, T>,
    "matches": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.matches, T, T, T>,
    "webkitMatchesSelector": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.webkitMatchesSelector, T, T, T>,
    "getElementsByTagName": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getElementsByTagName, T, T, T>,
    "getElementsByTagNameNS": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getElementsByTagNameNS, T, T, T>,
    "getElementsByClassName": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getElementsByClassName, T, T, T>,
    "insertAdjacentElement": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertAdjacentElement, T, T, T>,
    "insertAdjacentText": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertAdjacentText, T, T, T>,
    "insertAdjacentHTML": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertAdjacentHTML, T, T, T>,
    "createShadowRoot": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.createShadowRoot, T, T, T>,
    "getDestinationInsertionPoints": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getDestinationInsertionPoints, T, T, T>,
    "requestPointerLock": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.requestPointerLock, T, T, T>,
    "getClientRects": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getClientRects, T, T, T>,
    "getBoundingClientRect": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getBoundingClientRect, T, T, T>,
    "scrollIntoView": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.scrollIntoView, T, T, T>,
    "scrollIntoViewIfNeeded": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.scrollIntoViewIfNeeded, T, T, T>,
    "animate": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.animate, T, T, T>,
    "remove": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.remove, T, T, T>,
    "webkitRequestFullScreen": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.webkitRequestFullScreen, T, T, T>,
    "webkitRequestFullscreen": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.webkitRequestFullscreen, T, T, T>,
    "querySelector": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.querySelector, T, T, T>,
    "querySelectorAll": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.querySelectorAll, T, T, T>,
    "ongotpointercapture": <undefined, T, T, T>,
    "onlostpointercapture": <undefined, T, T, T>,
    "assignedSlot": <undefined, T, T, T>,
    "slot": <undefined, T, T, T>,
    "setPointerCapture": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setPointerCapture, T, T, T>,
    "releasePointerCapture": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.releasePointerCapture, T, T, T>,
    "hasPointerCapture": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasPointerCapture, T, T, T>,
    "attachShadow": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.attachShadow, T, T, T>,
    "before": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.before, T, T, T>,
    "after": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.after, T, T, T>,
    "replaceWith": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.replaceWith, T, T, T>,
    "prepend": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.prepend, T, T, T>,
    "append": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.append, T, T, T>,
    "constructor": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]], T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasAttributes: {
    "length": <0, F, F, T>,
    "name": <"hasAttributes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttribute: {
    "length": <1, F, F, T>,
    "name": <"getAttribute", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttributeNS: {
    "length": <2, F, F, T>,
    "name": <"getAttributeNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttribute: {
    "length": <2, F, F, T>,
    "name": <"setAttribute", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttributeNS: {
    "length": <3, F, F, T>,
    "name": <"setAttributeNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.removeAttribute: {
    "length": <1, F, F, T>,
    "name": <"removeAttribute", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.removeAttributeNS: {
    "length": <2, F, F, T>,
    "name": <"removeAttributeNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasAttribute: {
    "length": <1, F, F, T>,
    "name": <"hasAttribute", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasAttributeNS: {
    "length": <2, F, F, T>,
    "name": <"hasAttributeNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttributeNode: {
    "length": <1, F, F, T>,
    "name": <"getAttributeNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getAttributeNodeNS: {
    "length": <2, F, F, T>,
    "name": <"getAttributeNodeNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttributeNode: {
    "length": <1, F, F, T>,
    "name": <"setAttributeNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setAttributeNodeNS: {
    "length": <1, F, F, T>,
    "name": <"setAttributeNodeNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.removeAttributeNode: {
    "length": <1, F, F, T>,
    "name": <"removeAttributeNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.closest: {
    "length": <1, F, F, T>,
    "name": <"closest", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.matches: {
    "length": <1, F, F, T>,
    "name": <"matches", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.webkitMatchesSelector: {
    "length": <1, F, F, T>,
    "name": <"webkitMatchesSelector", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getElementsByTagName: {
    "length": <1, F, F, T>,
    "name": <"getElementsByTagName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getElementsByTagNameNS: {
    "length": <2, F, F, T>,
    "name": <"getElementsByTagNameNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getElementsByClassName: {
    "length": <1, F, F, T>,
    "name": <"getElementsByClassName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertAdjacentElement: {
    "length": <2, F, F, T>,
    "name": <"insertAdjacentElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertAdjacentText: {
    "length": <2, F, F, T>,
    "name": <"insertAdjacentText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertAdjacentHTML: {
    "length": <2, F, F, T>,
    "name": <"insertAdjacentHTML", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.createShadowRoot: {
    "length": <0, F, F, T>,
    "name": <"createShadowRoot", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getDestinationInsertionPoints: {
    "length": <0, F, F, T>,
    "name": <"getDestinationInsertionPoints", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.requestPointerLock: {
    "length": <0, F, F, T>,
    "name": <"requestPointerLock", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getClientRects: {
    "length": <0, F, F, T>,
    "name": <"getClientRects", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.getBoundingClientRect: {
    "length": <0, F, F, T>,
    "name": <"getBoundingClientRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.scrollIntoView: {
    "length": <0, F, F, T>,
    "name": <"scrollIntoView", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.scrollIntoViewIfNeeded: {
    "length": <0, F, F, T>,
    "name": <"scrollIntoViewIfNeeded", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.animate: {
    "length": <1, F, F, T>,
    "name": <"animate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.remove: {
    "length": <0, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.webkitRequestFullScreen: {
    "length": <0, F, F, T>,
    "name": <"webkitRequestFullScreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.webkitRequestFullscreen: {
    "length": <0, F, F, T>,
    "name": <"webkitRequestFullscreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.querySelector: {
    "length": <1, F, F, T>,
    "name": <"querySelector", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.querySelectorAll: {
    "length": <1, F, F, T>,
    "name": <"querySelectorAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.setPointerCapture: {
    "length": <1, F, F, T>,
    "name": <"setPointerCapture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.releasePointerCapture: {
    "length": <1, F, F, T>,
    "name": <"releasePointerCapture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.hasPointerCapture: {
    "length": <1, F, F, T>,
    "name": <"hasPointerCapture", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.attachShadow: {
    "length": <1, F, F, T>,
    "name": <"attachShadow", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.before: {
    "length": <0, F, F, T>,
    "name": <"before", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.after: {
    "length": <0, F, F, T>,
    "name": <"after", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.replaceWith: {
    "length": <0, F, F, T>,
    "name": <"replaceWith", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.prepend: {
    "length": <0, F, F, T>,
    "name": <"prepend", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.append: {
    "length": <0, F, F, T>,
    "name": <"append", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]]: {
    "ELEMENT_NODE": <1, F, T, F>,
    "ATTRIBUTE_NODE": <2, F, T, F>,
    "TEXT_NODE": <3, F, T, F>,
    "CDATA_SECTION_NODE": <4, F, T, F>,
    "ENTITY_REFERENCE_NODE": <5, F, T, F>,
    "ENTITY_NODE": <6, F, T, F>,
    "PROCESSING_INSTRUCTION_NODE": <7, F, T, F>,
    "COMMENT_NODE": <8, F, T, F>,
    "DOCUMENT_NODE": <9, F, T, F>,
    "DOCUMENT_TYPE_NODE": <10, F, T, F>,
    "DOCUMENT_FRAGMENT_NODE": <11, F, T, F>,
    "NOTATION_NODE": <12, F, T, F>,
    "DOCUMENT_POSITION_DISCONNECTED": <1, F, T, F>,
    "DOCUMENT_POSITION_PRECEDING": <2, F, T, F>,
    "DOCUMENT_POSITION_FOLLOWING": <4, F, T, F>,
    "DOCUMENT_POSITION_CONTAINS": <8, F, T, F>,
    "DOCUMENT_POSITION_CONTAINED_BY": <16, F, T, F>,
    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": <32, F, T, F>,
    "nodeType": <undefined, T, T, T>,
    "nodeName": <undefined, T, T, T>,
    "baseURI": <undefined, T, T, T>,
    "isConnected": <undefined, T, T, T>,
    "ownerDocument": <undefined, T, T, T>,
    "parentNode": <undefined, T, T, T>,
    "parentElement": <undefined, T, T, T>,
    "childNodes": <undefined, T, T, T>,
    "firstChild": <undefined, T, T, T>,
    "lastChild": <undefined, T, T, T>,
    "previousSibling": <undefined, T, T, T>,
    "nextSibling": <undefined, T, T, T>,
    "nodeValue": <undefined, T, T, T>,
    "textContent": <undefined, T, T, T>,
    "hasChildNodes": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].hasChildNodes, T, T, T>,
    "getRootNode": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].getRootNode, T, T, T>,
    "normalize": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].normalize, T, T, T>,
    "cloneNode": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].cloneNode, T, T, T>,
    "isEqualNode": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].isEqualNode, T, T, T>,
    "isSameNode": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].isSameNode, T, T, T>,
    "compareDocumentPosition": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].compareDocumentPosition, T, T, T>,
    "contains": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].contains, T, T, T>,
    "lookupPrefix": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].lookupPrefix, T, T, T>,
    "lookupNamespaceURI": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].lookupNamespaceURI, T, T, T>,
    "isDefaultNamespace": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].isDefaultNamespace, T, T, T>,
    "insertBefore": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].insertBefore, T, T, T>,
    "appendChild": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].appendChild, T, T, T>,
    "replaceChild": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].replaceChild, T, T, T>,
    "removeChild": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].removeChild, T, T, T>,
    "constructor": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].hasChildNodes: {
    "length": <0, F, F, T>,
    "name": <"hasChildNodes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].getRootNode: {
    "length": <0, F, F, T>,
    "name": <"getRootNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].normalize: {
    "length": <0, F, F, T>,
    "name": <"normalize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].cloneNode: {
    "length": <0, F, F, T>,
    "name": <"cloneNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].isEqualNode: {
    "length": <1, F, F, T>,
    "name": <"isEqualNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].isSameNode: {
    "length": <1, F, F, T>,
    "name": <"isSameNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].compareDocumentPosition: {
    "length": <1, F, F, T>,
    "name": <"compareDocumentPosition", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].contains: {
    "length": <1, F, F, T>,
    "name": <"contains", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].lookupPrefix: {
    "length": <1, F, F, T>,
    "name": <"lookupPrefix", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].lookupNamespaceURI: {
    "length": <1, F, F, T>,
    "name": <"lookupNamespaceURI", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].isDefaultNamespace: {
    "length": <1, F, F, T>,
    "name": <"isDefaultNamespace", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].insertBefore: {
    "length": <2, F, F, T>,
    "name": <"insertBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].appendChild: {
    "length": <1, F, F, T>,
    "name": <"appendChild", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].replaceChild: {
    "length": <2, F, F, T>,
    "name": <"replaceChild", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].removeChild: {
    "length": <1, F, F, T>,
    "name": <"removeChild", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"Node", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]], F, F, F>,
    "ELEMENT_NODE": <1, F, T, F>,
    "ATTRIBUTE_NODE": <2, F, T, F>,
    "TEXT_NODE": <3, F, T, F>,
    "CDATA_SECTION_NODE": <4, F, T, F>,
    "ENTITY_REFERENCE_NODE": <5, F, T, F>,
    "ENTITY_NODE": <6, F, T, F>,
    "PROCESSING_INSTRUCTION_NODE": <7, F, T, F>,
    "COMMENT_NODE": <8, F, T, F>,
    "DOCUMENT_NODE": <9, F, T, F>,
    "DOCUMENT_TYPE_NODE": <10, F, T, F>,
    "DOCUMENT_FRAGMENT_NODE": <11, F, T, F>,
    "NOTATION_NODE": <12, F, T, F>,
    "DOCUMENT_POSITION_DISCONNECTED": <1, F, T, F>,
    "DOCUMENT_POSITION_PRECEDING": <2, F, T, F>,
    "DOCUMENT_POSITION_FOLLOWING": <4, F, T, F>,
    "DOCUMENT_POSITION_CONTAINS": <8, F, T, F>,
    "DOCUMENT_POSITION_CONTAINED_BY": <16, F, T, F>,
    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": <32, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGDiscardElement: {
    "length": <0, F, F, T>,
    "name": <"SVGDiscardElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGDiscardElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGDiscardElement.prototype: {
    "constructor": <#Global.SVGDiscardElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGAnimationElement: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimationElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimationElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimationElement.prototype: {
    "targetElement": <undefined, T, T, T>,
    "onbegin": <undefined, T, T, T>,
    "onend": <undefined, T, T, T>,
    "onrepeat": <undefined, T, T, T>,
    "requiredFeatures": <undefined, T, T, T>,
    "requiredExtensions": <undefined, T, T, T>,
    "systemLanguage": <undefined, T, T, T>,
    "getStartTime": <#Global.SVGAnimationElement.prototype.getStartTime, T, T, T>,
    "getCurrentTime": <#Global.SVGAnimationElement.prototype.getCurrentTime, T, T, T>,
    "getSimpleDuration": <#Global.SVGAnimationElement.prototype.getSimpleDuration, T, T, T>,
    "beginElement": <#Global.SVGAnimationElement.prototype.beginElement, T, T, T>,
    "beginElementAt": <#Global.SVGAnimationElement.prototype.beginElementAt, T, T, T>,
    "endElement": <#Global.SVGAnimationElement.prototype.endElement, T, T, T>,
    "endElementAt": <#Global.SVGAnimationElement.prototype.endElementAt, T, T, T>,
    "constructor": <#Global.SVGAnimationElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGAnimationElement.prototype.getStartTime: {
    "length": <0, F, F, T>,
    "name": <"getStartTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAnimationElement.prototype.getCurrentTime: {
    "length": <0, F, F, T>,
    "name": <"getCurrentTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAnimationElement.prototype.getSimpleDuration: {
    "length": <0, F, F, T>,
    "name": <"getSimpleDuration", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAnimationElement.prototype.beginElement: {
    "length": <0, F, F, T>,
    "name": <"beginElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAnimationElement.prototype.beginElementAt: {
    "length": <1, F, F, T>,
    "name": <"beginElementAt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAnimationElement.prototype.endElement: {
    "length": <0, F, F, T>,
    "name": <"endElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAnimationElement.prototype.endElementAt: {
    "length": <1, F, F, T>,
    "name": <"endElementAt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor: {
    "length": <0, F, F, T>,
    "name": <"XSLTProcessor", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XSLTProcessor.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype: {
    "importStylesheet": <#Global.XSLTProcessor.prototype.importStylesheet, T, T, T>,
    "transformToFragment": <#Global.XSLTProcessor.prototype.transformToFragment, T, T, T>,
    "transformToDocument": <#Global.XSLTProcessor.prototype.transformToDocument, T, T, T>,
    "setParameter": <#Global.XSLTProcessor.prototype.setParameter, T, T, T>,
    "getParameter": <#Global.XSLTProcessor.prototype.getParameter, T, T, T>,
    "removeParameter": <#Global.XSLTProcessor.prototype.removeParameter, T, T, T>,
    "clearParameters": <#Global.XSLTProcessor.prototype.clearParameters, T, T, T>,
    "reset": <#Global.XSLTProcessor.prototype.reset, T, T, T>,
    "constructor": <#Global.XSLTProcessor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.XSLTProcessor.prototype.importStylesheet: {
    "length": <1, F, F, T>,
    "name": <"importStylesheet", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype.transformToFragment: {
    "length": <2, F, F, T>,
    "name": <"transformToFragment", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype.transformToDocument: {
    "length": <1, F, F, T>,
    "name": <"transformToDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype.setParameter: {
    "length": <3, F, F, T>,
    "name": <"setParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype.getParameter: {
    "length": <2, F, F, T>,
    "name": <"getParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype.removeParameter: {
    "length": <2, F, F, T>,
    "name": <"removeParameter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype.clearParameters: {
    "length": <0, F, F, T>,
    "name": <"clearParameters", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XSLTProcessor.prototype.reset: {
    "length": <0, F, F, T>,
    "name": <"reset", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SharedWorker: {
    "length": <1, F, F, T>,
    "name": <"SharedWorker", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SharedWorker.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SharedWorker.prototype: {
    "port": <undefined, T, T, T>,
    "workerStart": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "constructor": <#Global.SharedWorker, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLSlotElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLSlotElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLSlotElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLSlotElement.prototype: {
    "name": <undefined, T, T, T>,
    "assignedNodes": <#Global.HTMLSlotElement.prototype.assignedNodes, T, T, T>,
    "constructor": <#Global.HTMLSlotElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLSlotElement.prototype.assignedNodes: {
    "length": <0, F, F, T>,
    "name": <"assignedNodes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSlotElement.prototype.[[Prototype]]: {
    "title": <undefined, T, T, T>,
    "lang": <undefined, T, T, T>,
    "translate": <undefined, T, T, T>,
    "dir": <undefined, T, T, T>,
    "dataset": <undefined, T, T, T>,
    "hidden": <undefined, T, T, T>,
    "tabIndex": <undefined, T, T, T>,
    "accessKey": <undefined, T, T, T>,
    "draggable": <undefined, T, T, T>,
    "spellcheck": <undefined, T, T, T>,
    "contentEditable": <undefined, T, T, T>,
    "isContentEditable": <undefined, T, T, T>,
    "offsetParent": <undefined, T, T, T>,
    "offsetTop": <undefined, T, T, T>,
    "offsetLeft": <undefined, T, T, T>,
    "offsetWidth": <undefined, T, T, T>,
    "offsetHeight": <undefined, T, T, T>,
    "style": <undefined, T, T, T>,
    "innerText": <undefined, T, T, T>,
    "outerText": <undefined, T, T, T>,
    "webkitdropzone": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "onblur": <undefined, T, T, T>,
    "oncancel": <undefined, T, T, T>,
    "oncanplay": <undefined, T, T, T>,
    "oncanplaythrough": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "onclick": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "oncontextmenu": <undefined, T, T, T>,
    "oncuechange": <undefined, T, T, T>,
    "ondblclick": <undefined, T, T, T>,
    "ondrag": <undefined, T, T, T>,
    "ondragend": <undefined, T, T, T>,
    "ondragenter": <undefined, T, T, T>,
    "ondragleave": <undefined, T, T, T>,
    "ondragover": <undefined, T, T, T>,
    "ondragstart": <undefined, T, T, T>,
    "ondrop": <undefined, T, T, T>,
    "ondurationchange": <undefined, T, T, T>,
    "onemptied": <undefined, T, T, T>,
    "onended": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onfocus": <undefined, T, T, T>,
    "oninput": <undefined, T, T, T>,
    "oninvalid": <undefined, T, T, T>,
    "onkeydown": <undefined, T, T, T>,
    "onkeypress": <undefined, T, T, T>,
    "onkeyup": <undefined, T, T, T>,
    "onload": <undefined, T, T, T>,
    "onloadeddata": <undefined, T, T, T>,
    "onloadedmetadata": <undefined, T, T, T>,
    "onloadstart": <undefined, T, T, T>,
    "onmousedown": <undefined, T, T, T>,
    "onmouseenter": <undefined, T, T, T>,
    "onmouseleave": <undefined, T, T, T>,
    "onmousemove": <undefined, T, T, T>,
    "onmouseout": <undefined, T, T, T>,
    "onmouseover": <undefined, T, T, T>,
    "onmouseup": <undefined, T, T, T>,
    "onmousewheel": <undefined, T, T, T>,
    "onpause": <undefined, T, T, T>,
    "onplay": <undefined, T, T, T>,
    "onplaying": <undefined, T, T, T>,
    "onprogress": <undefined, T, T, T>,
    "onratechange": <undefined, T, T, T>,
    "onreset": <undefined, T, T, T>,
    "onresize": <undefined, T, T, T>,
    "onscroll": <undefined, T, T, T>,
    "onseeked": <undefined, T, T, T>,
    "onseeking": <undefined, T, T, T>,
    "onselect": <undefined, T, T, T>,
    "onshow": <undefined, T, T, T>,
    "onstalled": <undefined, T, T, T>,
    "onsubmit": <undefined, T, T, T>,
    "onsuspend": <undefined, T, T, T>,
    "ontimeupdate": <undefined, T, T, T>,
    "ontoggle": <undefined, T, T, T>,
    "onvolumechange": <undefined, T, T, T>,
    "onwaiting": <undefined, T, T, T>,
    "click": <#Global.HTMLSlotElement.prototype.[[Prototype]].click, T, T, T>,
    "focus": <#Global.HTMLSlotElement.prototype.[[Prototype]].focus, T, T, T>,
    "blur": <#Global.HTMLSlotElement.prototype.[[Prototype]].blur, T, T, T>,
    "onauxclick": <undefined, T, T, T>,
    "onpointercancel": <undefined, T, T, T>,
    "onpointerdown": <undefined, T, T, T>,
    "onpointerenter": <undefined, T, T, T>,
    "onpointerleave": <undefined, T, T, T>,
    "onpointermove": <undefined, T, T, T>,
    "onpointerout": <undefined, T, T, T>,
    "onpointerover": <undefined, T, T, T>,
    "onpointerup": <undefined, T, T, T>,
    "constructor": <#Global.HTMLSlotElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.HTMLSlotElement.prototype.[[Prototype]].click: {
    "length": <0, F, F, T>,
    "name": <"click", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSlotElement.prototype.[[Prototype]].focus: {
    "length": <0, F, F, T>,
    "name": <"focus", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSlotElement.prototype.[[Prototype]].blur: {
    "length": <0, F, F, T>,
    "name": <"blur", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSlotElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"HTMLElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLSlotElement.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome: {
    "loadTimes": <#Global.chrome.loadTimes, T, T, T>,
    "csi": <#Global.chrome.csi, T, T, T>,
    "app": <#Global.chrome.app, T, T, T>,
    "webstore": <#Global.chrome.webstore, T, T, T>,
    "runtime": <#Global.chrome.runtime, T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.loadTimes: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.chrome.loadTimes.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.loadTimes.prototype: {
    "constructor": <#Global.chrome.loadTimes, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.csi: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.chrome.csi.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.csi.prototype: {
    "constructor": <#Global.chrome.csi, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.app: {
    "getIsInstalled": <#Global.chrome.app.getIsInstalled, T, T, T>,
    "getDetails": <#Global.chrome.app.getDetails, T, T, T>,
    "runningState": <#Global.chrome.app.runningState, T, T, T>,
    "isInstalled": <"false", T, T, T>,
    "installState": <#Global.chrome.app.installState, T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.app.getIsInstalled: {
    "length": <0, F, F, T>,
    "name": <"GetIsInstalled", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.chrome.app.getDetails: {
    "length": <0, F, F, T>,
    "name": <"GetDetails", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.chrome.app.runningState: {
    "length": <0, F, F, T>,
    "name": <"GetRunningState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.chrome.app.installState: {
    "length": <1, F, F, T>,
    "name": <"getInstallState", F, F, T>,
    "prototype": <#Global.chrome.app.installState.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.app.installState.prototype: {
    "constructor": <#Global.chrome.app.installState, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore: {
    "install": <#Global.chrome.webstore.install, T, T, T>,
    "onInstallStageChanged": <#Global.chrome.webstore.onInstallStageChanged, T, T, T>,
    "onDownloadProgress": <#Global.chrome.webstore.onDownloadProgress, T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.install: {
    "length": <3, F, F, T>,
    "name": <"install", F, F, T>,
    "prototype": <#Global.chrome.webstore.install.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.install.prototype: {
    "constructor": <#Global.chrome.webstore.install, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.chrome.webstore.onInstallStageChanged.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]]: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].constructor, T, T, T>,
    "addListener": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addListener, T, T, T>,
    "removeListener": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeListener, T, T, T>,
    "hasListener": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListener, T, T, T>,
    "hasListeners": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListeners, T, T, T>,
    "dispatchToListener": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatchToListener, T, T, T>,
    "dispatch": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatch, T, T, T>,
    "addRules": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addRules, T, T, T>,
    "removeRules": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeRules, T, T, T>,
    "getRules": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].getRules, T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"Event", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]], T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addListener: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addListener.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addListener.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addListener, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeListener: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeListener.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeListener.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeListener, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListener: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListener.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListener.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListener, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListeners: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListeners.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListeners.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].hasListeners, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatchToListener: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatchToListener.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatchToListener.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatchToListener, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatch: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatch.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatch.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].dispatch, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addRules: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addRules.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addRules.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].addRules, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeRules: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeRules.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeRules.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].removeRules, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].getRules: {
    "length": <0, F, F, T>,
    "name": <"", F, F, T>,
    "prototype": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].getRules.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.chrome.webstore.onInstallStageChanged.[[Prototype]].getRules.prototype: {
    "constructor": <#Global.chrome.webstore.onInstallStageChanged.[[Prototype]].getRules, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.webstore.onDownloadProgress: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.chrome.webstore.onInstallStageChanged.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.chrome.runtime: {
    "PlatformOs": <#Global.chrome.runtime.PlatformOs, T, T, T>,
    "PlatformArch": <#Global.chrome.runtime.PlatformArch, T, T, T>,
    "PlatformNaclArch": <#Global.chrome.runtime.PlatformNaclArch, T, T, T>,
    "RequestUpdateCheckStatus": <#Global.chrome.runtime.RequestUpdateCheckStatus, T, T, T>,
    "OnInstalledReason": <#Global.chrome.runtime.OnInstalledReason, T, T, T>,
    "OnRestartRequiredReason": <#Global.chrome.runtime.OnRestartRequiredReason, T, T, T>,
    "connect": <#Global.chrome.runtime.connect, T, T, T>,
    "sendMessage": <#Global.chrome.runtime.sendMessage, T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.runtime.PlatformOs: {
    "MAC": <"mac", T, T, T>,
    "WIN": <"win", T, T, T>,
    "ANDROID": <"android", T, T, T>,
    "CROS": <"cros", T, T, T>,
    "LINUX": <"linux", T, T, T>,
    "OPENBSD": <"openbsd", T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.runtime.PlatformArch: {
    "ARM": <"arm", T, T, T>,
    "X86_32": <"x86-32", T, T, T>,
    "X86_64": <"x86-64", T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.runtime.PlatformNaclArch: {
    "ARM": <"arm", T, T, T>,
    "X86_32": <"x86-32", T, T, T>,
    "X86_64": <"x86-64", T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.runtime.RequestUpdateCheckStatus: {
    "THROTTLED": <"throttled", T, T, T>,
    "NO_UPDATE": <"no_update", T, T, T>,
    "UPDATE_AVAILABLE": <"update_available", T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.runtime.OnInstalledReason: {
    "INSTALL": <"install", T, T, T>,
    "UPDATE": <"update", T, T, T>,
    "CHROME_UPDATE": <"chrome_update", T, T, T>,
    "SHARED_MODULE_UPDATE": <"shared_module_update", T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.runtime.OnRestartRequiredReason: {
    "APP_UPDATE": <"app_update", T, T, T>,
    "OS_UPDATE": <"os_update", T, T, T>,
    "PERIODIC": <"periodic", T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.chrome.runtime.connect: {
    "length": <0, F, F, T>,
    "name": <"bound ", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.chrome.runtime.sendMessage: {
    "length": <0, F, F, T>,
    "name": <"bound ", F, F, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console: {
    "debug": <#Global.console.debug, T, T, T>,
    "error": <#Global.console.error, T, T, T>,
    "info": <#Global.console.info, T, T, T>,
    "log": <#Global.console.log, T, T, T>,
    "warn": <#Global.console.warn, T, T, T>,
    "dir": <#Global.console.dir, T, T, T>,
    "dirxml": <#Global.console.dirxml, T, T, T>,
    "table": <#Global.console.table, T, T, T>,
    "trace": <#Global.console.trace, T, T, T>,
    "group": <#Global.console.group, T, T, T>,
    "groupCollapsed": <#Global.console.groupCollapsed, T, T, T>,
    "groupEnd": <#Global.console.groupEnd, T, T, T>,
    "clear": <#Global.console.clear, T, T, T>,
    "count": <#Global.console.count, T, T, T>,
    "assert": <#Global.console.assert, T, T, T>,
    "markTimeline": <#Global.console.markTimeline, T, T, T>,
    "profile": <#Global.console.profile, T, T, T>,
    "profileEnd": <#Global.console.profileEnd, T, T, T>,
    "timeline": <#Global.console.timeline, T, T, T>,
    "timelineEnd": <#Global.console.timelineEnd, T, T, T>,
    "time": <#Global.console.time, T, T, T>,
    "timeEnd": <#Global.console.timeEnd, T, T, T>,
    "timeStamp": <#Global.console.timeStamp, T, T, T>,
    "memory": <#Global.console.memory, T, T, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.console.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.console.debug: {
    "length": <0, F, F, T>,
    "name": <"debug", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.error: {
    "length": <0, F, F, T>,
    "name": <"error", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.info: {
    "length": <0, F, F, T>,
    "name": <"info", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.log: {
    "length": <0, F, F, T>,
    "name": <"log", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.warn: {
    "length": <0, F, F, T>,
    "name": <"warn", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.dir: {
    "length": <0, F, F, T>,
    "name": <"dir", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.dirxml: {
    "length": <0, F, F, T>,
    "name": <"dirxml", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.table: {
    "length": <0, F, F, T>,
    "name": <"table", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.trace: {
    "length": <0, F, F, T>,
    "name": <"trace", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.group: {
    "length": <0, F, F, T>,
    "name": <"group", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.groupCollapsed: {
    "length": <0, F, F, T>,
    "name": <"groupCollapsed", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.groupEnd: {
    "length": <0, F, F, T>,
    "name": <"groupEnd", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.count: {
    "length": <0, F, F, T>,
    "name": <"count", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.assert: {
    "length": <0, F, F, T>,
    "name": <"assert", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.markTimeline: {
    "length": <0, F, F, T>,
    "name": <"markTimeline", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.profile: {
    "length": <0, F, F, T>,
    "name": <"profile", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.profileEnd: {
    "length": <0, F, F, T>,
    "name": <"profileEnd", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.timeline: {
    "length": <0, F, F, T>,
    "name": <"timeline", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.timelineEnd: {
    "length": <0, F, F, T>,
    "name": <"timelineEnd", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.time: {
    "length": <0, F, F, T>,
    "name": <"time", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.timeEnd: {
    "length": <0, F, F, T>,
    "name": <"timeEnd", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.timeStamp: {
    "length": <0, F, F, T>,
    "name": <"timeStamp", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.console.memory: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.console.memory.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.console.memory.[[Prototype]]: {
    "totalJSHeapSize": <undefined, T, T, T>,
    "usedJSHeapSize": <undefined, T, T, T>,
    "jsHeapSizeLimit": <undefined, T, T, T>,
    "constructor": <#Global.console.memory.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.console.memory.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"MemoryInfo", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.console.memory.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.console.[[Prototype]]: {
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PointerEvent: {
    "length": <1, F, F, T>,
    "name": <"PointerEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PointerEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PointerEvent.prototype: {
    "pointerId": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "pressure": <undefined, T, T, T>,
    "tiltX": <undefined, T, T, T>,
    "tiltY": <undefined, T, T, T>,
    "pointerType": <undefined, T, T, T>,
    "isPrimary": <undefined, T, T, T>,
    "constructor": <#Global.PointerEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PointerEvent.prototype.[[Prototype]]: {
    "screenX": <undefined, T, T, T>,
    "screenY": <undefined, T, T, T>,
    "clientX": <undefined, T, T, T>,
    "clientY": <undefined, T, T, T>,
    "ctrlKey": <undefined, T, T, T>,
    "shiftKey": <undefined, T, T, T>,
    "altKey": <undefined, T, T, T>,
    "metaKey": <undefined, T, T, T>,
    "button": <undefined, T, T, T>,
    "buttons": <undefined, T, T, T>,
    "relatedTarget": <undefined, T, T, T>,
    "pageX": <undefined, T, T, T>,
    "pageY": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "offsetX": <undefined, T, T, T>,
    "offsetY": <undefined, T, T, T>,
    "movementX": <undefined, T, T, T>,
    "movementY": <undefined, T, T, T>,
    "fromElement": <undefined, T, T, T>,
    "toElement": <undefined, T, T, T>,
    "which": <undefined, T, T, T>,
    "layerX": <undefined, T, T, T>,
    "layerY": <undefined, T, T, T>,
    "getModifierState": <#Global.PointerEvent.prototype.[[Prototype]].getModifierState, T, T, T>,
    "initMouseEvent": <#Global.PointerEvent.prototype.[[Prototype]].initMouseEvent, T, T, T>,
    "constructor": <#Global.PointerEvent.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.PointerEvent.prototype.[[Prototype]].getModifierState: {
    "length": <1, F, F, T>,
    "name": <"getModifierState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PointerEvent.prototype.[[Prototype]].initMouseEvent: {
    "length": <0, F, F, T>,
    "name": <"initMouseEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PointerEvent.prototype.[[Prototype]].constructor: {
    "length": <1, F, F, T>,
    "name": <"MouseEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PointerEvent.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]]: {
    "length": <1, F, F, T>,
    "name": <"UIEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype: {
    "view": <undefined, T, T, T>,
    "detail": <undefined, T, T, T>,
    "sourceCapabilities": <undefined, T, T, T>,
    "which": <undefined, T, T, T>,
    "initUIEvent": <#Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype.initUIEvent, T, T, T>,
    "constructor": <#Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]], T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype.initUIEvent: {
    "length": <0, F, F, T>,
    "name": <"initUIEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceObserverEntryList: {
    "length": <0, F, F, T>,
    "name": <"PerformanceObserverEntryList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceObserverEntryList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceObserverEntryList.prototype: {
    "getEntries": <#Global.PerformanceObserverEntryList.prototype.getEntries, T, T, T>,
    "getEntriesByType": <#Global.PerformanceObserverEntryList.prototype.getEntriesByType, T, T, T>,
    "getEntriesByName": <#Global.PerformanceObserverEntryList.prototype.getEntriesByName, T, T, T>,
    "constructor": <#Global.PerformanceObserverEntryList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PerformanceObserverEntryList.prototype.getEntries: {
    "length": <0, F, F, T>,
    "name": <"getEntries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceObserverEntryList.prototype.getEntriesByType: {
    "length": <1, F, F, T>,
    "name": <"getEntriesByType", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceObserverEntryList.prototype.getEntriesByName: {
    "length": <1, F, F, T>,
    "name": <"getEntriesByName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceObserver: {
    "length": <1, F, F, T>,
    "name": <"PerformanceObserver", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceObserver.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceObserver.prototype: {
    "observe": <#Global.PerformanceObserver.prototype.observe, T, T, T>,
    "disconnect": <#Global.PerformanceObserver.prototype.disconnect, T, T, T>,
    "constructor": <#Global.PerformanceObserver, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PerformanceObserver.prototype.observe: {
    "length": <1, F, F, T>,
    "name": <"observe", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceObserver.prototype.disconnect: {
    "length": <0, F, F, T>,
    "name": <"disconnect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IntersectionObserverEntry: {
    "length": <0, F, F, T>,
    "name": <"IntersectionObserverEntry", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IntersectionObserverEntry.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IntersectionObserverEntry.prototype: {
    "time": <undefined, T, T, T>,
    "rootBounds": <undefined, T, T, T>,
    "boundingClientRect": <undefined, T, T, T>,
    "intersectionRect": <undefined, T, T, T>,
    "intersectionRatio": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "constructor": <#Global.IntersectionObserverEntry, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IntersectionObserver: {
    "length": <1, F, F, T>,
    "name": <"IntersectionObserver", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IntersectionObserver.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IntersectionObserver.prototype: {
    "root": <undefined, T, T, T>,
    "rootMargin": <undefined, T, T, T>,
    "thresholds": <undefined, T, T, T>,
    "observe": <#Global.IntersectionObserver.prototype.observe, T, T, T>,
    "unobserve": <#Global.IntersectionObserver.prototype.unobserve, T, T, T>,
    "disconnect": <#Global.IntersectionObserver.prototype.disconnect, T, T, T>,
    "takeRecords": <#Global.IntersectionObserver.prototype.takeRecords, T, T, T>,
    "constructor": <#Global.IntersectionObserver, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IntersectionObserver.prototype.observe: {
    "length": <1, F, F, T>,
    "name": <"observe", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IntersectionObserver.prototype.unobserve: {
    "length": <1, F, F, T>,
    "name": <"unobserve", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IntersectionObserver.prototype.disconnect: {
    "length": <0, F, F, T>,
    "name": <"disconnect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IntersectionObserver.prototype.takeRecords: {
    "length": <0, F, F, T>,
    "name": <"takeRecords", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document: {
    "length": <0, F, F, T>,
    "name": <"Document", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Document.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Document.prototype: {
    "implementation": <undefined, T, T, T>,
    "URL": <undefined, T, T, T>,
    "documentURI": <undefined, T, T, T>,
    "origin": <undefined, T, T, T>,
    "compatMode": <undefined, T, T, T>,
    "characterSet": <undefined, T, T, T>,
    "charset": <undefined, T, T, T>,
    "inputEncoding": <undefined, T, T, T>,
    "contentType": <undefined, T, T, T>,
    "doctype": <undefined, T, T, T>,
    "documentElement": <undefined, T, T, T>,
    "xmlEncoding": <undefined, T, T, T>,
    "xmlVersion": <undefined, T, T, T>,
    "xmlStandalone": <undefined, T, T, T>,
    "domain": <undefined, T, T, T>,
    "referrer": <undefined, T, T, T>,
    "cookie": <undefined, T, T, T>,
    "lastModified": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "title": <undefined, T, T, T>,
    "dir": <undefined, T, T, T>,
    "body": <undefined, T, T, T>,
    "head": <undefined, T, T, T>,
    "images": <undefined, T, T, T>,
    "embeds": <undefined, T, T, T>,
    "plugins": <undefined, T, T, T>,
    "links": <undefined, T, T, T>,
    "forms": <undefined, T, T, T>,
    "scripts": <undefined, T, T, T>,
    "currentScript": <undefined, T, T, T>,
    "defaultView": <undefined, T, T, T>,
    "designMode": <undefined, T, T, T>,
    "onreadystatechange": <undefined, T, T, T>,
    "anchors": <undefined, T, T, T>,
    "applets": <undefined, T, T, T>,
    "selectedStylesheetSet": <undefined, T, T, T>,
    "preferredStylesheetSet": <undefined, T, T, T>,
    "scrollingElement": <undefined, T, T, T>,
    "onpointerlockchange": <undefined, T, T, T>,
    "onpointerlockerror": <undefined, T, T, T>,
    "hidden": <undefined, T, T, T>,
    "visibilityState": <undefined, T, T, T>,
    "webkitVisibilityState": <undefined, T, T, T>,
    "webkitHidden": <undefined, T, T, T>,
    "onbeforecopy": <undefined, T, T, T>,
    "onbeforecut": <undefined, T, T, T>,
    "onbeforepaste": <undefined, T, T, T>,
    "oncopy": <undefined, T, T, T>,
    "oncut": <undefined, T, T, T>,
    "onpaste": <undefined, T, T, T>,
    "onsearch": <undefined, T, T, T>,
    "onselectionchange": <undefined, T, T, T>,
    "onselectstart": <undefined, T, T, T>,
    "onwheel": <undefined, T, T, T>,
    "fonts": <undefined, T, T, T>,
    "webkitIsFullScreen": <undefined, T, T, T>,
    "webkitCurrentFullScreenElement": <undefined, T, T, T>,
    "webkitFullscreenEnabled": <undefined, T, T, T>,
    "webkitFullscreenElement": <undefined, T, T, T>,
    "onwebkitfullscreenchange": <undefined, T, T, T>,
    "onwebkitfullscreenerror": <undefined, T, T, T>,
    "activeElement": <undefined, T, T, T>,
    "styleSheets": <undefined, T, T, T>,
    "pointerLockElement": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "onblur": <undefined, T, T, T>,
    "oncancel": <undefined, T, T, T>,
    "oncanplay": <undefined, T, T, T>,
    "oncanplaythrough": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "onclick": <undefined, T, T, T>,
    "onclose": <undefined, T, T, T>,
    "oncontextmenu": <undefined, T, T, T>,
    "oncuechange": <undefined, T, T, T>,
    "ondblclick": <undefined, T, T, T>,
    "ondrag": <undefined, T, T, T>,
    "ondragend": <undefined, T, T, T>,
    "ondragenter": <undefined, T, T, T>,
    "ondragleave": <undefined, T, T, T>,
    "ondragover": <undefined, T, T, T>,
    "ondragstart": <undefined, T, T, T>,
    "ondrop": <undefined, T, T, T>,
    "ondurationchange": <undefined, T, T, T>,
    "onemptied": <undefined, T, T, T>,
    "onended": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onfocus": <undefined, T, T, T>,
    "oninput": <undefined, T, T, T>,
    "oninvalid": <undefined, T, T, T>,
    "onkeydown": <undefined, T, T, T>,
    "onkeypress": <undefined, T, T, T>,
    "onkeyup": <undefined, T, T, T>,
    "onload": <undefined, T, T, T>,
    "onloadeddata": <undefined, T, T, T>,
    "onloadedmetadata": <undefined, T, T, T>,
    "onloadstart": <undefined, T, T, T>,
    "onmousedown": <undefined, T, T, T>,
    "onmouseenter": <undefined, T, T, T>,
    "onmouseleave": <undefined, T, T, T>,
    "onmousemove": <undefined, T, T, T>,
    "onmouseout": <undefined, T, T, T>,
    "onmouseover": <undefined, T, T, T>,
    "onmouseup": <undefined, T, T, T>,
    "onmousewheel": <undefined, T, T, T>,
    "onpause": <undefined, T, T, T>,
    "onplay": <undefined, T, T, T>,
    "onplaying": <undefined, T, T, T>,
    "onprogress": <undefined, T, T, T>,
    "onratechange": <undefined, T, T, T>,
    "onreset": <undefined, T, T, T>,
    "onresize": <undefined, T, T, T>,
    "onscroll": <undefined, T, T, T>,
    "onseeked": <undefined, T, T, T>,
    "onseeking": <undefined, T, T, T>,
    "onselect": <undefined, T, T, T>,
    "onshow": <undefined, T, T, T>,
    "onstalled": <undefined, T, T, T>,
    "onsubmit": <undefined, T, T, T>,
    "onsuspend": <undefined, T, T, T>,
    "ontimeupdate": <undefined, T, T, T>,
    "ontoggle": <undefined, T, T, T>,
    "onvolumechange": <undefined, T, T, T>,
    "onwaiting": <undefined, T, T, T>,
    "children": <undefined, T, T, T>,
    "firstElementChild": <undefined, T, T, T>,
    "lastElementChild": <undefined, T, T, T>,
    "childElementCount": <undefined, T, T, T>,
    "rootElement": <undefined, T, T, T>,
    "getElementsByTagName": <#Document.prototype.getElementsByTagName, T, T, T>,
    "getElementsByTagNameNS": <#Document.prototype.getElementsByTagNameNS, T, T, T>,
    "getElementsByClassName": <#Document.prototype.getElementsByClassName, T, T, T>,
    "createDocumentFragment": <#Document.prototype.createDocumentFragment, T, T, T>,
    "createTextNode": <#Document.prototype.createTextNode, T, T, T>,
    "createCDATASection": <#Document.prototype.createCDATASection, T, T, T>,
    "createComment": <#Document.prototype.createComment, T, T, T>,
    "createProcessingInstruction": <#Document.prototype.createProcessingInstruction, T, T, T>,
    "importNode": <#Document.prototype.importNode, T, T, T>,
    "adoptNode": <#Document.prototype.adoptNode, T, T, T>,
    "createAttribute": <#Document.prototype.createAttribute, T, T, T>,
    "createAttributeNS": <#Document.prototype.createAttributeNS, T, T, T>,
    "createEvent": <#Document.prototype.createEvent, T, T, T>,
    "createRange": <#Document.prototype.createRange, T, T, T>,
    "createNodeIterator": <#Document.prototype.createNodeIterator, T, T, T>,
    "createTreeWalker": <#Document.prototype.createTreeWalker, T, T, T>,
    "getElementsByName": <#Document.prototype.getElementsByName, T, T, T>,
    "open": <#Document.prototype.open, T, T, T>,
    "close": <#Document.prototype.close, T, T, T>,
    "write": <#Document.prototype.write, T, T, T>,
    "writeln": <#Document.prototype.writeln, T, T, T>,
    "hasFocus": <#Document.prototype.hasFocus, T, T, T>,
    "execCommand": <#Document.prototype.execCommand, T, T, T>,
    "queryCommandEnabled": <#Document.prototype.queryCommandEnabled, T, T, T>,
    "queryCommandIndeterm": <#Document.prototype.queryCommandIndeterm, T, T, T>,
    "queryCommandState": <#Document.prototype.queryCommandState, T, T, T>,
    "queryCommandSupported": <#Document.prototype.queryCommandSupported, T, T, T>,
    "queryCommandValue": <#Document.prototype.queryCommandValue, T, T, T>,
    "exitPointerLock": <#Document.prototype.exitPointerLock, T, T, T>,
    "registerElement": <#Document.prototype.registerElement, T, T, T>,
    "createElement": <#Document.prototype.createElement, T, T, T>,
    "createElementNS": <#Document.prototype.createElementNS, T, T, T>,
    "caretRangeFromPoint": <#Document.prototype.caretRangeFromPoint, T, T, T>,
    "webkitCancelFullScreen": <#Document.prototype.webkitCancelFullScreen, T, T, T>,
    "webkitExitFullscreen": <#Document.prototype.webkitExitFullscreen, T, T, T>,
    "getSelection": <#Document.prototype.getSelection, T, T, T>,
    "elementFromPoint": <#Document.prototype.elementFromPoint, T, T, T>,
    "elementsFromPoint": <#Document.prototype.elementsFromPoint, T, T, T>,
    "getElementById": <#Document.prototype.getElementById, T, T, T>,
    "querySelector": <#Document.prototype.querySelector, T, T, T>,
    "querySelectorAll": <#Document.prototype.querySelectorAll, T, T, T>,
    "createExpression": <#Document.prototype.createExpression, T, T, T>,
    "createNSResolver": <#Document.prototype.createNSResolver, T, T, T>,
    "evaluate": <#Document.prototype.evaluate, T, T, T>,
    "onauxclick": <undefined, T, T, T>,
    "onpointercancel": <undefined, T, T, T>,
    "onpointerdown": <undefined, T, T, T>,
    "onpointerenter": <undefined, T, T, T>,
    "onpointerleave": <undefined, T, T, T>,
    "onpointermove": <undefined, T, T, T>,
    "onpointerout": <undefined, T, T, T>,
    "onpointerover": <undefined, T, T, T>,
    "onpointerup": <undefined, T, T, T>,
    "prepend": <#Document.prototype.prepend, T, T, T>,
    "append": <#Document.prototype.append, T, T, T>,
    "constructor": <#Document, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Document.prototype.getElementsByTagName: {
    "length": <1, F, F, T>,
    "name": <"getElementsByTagName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.getElementsByTagNameNS: {
    "length": <2, F, F, T>,
    "name": <"getElementsByTagNameNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.getElementsByClassName: {
    "length": <1, F, F, T>,
    "name": <"getElementsByClassName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createDocumentFragment: {
    "length": <0, F, F, T>,
    "name": <"createDocumentFragment", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createTextNode: {
    "length": <1, F, F, T>,
    "name": <"createTextNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createCDATASection: {
    "length": <1, F, F, T>,
    "name": <"createCDATASection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createComment: {
    "length": <1, F, F, T>,
    "name": <"createComment", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createProcessingInstruction: {
    "length": <2, F, F, T>,
    "name": <"createProcessingInstruction", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.importNode: {
    "length": <1, F, F, T>,
    "name": <"importNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.adoptNode: {
    "length": <1, F, F, T>,
    "name": <"adoptNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createAttribute: {
    "length": <1, F, F, T>,
    "name": <"createAttribute", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createAttributeNS: {
    "length": <2, F, F, T>,
    "name": <"createAttributeNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createEvent: {
    "length": <1, F, F, T>,
    "name": <"createEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createRange: {
    "length": <0, F, F, T>,
    "name": <"createRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createNodeIterator: {
    "length": <1, F, F, T>,
    "name": <"createNodeIterator", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createTreeWalker: {
    "length": <1, F, F, T>,
    "name": <"createTreeWalker", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.getElementsByName: {
    "length": <1, F, F, T>,
    "name": <"getElementsByName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.open: {
    "length": <0, F, F, T>,
    "name": <"open", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.write: {
    "length": <0, F, F, T>,
    "name": <"write", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.writeln: {
    "length": <0, F, F, T>,
    "name": <"writeln", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.hasFocus: {
    "length": <0, F, F, T>,
    "name": <"hasFocus", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.execCommand: {
    "length": <1, F, F, T>,
    "name": <"execCommand", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.queryCommandEnabled: {
    "length": <1, F, F, T>,
    "name": <"queryCommandEnabled", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.queryCommandIndeterm: {
    "length": <1, F, F, T>,
    "name": <"queryCommandIndeterm", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.queryCommandState: {
    "length": <1, F, F, T>,
    "name": <"queryCommandState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.queryCommandSupported: {
    "length": <1, F, F, T>,
    "name": <"queryCommandSupported", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.queryCommandValue: {
    "length": <1, F, F, T>,
    "name": <"queryCommandValue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.exitPointerLock: {
    "length": <0, F, F, T>,
    "name": <"exitPointerLock", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.registerElement: {
    "length": <1, F, F, T>,
    "name": <"registerElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createElement: {
    "length": <1, F, F, T>,
    "name": <"createElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createElementNS: {
    "length": <2, F, F, T>,
    "name": <"createElementNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.caretRangeFromPoint: {
    "length": <0, F, F, T>,
    "name": <"caretRangeFromPoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.webkitCancelFullScreen: {
    "length": <0, F, F, T>,
    "name": <"webkitCancelFullScreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.webkitExitFullscreen: {
    "length": <0, F, F, T>,
    "name": <"webkitExitFullscreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.getSelection: {
    "length": <0, F, F, T>,
    "name": <"getSelection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.elementFromPoint: {
    "length": <2, F, F, T>,
    "name": <"elementFromPoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.elementsFromPoint: {
    "length": <2, F, F, T>,
    "name": <"elementsFromPoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.getElementById: {
    "length": <1, F, F, T>,
    "name": <"getElementById", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.querySelector: {
    "length": <1, F, F, T>,
    "name": <"querySelector", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.querySelectorAll: {
    "length": <1, F, F, T>,
    "name": <"querySelectorAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createExpression: {
    "length": <1, F, F, T>,
    "name": <"createExpression", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.createNSResolver: {
    "length": <1, F, F, T>,
    "name": <"createNSResolver", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.evaluate: {
    "length": <2, F, F, T>,
    "name": <"evaluate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.prepend: {
    "length": <0, F, F, T>,
    "name": <"prepend", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Document.prototype.append: {
    "length": <0, F, F, T>,
    "name": <"append", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CustomElementRegistry: {
    "length": <0, F, F, T>,
    "name": <"CustomElementRegistry", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CustomElementRegistry.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CustomElementRegistry.prototype: {
    "define": <#Global.CustomElementRegistry.prototype.define, T, T, T>,
    "get": <#Global.CustomElementRegistry.prototype.get, T, T, T>,
    "whenDefined": <#Global.CustomElementRegistry.prototype.whenDefined, T, T, T>,
    "constructor": <#Global.CustomElementRegistry, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CustomElementRegistry.prototype.define: {
    "length": <2, F, F, T>,
    "name": <"define", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CustomElementRegistry.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CustomElementRegistry.prototype.whenDefined: {
    "length": <1, F, F, T>,
    "name": <"whenDefined", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.customElements: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.CustomElementRegistry.prototype,
    [[Class]]: "Object"
  },
  #Global.XPathResult: {
    "length": <0, F, F, T>,
    "name": <"XPathResult", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XPathResult.prototype, F, F, F>,
    "ANY_TYPE": <0, F, T, F>,
    "NUMBER_TYPE": <1, F, T, F>,
    "STRING_TYPE": <2, F, T, F>,
    "BOOLEAN_TYPE": <3, F, T, F>,
    "UNORDERED_NODE_ITERATOR_TYPE": <4, F, T, F>,
    "ORDERED_NODE_ITERATOR_TYPE": <5, F, T, F>,
    "UNORDERED_NODE_SNAPSHOT_TYPE": <6, F, T, F>,
    "ORDERED_NODE_SNAPSHOT_TYPE": <7, F, T, F>,
    "ANY_UNORDERED_NODE_TYPE": <8, F, T, F>,
    "FIRST_ORDERED_NODE_TYPE": <9, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XPathResult.prototype: {
    "ANY_TYPE": <0, F, T, F>,
    "NUMBER_TYPE": <1, F, T, F>,
    "STRING_TYPE": <2, F, T, F>,
    "BOOLEAN_TYPE": <3, F, T, F>,
    "UNORDERED_NODE_ITERATOR_TYPE": <4, F, T, F>,
    "ORDERED_NODE_ITERATOR_TYPE": <5, F, T, F>,
    "UNORDERED_NODE_SNAPSHOT_TYPE": <6, F, T, F>,
    "ORDERED_NODE_SNAPSHOT_TYPE": <7, F, T, F>,
    "ANY_UNORDERED_NODE_TYPE": <8, F, T, F>,
    "FIRST_ORDERED_NODE_TYPE": <9, F, T, F>,
    "resultType": <undefined, T, T, T>,
    "numberValue": <undefined, T, T, T>,
    "stringValue": <undefined, T, T, T>,
    "booleanValue": <undefined, T, T, T>,
    "singleNodeValue": <undefined, T, T, T>,
    "invalidIteratorState": <undefined, T, T, T>,
    "snapshotLength": <undefined, T, T, T>,
    "iterateNext": <#Global.XPathResult.prototype.iterateNext, T, T, T>,
    "snapshotItem": <#Global.XPathResult.prototype.snapshotItem, T, T, T>,
    "constructor": <#Global.XPathResult, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.XPathResult.prototype.iterateNext: {
    "length": <0, F, F, T>,
    "name": <"iterateNext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XPathResult.prototype.snapshotItem: {
    "length": <1, F, F, T>,
    "name": <"snapshotItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XPathExpression: {
    "length": <0, F, F, T>,
    "name": <"XPathExpression", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XPathExpression.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XPathExpression.prototype: {
    "evaluate": <#Global.XPathExpression.prototype.evaluate, T, T, T>,
    "constructor": <#Global.XPathExpression, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.XPathExpression.prototype.evaluate: {
    "length": <1, F, F, T>,
    "name": <"evaluate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XPathEvaluator: {
    "length": <0, F, F, T>,
    "name": <"XPathEvaluator", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XPathEvaluator.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XPathEvaluator.prototype: {
    "createExpression": <#Global.XPathEvaluator.prototype.createExpression, T, T, T>,
    "createNSResolver": <#Global.XPathEvaluator.prototype.createNSResolver, T, T, T>,
    "evaluate": <#Global.XPathEvaluator.prototype.evaluate, T, T, T>,
    "constructor": <#Global.XPathEvaluator, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.XPathEvaluator.prototype.createExpression: {
    "length": <1, F, F, T>,
    "name": <"createExpression", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XPathEvaluator.prototype.createNSResolver: {
    "length": <1, F, F, T>,
    "name": <"createNSResolver", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XPathEvaluator.prototype.evaluate: {
    "length": <2, F, F, T>,
    "name": <"evaluate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLSerializer: {
    "length": <0, F, F, T>,
    "name": <"XMLSerializer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XMLSerializer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XMLSerializer.prototype: {
    "serializeToString": <#Global.XMLSerializer.prototype.serializeToString, T, T, T>,
    "constructor": <#Global.XMLSerializer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.XMLSerializer.prototype.serializeToString: {
    "length": <1, F, F, T>,
    "name": <"serializeToString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequestUpload: {
    "length": <0, F, F, T>,
    "name": <"XMLHttpRequestUpload", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XMLHttpRequestUpload.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.XMLHttpRequestUpload.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequestUpload.prototype: {
    "constructor": <#Global.XMLHttpRequestUpload, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.XMLHttpRequestUpload.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.XMLHttpRequestUpload.prototype.[[Prototype]]: {
    "onloadstart": <undefined, T, T, T>,
    "onprogress": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onload": <undefined, T, T, T>,
    "ontimeout": <undefined, T, T, T>,
    "onloadend": <undefined, T, T, T>,
    "constructor": <#Global.XMLHttpRequestUpload.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.XMLHttpRequestUpload.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"XMLHttpRequestEventTarget", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XMLHttpRequestUpload.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest: {
    "length": <0, F, F, T>,
    "name": <"XMLHttpRequest", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XMLHttpRequest.prototype, F, F, F>,
    "UNSENT": <0, F, T, F>,
    "OPENED": <1, F, T, F>,
    "HEADERS_RECEIVED": <2, F, T, F>,
    "LOADING": <3, F, T, F>,
    "DONE": <4, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.XMLHttpRequestUpload.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest.prototype: {
    "UNSENT": <0, F, T, F>,
    "OPENED": <1, F, T, F>,
    "HEADERS_RECEIVED": <2, F, T, F>,
    "LOADING": <3, F, T, F>,
    "DONE": <4, F, T, F>,
    "onreadystatechange": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "timeout": <undefined, T, T, T>,
    "withCredentials": <undefined, T, T, T>,
    "upload": <undefined, T, T, T>,
    "responseURL": <undefined, T, T, T>,
    "status": <undefined, T, T, T>,
    "statusText": <undefined, T, T, T>,
    "responseType": <undefined, T, T, T>,
    "response": <undefined, T, T, T>,
    "responseText": <undefined, T, T, T>,
    "responseXML": <undefined, T, T, T>,
    "open": <#Global.XMLHttpRequest.prototype.open, T, T, T>,
    "setRequestHeader": <#Global.XMLHttpRequest.prototype.setRequestHeader, T, T, T>,
    "send": <#Global.XMLHttpRequest.prototype.send, T, T, T>,
    "abort": <#Global.XMLHttpRequest.prototype.abort, T, T, T>,
    "getResponseHeader": <#Global.XMLHttpRequest.prototype.getResponseHeader, T, T, T>,
    "getAllResponseHeaders": <#Global.XMLHttpRequest.prototype.getAllResponseHeaders, T, T, T>,
    "overrideMimeType": <#Global.XMLHttpRequest.prototype.overrideMimeType, T, T, T>,
    "constructor": <#Global.XMLHttpRequest, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.XMLHttpRequestUpload.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.XMLHttpRequest.prototype.open: {
    "length": <2, F, F, T>,
    "name": <"open", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest.prototype.setRequestHeader: {
    "length": <2, F, F, T>,
    "name": <"setRequestHeader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest.prototype.send: {
    "length": <0, F, F, T>,
    "name": <"send", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest.prototype.abort: {
    "length": <0, F, F, T>,
    "name": <"abort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest.prototype.getResponseHeader: {
    "length": <1, F, F, T>,
    "name": <"getResponseHeader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest.prototype.getAllResponseHeaders: {
    "length": <0, F, F, T>,
    "name": <"getAllResponseHeaders", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLHttpRequest.prototype.overrideMimeType: {
    "length": <1, F, F, T>,
    "name": <"overrideMimeType", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.XMLDocument: {
    "length": <0, F, F, T>,
    "name": <"XMLDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.XMLDocument.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Document,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.XMLDocument.prototype: {
    "constructor": <#Global.XMLDocument, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Document.prototype,
    [[Class]]: "Object"
  },
  #Global.Worker: {
    "length": <1, F, F, T>,
    "name": <"Worker", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Worker.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Worker.prototype: {
    "onmessage": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "terminate": <#Global.Worker.prototype.terminate, T, T, T>,
    "postMessage": <#Global.Worker.prototype.postMessage, T, T, T>,
    "constructor": <#Global.Worker, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Worker.prototype.terminate: {
    "length": <0, F, F, T>,
    "name": <"terminate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Worker.prototype.postMessage: {
    "length": <1, F, F, T>,
    "name": <"postMessage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Window: {
    "length": <0, F, F, T>,
    "name": <"Window", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Window.prototype, F, F, F>,
    "TEMPORARY": <0, F, T, F>,
    "PERSISTENT": <1, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Window.prototype: {
    "TEMPORARY": <0, F, T, F>,
    "PERSISTENT": <1, F, T, F>,
    "constructor": <#Global.Window, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Window.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Window.prototype.[[Prototype]]: {
    "constructor": <#Global.Window.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Window.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"WindowProperties", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Window.prototype.[[Prototype]], T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WheelEvent: {
    "length": <1, F, F, T>,
    "name": <"WheelEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WheelEvent.prototype, F, F, F>,
    "DOM_DELTA_PIXEL": <0, F, T, F>,
    "DOM_DELTA_LINE": <1, F, T, F>,
    "DOM_DELTA_PAGE": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WheelEvent.prototype: {
    "DOM_DELTA_PIXEL": <0, F, T, F>,
    "DOM_DELTA_LINE": <1, F, T, F>,
    "DOM_DELTA_PAGE": <2, F, T, F>,
    "deltaX": <undefined, T, T, T>,
    "deltaY": <undefined, T, T, T>,
    "deltaZ": <undefined, T, T, T>,
    "deltaMode": <undefined, T, T, T>,
    "wheelDeltaX": <undefined, T, T, T>,
    "wheelDeltaY": <undefined, T, T, T>,
    "wheelDelta": <undefined, T, T, T>,
    "constructor": <#Global.WheelEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.WebKitCSSMatrix: {
    "length": <0, F, F, T>,
    "name": <"WebKitCSSMatrix", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.WebKitCSSMatrix.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype: {
    "a": <undefined, T, T, T>,
    "b": <undefined, T, T, T>,
    "c": <undefined, T, T, T>,
    "d": <undefined, T, T, T>,
    "e": <undefined, T, T, T>,
    "f": <undefined, T, T, T>,
    "m11": <undefined, T, T, T>,
    "m12": <undefined, T, T, T>,
    "m13": <undefined, T, T, T>,
    "m14": <undefined, T, T, T>,
    "m21": <undefined, T, T, T>,
    "m22": <undefined, T, T, T>,
    "m23": <undefined, T, T, T>,
    "m24": <undefined, T, T, T>,
    "m31": <undefined, T, T, T>,
    "m32": <undefined, T, T, T>,
    "m33": <undefined, T, T, T>,
    "m34": <undefined, T, T, T>,
    "m41": <undefined, T, T, T>,
    "m42": <undefined, T, T, T>,
    "m43": <undefined, T, T, T>,
    "m44": <undefined, T, T, T>,
    "setMatrixValue": <#Global.WebKitCSSMatrix.prototype.setMatrixValue, T, T, T>,
    "multiply": <#Global.WebKitCSSMatrix.prototype.multiply, T, T, T>,
    "inverse": <#Global.WebKitCSSMatrix.prototype.inverse, T, T, T>,
    "translate": <#Global.WebKitCSSMatrix.prototype.translate, T, T, T>,
    "scale": <#Global.WebKitCSSMatrix.prototype.scale, T, T, T>,
    "rotate": <#Global.WebKitCSSMatrix.prototype.rotate, T, T, T>,
    "rotateAxisAngle": <#Global.WebKitCSSMatrix.prototype.rotateAxisAngle, T, T, T>,
    "skewX": <#Global.WebKitCSSMatrix.prototype.skewX, T, T, T>,
    "skewY": <#Global.WebKitCSSMatrix.prototype.skewY, T, T, T>,
    "toString": <#Global.WebKitCSSMatrix.prototype.toString, T, F, T>,
    "constructor": <#Global.WebKitCSSMatrix, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.WebKitCSSMatrix.prototype.setMatrixValue: {
    "length": <0, F, F, T>,
    "name": <"setMatrixValue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.multiply: {
    "length": <0, F, F, T>,
    "name": <"multiply", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.inverse: {
    "length": <0, F, F, T>,
    "name": <"inverse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.translate: {
    "length": <0, F, F, T>,
    "name": <"translate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.scale: {
    "length": <0, F, F, T>,
    "name": <"scale", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.rotate: {
    "length": <0, F, F, T>,
    "name": <"rotate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.rotateAxisAngle: {
    "length": <0, F, F, T>,
    "name": <"rotateAxisAngle", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.skewX: {
    "length": <0, F, F, T>,
    "name": <"skewX", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.skewY: {
    "length": <0, F, F, T>,
    "name": <"skewY", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.WebKitCSSMatrix.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ValidityState: {
    "length": <0, F, F, T>,
    "name": <"ValidityState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ValidityState.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ValidityState.prototype: {
    "valueMissing": <undefined, T, T, T>,
    "typeMismatch": <undefined, T, T, T>,
    "patternMismatch": <undefined, T, T, T>,
    "tooLong": <undefined, T, T, T>,
    "tooShort": <undefined, T, T, T>,
    "rangeUnderflow": <undefined, T, T, T>,
    "rangeOverflow": <undefined, T, T, T>,
    "stepMismatch": <undefined, T, T, T>,
    "badInput": <undefined, T, T, T>,
    "customError": <undefined, T, T, T>,
    "valid": <undefined, T, T, T>,
    "constructor": <#Global.ValidityState, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.VTTCue: {
    "length": <3, F, F, T>,
    "name": <"VTTCue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.VTTCue.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.VTTCue.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.VTTCue.prototype: {
    "vertical": <undefined, T, T, T>,
    "snapToLines": <undefined, T, T, T>,
    "line": <undefined, T, T, T>,
    "position": <undefined, T, T, T>,
    "size": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "text": <undefined, T, T, T>,
    "getCueAsHTML": <#Global.VTTCue.prototype.getCueAsHTML, T, T, T>,
    "constructor": <#Global.VTTCue, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.VTTCue.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.VTTCue.prototype.getCueAsHTML: {
    "length": <0, F, F, T>,
    "name": <"getCueAsHTML", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.VTTCue.prototype.[[Prototype]]: {
    "track": <undefined, T, T, T>,
    "id": <undefined, T, T, T>,
    "startTime": <undefined, T, T, T>,
    "endTime": <undefined, T, T, T>,
    "pauseOnExit": <undefined, T, T, T>,
    "onenter": <undefined, T, T, T>,
    "onexit": <undefined, T, T, T>,
    "constructor": <#Global.VTTCue.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.VTTCue.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"TextTrackCue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.VTTCue.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams: {
    "length": <0, F, F, T>,
    "name": <"URLSearchParams", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.URLSearchParams.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype: {
    "append": <#Global.URLSearchParams.prototype.append, T, T, T>,
    "delete": <#Global.URLSearchParams.prototype.delete, T, T, T>,
    "get": <#Global.URLSearchParams.prototype.get, T, T, T>,
    "getAll": <#Global.URLSearchParams.prototype.getAll, T, T, T>,
    "has": <#Global.URLSearchParams.prototype.has, T, T, T>,
    "set": <#Global.URLSearchParams.prototype.set, T, T, T>,
    "keys": <#Global.URLSearchParams.prototype.keys, T, T, T>,
    "values": <#Global.URLSearchParams.prototype.values, T, T, T>,
    "entries": <#Global.URLSearchParams.prototype.entries, T, T, T>,
    "forEach": <#Global.URLSearchParams.prototype.forEach, T, T, T>,
    "toString": <#Global.URLSearchParams.prototype.toString, T, T, T>,
    "constructor": <#Global.URLSearchParams, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.URLSearchParams.prototype.append: {
    "length": <2, F, F, T>,
    "name": <"append", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.getAll: {
    "length": <1, F, F, T>,
    "name": <"getAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.set: {
    "length": <2, F, F, T>,
    "name": <"set", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URLSearchParams.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URL: {
    "length": <1, F, F, T>,
    "name": <"URL", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.URL.prototype, F, F, F>,
    "revokeObjectURL": <#Global.URL.revokeObjectURL, T, T, T>,
    "createObjectURL": <#Global.URL.createObjectURL, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.URL.prototype: {
    "href": <undefined, T, T, T>,
    "origin": <undefined, T, T, T>,
    "protocol": <undefined, T, T, T>,
    "username": <undefined, T, T, T>,
    "password": <undefined, T, T, T>,
    "host": <undefined, T, T, T>,
    "hostname": <undefined, T, T, T>,
    "port": <undefined, T, T, T>,
    "pathname": <undefined, T, T, T>,
    "search": <undefined, T, T, T>,
    "searchParams": <undefined, T, T, T>,
    "hash": <undefined, T, T, T>,
    "toString": <#Global.URL.prototype.toString, T, T, T>,
    "constructor": <#Global.URL, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.URL.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URL.revokeObjectURL: {
    "length": <1, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.URL.createObjectURL: {
    "length": <1, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TreeWalker: {
    "length": <0, F, F, T>,
    "name": <"TreeWalker", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TreeWalker.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TreeWalker.prototype: {
    "root": <undefined, T, T, T>,
    "whatToShow": <undefined, T, T, T>,
    "filter": <undefined, T, T, T>,
    "currentNode": <undefined, T, T, T>,
    "parentNode": <#Global.TreeWalker.prototype.parentNode, T, T, T>,
    "firstChild": <#Global.TreeWalker.prototype.firstChild, T, T, T>,
    "lastChild": <#Global.TreeWalker.prototype.lastChild, T, T, T>,
    "previousSibling": <#Global.TreeWalker.prototype.previousSibling, T, T, T>,
    "nextSibling": <#Global.TreeWalker.prototype.nextSibling, T, T, T>,
    "previousNode": <#Global.TreeWalker.prototype.previousNode, T, T, T>,
    "nextNode": <#Global.TreeWalker.prototype.nextNode, T, T, T>,
    "constructor": <#Global.TreeWalker, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TreeWalker.prototype.parentNode: {
    "length": <0, F, F, T>,
    "name": <"parentNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TreeWalker.prototype.firstChild: {
    "length": <0, F, F, T>,
    "name": <"firstChild", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TreeWalker.prototype.lastChild: {
    "length": <0, F, F, T>,
    "name": <"lastChild", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TreeWalker.prototype.previousSibling: {
    "length": <0, F, F, T>,
    "name": <"previousSibling", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TreeWalker.prototype.nextSibling: {
    "length": <0, F, F, T>,
    "name": <"nextSibling", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TreeWalker.prototype.previousNode: {
    "length": <0, F, F, T>,
    "name": <"previousNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TreeWalker.prototype.nextNode: {
    "length": <0, F, F, T>,
    "name": <"nextNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TransitionEvent: {
    "length": <1, F, F, T>,
    "name": <"TransitionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TransitionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TransitionEvent.prototype: {
    "propertyName": <undefined, T, T, T>,
    "elapsedTime": <undefined, T, T, T>,
    "pseudoElement": <undefined, T, T, T>,
    "constructor": <#Global.TransitionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.TrackEvent: {
    "length": <1, F, F, T>,
    "name": <"TrackEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TrackEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TrackEvent.prototype: {
    "track": <undefined, T, T, T>,
    "constructor": <#Global.TrackEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.TouchList: {
    "length": <0, F, F, T>,
    "name": <"TouchList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TouchList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TouchList.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.TouchList.prototype.item, T, T, T>,
    "constructor": <#Global.TouchList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TouchList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TouchEvent: {
    "length": <1, F, F, T>,
    "name": <"TouchEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TouchEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TouchEvent.prototype: {
    "touches": <undefined, T, T, T>,
    "targetTouches": <undefined, T, T, T>,
    "changedTouches": <undefined, T, T, T>,
    "altKey": <undefined, T, T, T>,
    "metaKey": <undefined, T, T, T>,
    "ctrlKey": <undefined, T, T, T>,
    "shiftKey": <undefined, T, T, T>,
    "constructor": <#Global.TouchEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.Touch: {
    "length": <1, F, F, T>,
    "name": <"Touch", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Touch.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Touch.prototype: {
    "identifier": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "screenX": <undefined, T, T, T>,
    "screenY": <undefined, T, T, T>,
    "clientX": <undefined, T, T, T>,
    "clientY": <undefined, T, T, T>,
    "pageX": <undefined, T, T, T>,
    "pageY": <undefined, T, T, T>,
    "radiusX": <undefined, T, T, T>,
    "radiusY": <undefined, T, T, T>,
    "rotationAngle": <undefined, T, T, T>,
    "force": <undefined, T, T, T>,
    "constructor": <#Global.Touch, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TimeRanges: {
    "length": <0, F, F, T>,
    "name": <"TimeRanges", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TimeRanges.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TimeRanges.prototype: {
    "length": <undefined, T, T, T>,
    "start": <#Global.TimeRanges.prototype.start, T, T, T>,
    "end": <#Global.TimeRanges.prototype.end, T, T, T>,
    "constructor": <#Global.TimeRanges, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TimeRanges.prototype.start: {
    "length": <1, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TimeRanges.prototype.end: {
    "length": <1, F, F, T>,
    "name": <"end", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TextTrackList: {
    "length": <0, F, F, T>,
    "name": <"TextTrackList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TextTrackList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TextTrackList.prototype: {
    "length": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "onaddtrack": <undefined, T, T, T>,
    "onremovetrack": <undefined, T, T, T>,
    "getTrackById": <#Global.TextTrackList.prototype.getTrackById, T, T, T>,
    "constructor": <#Global.TextTrackList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.TextTrackList.prototype.getTrackById: {
    "length": <1, F, F, T>,
    "name": <"getTrackById", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TextTrackCueList: {
    "length": <0, F, F, T>,
    "name": <"TextTrackCueList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TextTrackCueList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TextTrackCueList.prototype: {
    "length": <undefined, T, T, T>,
    "getCueById": <#Global.TextTrackCueList.prototype.getCueById, T, T, T>,
    "constructor": <#Global.TextTrackCueList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TextTrackCueList.prototype.getCueById: {
    "length": <1, F, F, T>,
    "name": <"getCueById", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TextTrack: {
    "length": <0, F, F, T>,
    "name": <"TextTrack", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TextTrack.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TextTrack.prototype: {
    "kind": <undefined, T, T, T>,
    "label": <undefined, T, T, T>,
    "language": <undefined, T, T, T>,
    "id": <undefined, T, T, T>,
    "mode": <undefined, T, T, T>,
    "cues": <undefined, T, T, T>,
    "activeCues": <undefined, T, T, T>,
    "oncuechange": <undefined, T, T, T>,
    "addCue": <#Global.TextTrack.prototype.addCue, T, T, T>,
    "removeCue": <#Global.TextTrack.prototype.removeCue, T, T, T>,
    "constructor": <#Global.TextTrack, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.TextTrack.prototype.addCue: {
    "length": <1, F, F, T>,
    "name": <"addCue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TextTrack.prototype.removeCue: {
    "length": <1, F, F, T>,
    "name": <"removeCue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.TextMetrics: {
    "length": <0, F, F, T>,
    "name": <"TextMetrics", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TextMetrics.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TextMetrics.prototype: {
    "width": <undefined, T, T, T>,
    "constructor": <#Global.TextMetrics, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.TextEvent: {
    "length": <0, F, F, T>,
    "name": <"TextEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.TextEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.TextEvent.prototype: {
    "data": <undefined, T, T, T>,
    "initTextEvent": <#Global.TextEvent.prototype.initTextEvent, T, T, T>,
    "constructor": <#Global.TextEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.TextEvent.prototype.initTextEvent: {
    "length": <0, F, F, T>,
    "name": <"initTextEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text: {
    "length": <0, F, F, T>,
    "name": <"Text", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Text.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Text.prototype: {
    "wholeText": <undefined, T, T, T>,
    "splitText": <#Global.Text.prototype.splitText, T, T, T>,
    "getDestinationInsertionPoints": <#Global.Text.prototype.getDestinationInsertionPoints, T, T, T>,
    "assignedSlot": <undefined, T, T, T>,
    "constructor": <#Global.Text, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Text.prototype.splitText: {
    "length": <1, F, F, T>,
    "name": <"splitText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.getDestinationInsertionPoints: {
    "length": <0, F, F, T>,
    "name": <"getDestinationInsertionPoints", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]]: {
    "data": <undefined, T, T, T>,
    "length": <undefined, T, T, T>,
    "previousElementSibling": <undefined, T, T, T>,
    "nextElementSibling": <undefined, T, T, T>,
    "substringData": <#Global.Text.prototype.[[Prototype]].substringData, T, T, T>,
    "appendData": <#Global.Text.prototype.[[Prototype]].appendData, T, T, T>,
    "insertData": <#Global.Text.prototype.[[Prototype]].insertData, T, T, T>,
    "deleteData": <#Global.Text.prototype.[[Prototype]].deleteData, T, T, T>,
    "replaceData": <#Global.Text.prototype.[[Prototype]].replaceData, T, T, T>,
    "remove": <#Global.Text.prototype.[[Prototype]].remove, T, T, T>,
    "before": <#Global.Text.prototype.[[Prototype]].before, T, T, T>,
    "after": <#Global.Text.prototype.[[Prototype]].after, T, T, T>,
    "replaceWith": <#Global.Text.prototype.[[Prototype]].replaceWith, T, T, T>,
    "constructor": <#Global.Text.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Text.prototype.[[Prototype]].substringData: {
    "length": <2, F, F, T>,
    "name": <"substringData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].appendData: {
    "length": <1, F, F, T>,
    "name": <"appendData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].insertData: {
    "length": <2, F, F, T>,
    "name": <"insertData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].deleteData: {
    "length": <2, F, F, T>,
    "name": <"deleteData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].replaceData: {
    "length": <3, F, F, T>,
    "name": <"replaceData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].remove: {
    "length": <0, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].before: {
    "length": <0, F, F, T>,
    "name": <"before", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].after: {
    "length": <0, F, F, T>,
    "name": <"after", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].replaceWith: {
    "length": <0, F, F, T>,
    "name": <"replaceWith", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Text.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"CharacterData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Text.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.StyleSheetList: {
    "length": <0, F, F, T>,
    "name": <"StyleSheetList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.StyleSheetList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.StyleSheetList.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.StyleSheetList.prototype.item, T, T, T>,
    "constructor": <#Global.StyleSheetList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.StyleSheetList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.StyleSheet: {
    "length": <0, F, F, T>,
    "name": <"StyleSheet", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.StyleSheet.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.StyleSheet.prototype: {
    "type": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "ownerNode": <undefined, T, T, T>,
    "parentStyleSheet": <undefined, T, T, T>,
    "title": <undefined, T, T, T>,
    "media": <undefined, T, T, T>,
    "disabled": <undefined, T, T, T>,
    "constructor": <#Global.StyleSheet, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ShadowRoot: {
    "length": <0, F, F, T>,
    "name": <"ShadowRoot", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ShadowRoot.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.ShadowRoot.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype: {
    "host": <undefined, T, T, T>,
    "olderShadowRoot": <undefined, T, T, T>,
    "innerHTML": <undefined, T, T, T>,
    "activeElement": <undefined, T, T, T>,
    "styleSheets": <undefined, T, T, T>,
    "pointerLockElement": <undefined, T, T, T>,
    "cloneNode": <#Global.ShadowRoot.prototype.cloneNode, T, T, T>,
    "getSelection": <#Global.ShadowRoot.prototype.getSelection, T, T, T>,
    "elementFromPoint": <#Global.ShadowRoot.prototype.elementFromPoint, T, T, T>,
    "elementsFromPoint": <#Global.ShadowRoot.prototype.elementsFromPoint, T, T, T>,
    "mode": <undefined, T, T, T>,
    "delegatesFocus": <undefined, T, T, T>,
    "constructor": <#Global.ShadowRoot, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.ShadowRoot.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ShadowRoot.prototype.cloneNode: {
    "length": <0, F, F, T>,
    "name": <"cloneNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.getSelection: {
    "length": <0, F, F, T>,
    "name": <"getSelection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.elementFromPoint: {
    "length": <2, F, F, T>,
    "name": <"elementFromPoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.elementsFromPoint: {
    "length": <2, F, F, T>,
    "name": <"elementsFromPoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.[[Prototype]]: {
    "children": <undefined, T, T, T>,
    "firstElementChild": <undefined, T, T, T>,
    "lastElementChild": <undefined, T, T, T>,
    "childElementCount": <undefined, T, T, T>,
    "getElementById": <#Global.ShadowRoot.prototype.[[Prototype]].getElementById, T, T, T>,
    "querySelector": <#Global.ShadowRoot.prototype.[[Prototype]].querySelector, T, T, T>,
    "querySelectorAll": <#Global.ShadowRoot.prototype.[[Prototype]].querySelectorAll, T, T, T>,
    "prepend": <#Global.ShadowRoot.prototype.[[Prototype]].prepend, T, T, T>,
    "append": <#Global.ShadowRoot.prototype.[[Prototype]].append, T, T, T>,
    "constructor": <#Global.ShadowRoot.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ShadowRoot.prototype.[[Prototype]].getElementById: {
    "length": <1, F, F, T>,
    "name": <"getElementById", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.[[Prototype]].querySelector: {
    "length": <1, F, F, T>,
    "name": <"querySelector", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.[[Prototype]].querySelectorAll: {
    "length": <1, F, F, T>,
    "name": <"querySelectorAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.[[Prototype]].prepend: {
    "length": <0, F, F, T>,
    "name": <"prepend", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.[[Prototype]].append: {
    "length": <0, F, F, T>,
    "name": <"append", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ShadowRoot.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"DocumentFragment", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ShadowRoot.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Selection: {
    "length": <0, F, F, T>,
    "name": <"Selection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Selection.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype: {
    "anchorNode": <undefined, T, T, T>,
    "anchorOffset": <undefined, T, T, T>,
    "focusNode": <undefined, T, T, T>,
    "focusOffset": <undefined, T, T, T>,
    "isCollapsed": <undefined, T, T, T>,
    "rangeCount": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "baseNode": <undefined, T, T, T>,
    "baseOffset": <undefined, T, T, T>,
    "extentNode": <undefined, T, T, T>,
    "extentOffset": <undefined, T, T, T>,
    "getRangeAt": <#Global.Selection.prototype.getRangeAt, T, T, T>,
    "addRange": <#Global.Selection.prototype.addRange, T, T, T>,
    "removeAllRanges": <#Global.Selection.prototype.removeAllRanges, T, T, T>,
    "empty": <#Global.Selection.prototype.empty, T, T, T>,
    "collapse": <#Global.Selection.prototype.collapse, T, T, T>,
    "setPosition": <#Global.Selection.prototype.setPosition, T, T, T>,
    "collapseToStart": <#Global.Selection.prototype.collapseToStart, T, T, T>,
    "collapseToEnd": <#Global.Selection.prototype.collapseToEnd, T, T, T>,
    "extend": <#Global.Selection.prototype.extend, T, T, T>,
    "setBaseAndExtent": <#Global.Selection.prototype.setBaseAndExtent, T, T, T>,
    "selectAllChildren": <#Global.Selection.prototype.selectAllChildren, T, T, T>,
    "deleteFromDocument": <#Global.Selection.prototype.deleteFromDocument, T, T, T>,
    "containsNode": <#Global.Selection.prototype.containsNode, T, T, T>,
    "modify": <#Global.Selection.prototype.modify, T, T, T>,
    "toString": <#Global.Selection.prototype.toString, T, T, T>,
    "constructor": <#Global.Selection, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Selection.prototype.getRangeAt: {
    "length": <1, F, F, T>,
    "name": <"getRangeAt", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.addRange: {
    "length": <1, F, F, T>,
    "name": <"addRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.removeAllRanges: {
    "length": <0, F, F, T>,
    "name": <"removeAllRanges", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.empty: {
    "length": <0, F, F, T>,
    "name": <"empty", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.collapse: {
    "length": <1, F, F, T>,
    "name": <"collapse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.setPosition: {
    "length": <1, F, F, T>,
    "name": <"setPosition", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.collapseToStart: {
    "length": <0, F, F, T>,
    "name": <"collapseToStart", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.collapseToEnd: {
    "length": <0, F, F, T>,
    "name": <"collapseToEnd", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.extend: {
    "length": <1, F, F, T>,
    "name": <"extend", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.setBaseAndExtent: {
    "length": <4, F, F, T>,
    "name": <"setBaseAndExtent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.selectAllChildren: {
    "length": <1, F, F, T>,
    "name": <"selectAllChildren", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.deleteFromDocument: {
    "length": <0, F, F, T>,
    "name": <"deleteFromDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.containsNode: {
    "length": <1, F, F, T>,
    "name": <"containsNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.modify: {
    "length": <0, F, F, T>,
    "name": <"modify", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Selection.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SecurityPolicyViolationEvent: {
    "length": <1, F, F, T>,
    "name": <"SecurityPolicyViolationEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SecurityPolicyViolationEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SecurityPolicyViolationEvent.prototype: {
    "documentURI": <undefined, T, T, T>,
    "referrer": <undefined, T, T, T>,
    "blockedURI": <undefined, T, T, T>,
    "violatedDirective": <undefined, T, T, T>,
    "effectiveDirective": <undefined, T, T, T>,
    "originalPolicy": <undefined, T, T, T>,
    "disposition": <undefined, T, T, T>,
    "sourceFile": <undefined, T, T, T>,
    "statusCode": <undefined, T, T, T>,
    "lineNumber": <undefined, T, T, T>,
    "columnNumber": <undefined, T, T, T>,
    "constructor": <#Global.SecurityPolicyViolationEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Screen: {
    "length": <0, F, F, T>,
    "name": <"Screen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Screen.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Screen.prototype: {
    "availWidth": <undefined, T, T, T>,
    "availHeight": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "colorDepth": <undefined, T, T, T>,
    "pixelDepth": <undefined, T, T, T>,
    "availLeft": <undefined, T, T, T>,
    "availTop": <undefined, T, T, T>,
    "orientation": <undefined, T, T, T>,
    "constructor": <#Global.Screen, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGViewElement: {
    "length": <0, F, F, T>,
    "name": <"SVGViewElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGViewElement.prototype, F, F, F>,
    "SVG_ZOOMANDPAN_UNKNOWN": <0, F, T, F>,
    "SVG_ZOOMANDPAN_DISABLE": <1, F, T, F>,
    "SVG_ZOOMANDPAN_MAGNIFY": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGViewElement.prototype: {
    "SVG_ZOOMANDPAN_UNKNOWN": <0, F, T, F>,
    "SVG_ZOOMANDPAN_DISABLE": <1, F, T, F>,
    "SVG_ZOOMANDPAN_MAGNIFY": <2, F, T, F>,
    "viewBox": <undefined, T, T, T>,
    "preserveAspectRatio": <undefined, T, T, T>,
    "zoomAndPan": <undefined, T, T, T>,
    "constructor": <#Global.SVGViewElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGUseElement: {
    "length": <0, F, F, T>,
    "name": <"SVGUseElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGUseElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGUseElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGUseElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGUseElement.prototype.[[Prototype]]: {
    "transform": <undefined, T, T, T>,
    "nearestViewportElement": <undefined, T, T, T>,
    "farthestViewportElement": <undefined, T, T, T>,
    "requiredFeatures": <undefined, T, T, T>,
    "requiredExtensions": <undefined, T, T, T>,
    "systemLanguage": <undefined, T, T, T>,
    "getBBox": <#Global.SVGUseElement.prototype.[[Prototype]].getBBox, T, T, T>,
    "getCTM": <#Global.SVGUseElement.prototype.[[Prototype]].getCTM, T, T, T>,
    "getScreenCTM": <#Global.SVGUseElement.prototype.[[Prototype]].getScreenCTM, T, T, T>,
    "constructor": <#Global.SVGUseElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGUseElement.prototype.[[Prototype]].getBBox: {
    "length": <0, F, F, T>,
    "name": <"getBBox", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGUseElement.prototype.[[Prototype]].getCTM: {
    "length": <0, F, F, T>,
    "name": <"getCTM", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGUseElement.prototype.[[Prototype]].getScreenCTM: {
    "length": <0, F, F, T>,
    "name": <"getScreenCTM", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGUseElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"SVGGraphicsElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGUseElement.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGUnitTypes: {
    "length": <0, F, F, T>,
    "name": <"SVGUnitTypes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGUnitTypes.prototype, F, F, F>,
    "SVG_UNIT_TYPE_UNKNOWN": <0, F, T, F>,
    "SVG_UNIT_TYPE_USERSPACEONUSE": <1, F, T, F>,
    "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGUnitTypes.prototype: {
    "SVG_UNIT_TYPE_UNKNOWN": <0, F, T, F>,
    "SVG_UNIT_TYPE_USERSPACEONUSE": <1, F, T, F>,
    "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX": <2, F, T, F>,
    "constructor": <#Global.SVGUnitTypes, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGTransformList: {
    "length": <0, F, F, T>,
    "name": <"SVGTransformList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTransformList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype: {
    "length": <undefined, T, T, T>,
    "numberOfItems": <undefined, T, T, T>,
    "clear": <#Global.SVGTransformList.prototype.clear, T, T, T>,
    "initialize": <#Global.SVGTransformList.prototype.initialize, T, T, T>,
    "getItem": <#Global.SVGTransformList.prototype.getItem, T, T, T>,
    "insertItemBefore": <#Global.SVGTransformList.prototype.insertItemBefore, T, T, T>,
    "replaceItem": <#Global.SVGTransformList.prototype.replaceItem, T, T, T>,
    "removeItem": <#Global.SVGTransformList.prototype.removeItem, T, T, T>,
    "appendItem": <#Global.SVGTransformList.prototype.appendItem, T, T, T>,
    "createSVGTransformFromMatrix": <#Global.SVGTransformList.prototype.createSVGTransformFromMatrix, T, T, T>,
    "consolidate": <#Global.SVGTransformList.prototype.consolidate, T, T, T>,
    "constructor": <#Global.SVGTransformList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGTransformList.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.initialize: {
    "length": <1, F, F, T>,
    "name": <"initialize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.getItem: {
    "length": <1, F, F, T>,
    "name": <"getItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.insertItemBefore: {
    "length": <2, F, F, T>,
    "name": <"insertItemBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.replaceItem: {
    "length": <2, F, F, T>,
    "name": <"replaceItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.removeItem: {
    "length": <1, F, F, T>,
    "name": <"removeItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.appendItem: {
    "length": <1, F, F, T>,
    "name": <"appendItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.createSVGTransformFromMatrix: {
    "length": <1, F, F, T>,
    "name": <"createSVGTransformFromMatrix", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransformList.prototype.consolidate: {
    "length": <0, F, F, T>,
    "name": <"consolidate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransform: {
    "length": <0, F, F, T>,
    "name": <"SVGTransform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTransform.prototype, F, F, F>,
    "SVG_TRANSFORM_UNKNOWN": <0, F, T, F>,
    "SVG_TRANSFORM_MATRIX": <1, F, T, F>,
    "SVG_TRANSFORM_TRANSLATE": <2, F, T, F>,
    "SVG_TRANSFORM_SCALE": <3, F, T, F>,
    "SVG_TRANSFORM_ROTATE": <4, F, T, F>,
    "SVG_TRANSFORM_SKEWX": <5, F, T, F>,
    "SVG_TRANSFORM_SKEWY": <6, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTransform.prototype: {
    "SVG_TRANSFORM_UNKNOWN": <0, F, T, F>,
    "SVG_TRANSFORM_MATRIX": <1, F, T, F>,
    "SVG_TRANSFORM_TRANSLATE": <2, F, T, F>,
    "SVG_TRANSFORM_SCALE": <3, F, T, F>,
    "SVG_TRANSFORM_ROTATE": <4, F, T, F>,
    "SVG_TRANSFORM_SKEWX": <5, F, T, F>,
    "SVG_TRANSFORM_SKEWY": <6, F, T, F>,
    "type": <undefined, T, T, T>,
    "matrix": <undefined, T, T, T>,
    "angle": <undefined, T, T, T>,
    "setMatrix": <#Global.SVGTransform.prototype.setMatrix, T, T, T>,
    "setTranslate": <#Global.SVGTransform.prototype.setTranslate, T, T, T>,
    "setScale": <#Global.SVGTransform.prototype.setScale, T, T, T>,
    "setRotate": <#Global.SVGTransform.prototype.setRotate, T, T, T>,
    "setSkewX": <#Global.SVGTransform.prototype.setSkewX, T, T, T>,
    "setSkewY": <#Global.SVGTransform.prototype.setSkewY, T, T, T>,
    "constructor": <#Global.SVGTransform, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGTransform.prototype.setMatrix: {
    "length": <1, F, F, T>,
    "name": <"setMatrix", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransform.prototype.setTranslate: {
    "length": <2, F, F, T>,
    "name": <"setTranslate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransform.prototype.setScale: {
    "length": <2, F, F, T>,
    "name": <"setScale", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransform.prototype.setRotate: {
    "length": <3, F, F, T>,
    "name": <"setRotate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransform.prototype.setSkewX: {
    "length": <1, F, F, T>,
    "name": <"setSkewX", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTransform.prototype.setSkewY: {
    "length": <1, F, F, T>,
    "name": <"setSkewY", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTitleElement: {
    "length": <0, F, F, T>,
    "name": <"SVGTitleElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTitleElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTitleElement.prototype: {
    "constructor": <#Global.SVGTitleElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGTextPositioningElement: {
    "length": <0, F, F, T>,
    "name": <"SVGTextPositioningElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTextPositioningElement.prototype, F, F, F>,
    "LENGTHADJUST_SPACINGANDGLYPHS": <2, F, T, F>,
    "LENGTHADJUST_SPACING": <1, F, T, F>,
    "LENGTHADJUST_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "dx": <undefined, T, T, T>,
    "dy": <undefined, T, T, T>,
    "rotate": <undefined, T, T, T>,
    "constructor": <#Global.SVGTextPositioningElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]]: {
    "LENGTHADJUST_SPACINGANDGLYPHS": <2, F, T, F>,
    "LENGTHADJUST_SPACING": <1, F, T, F>,
    "LENGTHADJUST_UNKNOWN": <0, F, T, F>,
    "textLength": <undefined, T, T, T>,
    "lengthAdjust": <undefined, T, T, T>,
    "getNumberOfChars": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getNumberOfChars, T, T, T>,
    "getComputedTextLength": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getComputedTextLength, T, T, T>,
    "getSubStringLength": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getSubStringLength, T, T, T>,
    "getStartPositionOfChar": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getStartPositionOfChar, T, T, T>,
    "getEndPositionOfChar": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getEndPositionOfChar, T, T, T>,
    "getExtentOfChar": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getExtentOfChar, T, T, T>,
    "getRotationOfChar": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getRotationOfChar, T, T, T>,
    "getCharNumAtPosition": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].getCharNumAtPosition, T, T, T>,
    "selectSubString": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].selectSubString, T, T, T>,
    "constructor": <#Global.SVGTextPositioningElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getNumberOfChars: {
    "length": <0, F, F, T>,
    "name": <"getNumberOfChars", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getComputedTextLength: {
    "length": <0, F, F, T>,
    "name": <"getComputedTextLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getSubStringLength: {
    "length": <2, F, F, T>,
    "name": <"getSubStringLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getStartPositionOfChar: {
    "length": <1, F, F, T>,
    "name": <"getStartPositionOfChar", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getEndPositionOfChar: {
    "length": <1, F, F, T>,
    "name": <"getEndPositionOfChar", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getExtentOfChar: {
    "length": <1, F, F, T>,
    "name": <"getExtentOfChar", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getRotationOfChar: {
    "length": <1, F, F, T>,
    "name": <"getRotationOfChar", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].getCharNumAtPosition: {
    "length": <1, F, F, T>,
    "name": <"getCharNumAtPosition", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].selectSubString: {
    "length": <2, F, F, T>,
    "name": <"selectSubString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGTextPositioningElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"SVGTextContentElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTextPositioningElement.prototype.[[Prototype]], F, F, F>,
    "LENGTHADJUST_SPACINGANDGLYPHS": <2, F, T, F>,
    "LENGTHADJUST_SPACING": <1, F, T, F>,
    "LENGTHADJUST_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTextPathElement: {
    "length": <0, F, F, T>,
    "name": <"SVGTextPathElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTextPathElement.prototype, F, F, F>,
    "TEXTPATH_SPACINGTYPE_EXACT": <2, F, T, F>,
    "TEXTPATH_SPACINGTYPE_AUTO": <1, F, T, F>,
    "TEXTPATH_SPACINGTYPE_UNKNOWN": <0, F, T, F>,
    "TEXTPATH_METHODTYPE_STRETCH": <2, F, T, F>,
    "TEXTPATH_METHODTYPE_ALIGN": <1, F, T, F>,
    "TEXTPATH_METHODTYPE_UNKNOWN": <0, F, T, F>,
    "LENGTHADJUST_SPACINGANDGLYPHS": <2, F, T, F>,
    "LENGTHADJUST_SPACING": <1, F, T, F>,
    "LENGTHADJUST_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTextPathElement.prototype: {
    "TEXTPATH_SPACINGTYPE_EXACT": <2, F, T, F>,
    "TEXTPATH_SPACINGTYPE_AUTO": <1, F, T, F>,
    "TEXTPATH_SPACINGTYPE_UNKNOWN": <0, F, T, F>,
    "TEXTPATH_METHODTYPE_STRETCH": <2, F, T, F>,
    "TEXTPATH_METHODTYPE_ALIGN": <1, F, T, F>,
    "TEXTPATH_METHODTYPE_UNKNOWN": <0, F, T, F>,
    "startOffset": <undefined, T, T, T>,
    "method": <undefined, T, T, T>,
    "spacing": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGTextPathElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGTextElement: {
    "length": <0, F, F, T>,
    "name": <"SVGTextElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTextElement.prototype, F, F, F>,
    "LENGTHADJUST_SPACINGANDGLYPHS": <2, F, T, F>,
    "LENGTHADJUST_SPACING": <1, F, T, F>,
    "LENGTHADJUST_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTextElement.prototype: {
    "constructor": <#Global.SVGTextElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGTSpanElement: {
    "length": <0, F, F, T>,
    "name": <"SVGTSpanElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGTSpanElement.prototype, F, F, F>,
    "LENGTHADJUST_SPACINGANDGLYPHS": <2, F, T, F>,
    "LENGTHADJUST_SPACING": <1, F, T, F>,
    "LENGTHADJUST_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGTSpanElement.prototype: {
    "constructor": <#Global.SVGTSpanElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGTextPositioningElement.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGSymbolElement: {
    "length": <0, F, F, T>,
    "name": <"SVGSymbolElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGSymbolElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGSymbolElement.prototype: {
    "viewBox": <undefined, T, T, T>,
    "preserveAspectRatio": <undefined, T, T, T>,
    "constructor": <#Global.SVGSymbolElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGSwitchElement: {
    "length": <0, F, F, T>,
    "name": <"SVGSwitchElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGSwitchElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGSwitchElement.prototype: {
    "constructor": <#Global.SVGSwitchElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGStyleElement: {
    "length": <0, F, F, T>,
    "name": <"SVGStyleElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGStyleElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGStyleElement.prototype: {
    "type": <undefined, T, T, T>,
    "media": <undefined, T, T, T>,
    "title": <undefined, T, T, T>,
    "sheet": <undefined, T, T, T>,
    "disabled": <undefined, T, T, T>,
    "constructor": <#Global.SVGStyleElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGStringList: {
    "length": <0, F, F, T>,
    "name": <"SVGStringList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGStringList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGStringList.prototype: {
    "length": <undefined, T, T, T>,
    "numberOfItems": <undefined, T, T, T>,
    "clear": <#Global.SVGStringList.prototype.clear, T, T, T>,
    "initialize": <#Global.SVGStringList.prototype.initialize, T, T, T>,
    "getItem": <#Global.SVGStringList.prototype.getItem, T, T, T>,
    "insertItemBefore": <#Global.SVGStringList.prototype.insertItemBefore, T, T, T>,
    "replaceItem": <#Global.SVGStringList.prototype.replaceItem, T, T, T>,
    "removeItem": <#Global.SVGStringList.prototype.removeItem, T, T, T>,
    "appendItem": <#Global.SVGStringList.prototype.appendItem, T, T, T>,
    "constructor": <#Global.SVGStringList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGStringList.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGStringList.prototype.initialize: {
    "length": <1, F, F, T>,
    "name": <"initialize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGStringList.prototype.getItem: {
    "length": <1, F, F, T>,
    "name": <"getItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGStringList.prototype.insertItemBefore: {
    "length": <2, F, F, T>,
    "name": <"insertItemBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGStringList.prototype.replaceItem: {
    "length": <2, F, F, T>,
    "name": <"replaceItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGStringList.prototype.removeItem: {
    "length": <1, F, F, T>,
    "name": <"removeItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGStringList.prototype.appendItem: {
    "length": <1, F, F, T>,
    "name": <"appendItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGStopElement: {
    "length": <0, F, F, T>,
    "name": <"SVGStopElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGStopElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGStopElement.prototype: {
    "offset": <undefined, T, T, T>,
    "constructor": <#Global.SVGStopElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGSetElement: {
    "length": <0, F, F, T>,
    "name": <"SVGSetElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGSetElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGSetElement.prototype: {
    "constructor": <#Global.SVGSetElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGScriptElement: {
    "length": <0, F, F, T>,
    "name": <"SVGScriptElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGScriptElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGScriptElement.prototype: {
    "type": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGScriptElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGSVGElement: {
    "length": <0, F, F, T>,
    "name": <"SVGSVGElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGSVGElement.prototype, F, F, F>,
    "SVG_ZOOMANDPAN_UNKNOWN": <0, F, T, F>,
    "SVG_ZOOMANDPAN_DISABLE": <1, F, T, F>,
    "SVG_ZOOMANDPAN_MAGNIFY": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype: {
    "SVG_ZOOMANDPAN_UNKNOWN": <0, F, T, F>,
    "SVG_ZOOMANDPAN_DISABLE": <1, F, T, F>,
    "SVG_ZOOMANDPAN_MAGNIFY": <2, F, T, F>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "currentScale": <undefined, T, T, T>,
    "currentTranslate": <undefined, T, T, T>,
    "viewBox": <undefined, T, T, T>,
    "preserveAspectRatio": <undefined, T, T, T>,
    "zoomAndPan": <undefined, T, T, T>,
    "suspendRedraw": <#Global.SVGSVGElement.prototype.suspendRedraw, T, T, T>,
    "unsuspendRedraw": <#Global.SVGSVGElement.prototype.unsuspendRedraw, T, T, T>,
    "unsuspendRedrawAll": <#Global.SVGSVGElement.prototype.unsuspendRedrawAll, T, T, T>,
    "forceRedraw": <#Global.SVGSVGElement.prototype.forceRedraw, T, T, T>,
    "getIntersectionList": <#Global.SVGSVGElement.prototype.getIntersectionList, T, T, T>,
    "getEnclosureList": <#Global.SVGSVGElement.prototype.getEnclosureList, T, T, T>,
    "checkIntersection": <#Global.SVGSVGElement.prototype.checkIntersection, T, T, T>,
    "checkEnclosure": <#Global.SVGSVGElement.prototype.checkEnclosure, T, T, T>,
    "deselectAll": <#Global.SVGSVGElement.prototype.deselectAll, T, T, T>,
    "createSVGNumber": <#Global.SVGSVGElement.prototype.createSVGNumber, T, T, T>,
    "createSVGLength": <#Global.SVGSVGElement.prototype.createSVGLength, T, T, T>,
    "createSVGAngle": <#Global.SVGSVGElement.prototype.createSVGAngle, T, T, T>,
    "createSVGPoint": <#Global.SVGSVGElement.prototype.createSVGPoint, T, T, T>,
    "createSVGMatrix": <#Global.SVGSVGElement.prototype.createSVGMatrix, T, T, T>,
    "createSVGRect": <#Global.SVGSVGElement.prototype.createSVGRect, T, T, T>,
    "createSVGTransform": <#Global.SVGSVGElement.prototype.createSVGTransform, T, T, T>,
    "createSVGTransformFromMatrix": <#Global.SVGSVGElement.prototype.createSVGTransformFromMatrix, T, T, T>,
    "getElementById": <#Global.SVGSVGElement.prototype.getElementById, T, T, T>,
    "pauseAnimations": <#Global.SVGSVGElement.prototype.pauseAnimations, T, T, T>,
    "unpauseAnimations": <#Global.SVGSVGElement.prototype.unpauseAnimations, T, T, T>,
    "animationsPaused": <#Global.SVGSVGElement.prototype.animationsPaused, T, T, T>,
    "getCurrentTime": <#Global.SVGSVGElement.prototype.getCurrentTime, T, T, T>,
    "setCurrentTime": <#Global.SVGSVGElement.prototype.setCurrentTime, T, T, T>,
    "constructor": <#Global.SVGSVGElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGSVGElement.prototype.suspendRedraw: {
    "length": <1, F, F, T>,
    "name": <"suspendRedraw", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.unsuspendRedraw: {
    "length": <1, F, F, T>,
    "name": <"unsuspendRedraw", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.unsuspendRedrawAll: {
    "length": <0, F, F, T>,
    "name": <"unsuspendRedrawAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.forceRedraw: {
    "length": <0, F, F, T>,
    "name": <"forceRedraw", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.getIntersectionList: {
    "length": <2, F, F, T>,
    "name": <"getIntersectionList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.getEnclosureList: {
    "length": <2, F, F, T>,
    "name": <"getEnclosureList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.checkIntersection: {
    "length": <2, F, F, T>,
    "name": <"checkIntersection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.checkEnclosure: {
    "length": <2, F, F, T>,
    "name": <"checkEnclosure", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.deselectAll: {
    "length": <0, F, F, T>,
    "name": <"deselectAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGNumber: {
    "length": <0, F, F, T>,
    "name": <"createSVGNumber", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGLength: {
    "length": <0, F, F, T>,
    "name": <"createSVGLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGAngle: {
    "length": <0, F, F, T>,
    "name": <"createSVGAngle", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGPoint: {
    "length": <0, F, F, T>,
    "name": <"createSVGPoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGMatrix: {
    "length": <0, F, F, T>,
    "name": <"createSVGMatrix", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGRect: {
    "length": <0, F, F, T>,
    "name": <"createSVGRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGTransform: {
    "length": <0, F, F, T>,
    "name": <"createSVGTransform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.createSVGTransformFromMatrix: {
    "length": <1, F, F, T>,
    "name": <"createSVGTransformFromMatrix", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.getElementById: {
    "length": <1, F, F, T>,
    "name": <"getElementById", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.pauseAnimations: {
    "length": <0, F, F, T>,
    "name": <"pauseAnimations", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.unpauseAnimations: {
    "length": <0, F, F, T>,
    "name": <"unpauseAnimations", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.animationsPaused: {
    "length": <0, F, F, T>,
    "name": <"animationsPaused", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.getCurrentTime: {
    "length": <0, F, F, T>,
    "name": <"getCurrentTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGSVGElement.prototype.setCurrentTime: {
    "length": <1, F, F, T>,
    "name": <"setCurrentTime", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGRectElement: {
    "length": <0, F, F, T>,
    "name": <"SVGRectElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGRectElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGRectElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "rx": <undefined, T, T, T>,
    "ry": <undefined, T, T, T>,
    "constructor": <#Global.SVGRectElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGRectElement.prototype.[[Prototype]]: {
    "isPointInFill": <#Global.SVGRectElement.prototype.[[Prototype]].isPointInFill, T, T, T>,
    "isPointInStroke": <#Global.SVGRectElement.prototype.[[Prototype]].isPointInStroke, T, T, T>,
    "getTotalLength": <#Global.SVGRectElement.prototype.[[Prototype]].getTotalLength, T, T, T>,
    "getPointAtLength": <#Global.SVGRectElement.prototype.[[Prototype]].getPointAtLength, T, T, T>,
    "constructor": <#Global.SVGRectElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGRectElement.prototype.[[Prototype]].isPointInFill: {
    "length": <1, F, F, T>,
    "name": <"isPointInFill", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGRectElement.prototype.[[Prototype]].isPointInStroke: {
    "length": <1, F, F, T>,
    "name": <"isPointInStroke", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGRectElement.prototype.[[Prototype]].getTotalLength: {
    "length": <0, F, F, T>,
    "name": <"getTotalLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGRectElement.prototype.[[Prototype]].getPointAtLength: {
    "length": <1, F, F, T>,
    "name": <"getPointAtLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGRectElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"SVGGeometryElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGRectElement.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGRect: {
    "length": <0, F, F, T>,
    "name": <"SVGRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGRect.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGRect.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "constructor": <#Global.SVGRect, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGRadialGradientElement: {
    "length": <0, F, F, T>,
    "name": <"SVGRadialGradientElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGRadialGradientElement.prototype, F, F, F>,
    "SVG_SPREADMETHOD_REPEAT": <3, F, T, F>,
    "SVG_SPREADMETHOD_REFLECT": <2, F, T, F>,
    "SVG_SPREADMETHOD_PAD": <1, F, T, F>,
    "SVG_SPREADMETHOD_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRadialGradientElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGRadialGradientElement.prototype: {
    "cx": <undefined, T, T, T>,
    "cy": <undefined, T, T, T>,
    "r": <undefined, T, T, T>,
    "fx": <undefined, T, T, T>,
    "fy": <undefined, T, T, T>,
    "fr": <undefined, T, T, T>,
    "constructor": <#Global.SVGRadialGradientElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRadialGradientElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGRadialGradientElement.prototype.[[Prototype]]: {
    "SVG_SPREADMETHOD_REPEAT": <3, F, T, F>,
    "SVG_SPREADMETHOD_REFLECT": <2, F, T, F>,
    "SVG_SPREADMETHOD_PAD": <1, F, T, F>,
    "SVG_SPREADMETHOD_UNKNOWN": <0, F, T, F>,
    "gradientUnits": <undefined, T, T, T>,
    "gradientTransform": <undefined, T, T, T>,
    "spreadMethod": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGRadialGradientElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGRadialGradientElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"SVGGradientElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGRadialGradientElement.prototype.[[Prototype]], F, F, F>,
    "SVG_SPREADMETHOD_REPEAT": <3, F, T, F>,
    "SVG_SPREADMETHOD_REFLECT": <2, F, T, F>,
    "SVG_SPREADMETHOD_PAD": <1, F, T, F>,
    "SVG_SPREADMETHOD_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPreserveAspectRatio: {
    "length": <0, F, F, T>,
    "name": <"SVGPreserveAspectRatio", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGPreserveAspectRatio.prototype, F, F, F>,
    "SVG_PRESERVEASPECTRATIO_UNKNOWN": <0, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_NONE": <1, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMINYMIN": <2, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMIDYMIN": <3, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMAXYMIN": <4, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMINYMID": <5, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMIDYMID": <6, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMAXYMID": <7, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMINYMAX": <8, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMIDYMAX": <9, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMAXYMAX": <10, F, T, F>,
    "SVG_MEETORSLICE_UNKNOWN": <0, F, T, F>,
    "SVG_MEETORSLICE_MEET": <1, F, T, F>,
    "SVG_MEETORSLICE_SLICE": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPreserveAspectRatio.prototype: {
    "SVG_PRESERVEASPECTRATIO_UNKNOWN": <0, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_NONE": <1, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMINYMIN": <2, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMIDYMIN": <3, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMAXYMIN": <4, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMINYMID": <5, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMIDYMID": <6, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMAXYMID": <7, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMINYMAX": <8, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMIDYMAX": <9, F, T, F>,
    "SVG_PRESERVEASPECTRATIO_XMAXYMAX": <10, F, T, F>,
    "SVG_MEETORSLICE_UNKNOWN": <0, F, T, F>,
    "SVG_MEETORSLICE_MEET": <1, F, T, F>,
    "SVG_MEETORSLICE_SLICE": <2, F, T, F>,
    "align": <undefined, T, T, T>,
    "meetOrSlice": <undefined, T, T, T>,
    "constructor": <#Global.SVGPreserveAspectRatio, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGPolylineElement: {
    "length": <0, F, F, T>,
    "name": <"SVGPolylineElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGPolylineElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPolylineElement.prototype: {
    "points": <undefined, T, T, T>,
    "animatedPoints": <undefined, T, T, T>,
    "constructor": <#Global.SVGPolylineElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGPolygonElement: {
    "length": <0, F, F, T>,
    "name": <"SVGPolygonElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGPolygonElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPolygonElement.prototype: {
    "points": <undefined, T, T, T>,
    "animatedPoints": <undefined, T, T, T>,
    "constructor": <#Global.SVGPolygonElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGPointList: {
    "length": <0, F, F, T>,
    "name": <"SVGPointList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGPointList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPointList.prototype: {
    "length": <undefined, T, T, T>,
    "numberOfItems": <undefined, T, T, T>,
    "clear": <#Global.SVGPointList.prototype.clear, T, T, T>,
    "initialize": <#Global.SVGPointList.prototype.initialize, T, T, T>,
    "getItem": <#Global.SVGPointList.prototype.getItem, T, T, T>,
    "insertItemBefore": <#Global.SVGPointList.prototype.insertItemBefore, T, T, T>,
    "replaceItem": <#Global.SVGPointList.prototype.replaceItem, T, T, T>,
    "removeItem": <#Global.SVGPointList.prototype.removeItem, T, T, T>,
    "appendItem": <#Global.SVGPointList.prototype.appendItem, T, T, T>,
    "constructor": <#Global.SVGPointList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGPointList.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPointList.prototype.initialize: {
    "length": <1, F, F, T>,
    "name": <"initialize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPointList.prototype.getItem: {
    "length": <1, F, F, T>,
    "name": <"getItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPointList.prototype.insertItemBefore: {
    "length": <2, F, F, T>,
    "name": <"insertItemBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPointList.prototype.replaceItem: {
    "length": <2, F, F, T>,
    "name": <"replaceItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPointList.prototype.removeItem: {
    "length": <1, F, F, T>,
    "name": <"removeItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPointList.prototype.appendItem: {
    "length": <1, F, F, T>,
    "name": <"appendItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPoint: {
    "length": <0, F, F, T>,
    "name": <"SVGPoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGPoint.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPoint.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "matrixTransform": <#Global.SVGPoint.prototype.matrixTransform, T, T, T>,
    "constructor": <#Global.SVGPoint, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGPoint.prototype.matrixTransform: {
    "length": <1, F, F, T>,
    "name": <"matrixTransform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGPatternElement: {
    "length": <0, F, F, T>,
    "name": <"SVGPatternElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGPatternElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPatternElement.prototype: {
    "patternUnits": <undefined, T, T, T>,
    "patternContentUnits": <undefined, T, T, T>,
    "patternTransform": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "viewBox": <undefined, T, T, T>,
    "preserveAspectRatio": <undefined, T, T, T>,
    "requiredFeatures": <undefined, T, T, T>,
    "requiredExtensions": <undefined, T, T, T>,
    "systemLanguage": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGPatternElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGPathElement: {
    "length": <0, F, F, T>,
    "name": <"SVGPathElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGPathElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGPathElement.prototype: {
    "pathLength": <undefined, T, T, T>,
    "getPathSegAtLength": <#Global.SVGPathElement.prototype.getPathSegAtLength, T, T, T>,
    "constructor": <#Global.SVGPathElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGPathElement.prototype.getPathSegAtLength: {
    "length": <1, F, F, T>,
    "name": <"getPathSegAtLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList: {
    "length": <0, F, F, T>,
    "name": <"SVGNumberList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGNumberList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList.prototype: {
    "length": <undefined, T, T, T>,
    "numberOfItems": <undefined, T, T, T>,
    "clear": <#Global.SVGNumberList.prototype.clear, T, T, T>,
    "initialize": <#Global.SVGNumberList.prototype.initialize, T, T, T>,
    "getItem": <#Global.SVGNumberList.prototype.getItem, T, T, T>,
    "insertItemBefore": <#Global.SVGNumberList.prototype.insertItemBefore, T, T, T>,
    "replaceItem": <#Global.SVGNumberList.prototype.replaceItem, T, T, T>,
    "removeItem": <#Global.SVGNumberList.prototype.removeItem, T, T, T>,
    "appendItem": <#Global.SVGNumberList.prototype.appendItem, T, T, T>,
    "constructor": <#Global.SVGNumberList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGNumberList.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList.prototype.initialize: {
    "length": <1, F, F, T>,
    "name": <"initialize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList.prototype.getItem: {
    "length": <1, F, F, T>,
    "name": <"getItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList.prototype.insertItemBefore: {
    "length": <2, F, F, T>,
    "name": <"insertItemBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList.prototype.replaceItem: {
    "length": <2, F, F, T>,
    "name": <"replaceItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList.prototype.removeItem: {
    "length": <1, F, F, T>,
    "name": <"removeItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumberList.prototype.appendItem: {
    "length": <1, F, F, T>,
    "name": <"appendItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGNumber: {
    "length": <0, F, F, T>,
    "name": <"SVGNumber", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGNumber.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGNumber.prototype: {
    "value": <undefined, T, T, T>,
    "constructor": <#Global.SVGNumber, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGMetadataElement: {
    "length": <0, F, F, T>,
    "name": <"SVGMetadataElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMetadataElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGMetadataElement.prototype: {
    "constructor": <#Global.SVGMetadataElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGMatrix: {
    "length": <0, F, F, T>,
    "name": <"SVGMatrix", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMatrix.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype: {
    "a": <undefined, T, T, T>,
    "b": <undefined, T, T, T>,
    "c": <undefined, T, T, T>,
    "d": <undefined, T, T, T>,
    "e": <undefined, T, T, T>,
    "f": <undefined, T, T, T>,
    "multiply": <#Global.SVGMatrix.prototype.multiply, T, T, T>,
    "inverse": <#Global.SVGMatrix.prototype.inverse, T, T, T>,
    "translate": <#Global.SVGMatrix.prototype.translate, T, T, T>,
    "scale": <#Global.SVGMatrix.prototype.scale, T, T, T>,
    "scaleNonUniform": <#Global.SVGMatrix.prototype.scaleNonUniform, T, T, T>,
    "rotate": <#Global.SVGMatrix.prototype.rotate, T, T, T>,
    "rotateFromVector": <#Global.SVGMatrix.prototype.rotateFromVector, T, T, T>,
    "flipX": <#Global.SVGMatrix.prototype.flipX, T, T, T>,
    "flipY": <#Global.SVGMatrix.prototype.flipY, T, T, T>,
    "skewX": <#Global.SVGMatrix.prototype.skewX, T, T, T>,
    "skewY": <#Global.SVGMatrix.prototype.skewY, T, T, T>,
    "constructor": <#Global.SVGMatrix, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGMatrix.prototype.multiply: {
    "length": <1, F, F, T>,
    "name": <"multiply", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.inverse: {
    "length": <0, F, F, T>,
    "name": <"inverse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.translate: {
    "length": <2, F, F, T>,
    "name": <"translate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.scale: {
    "length": <1, F, F, T>,
    "name": <"scale", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.scaleNonUniform: {
    "length": <2, F, F, T>,
    "name": <"scaleNonUniform", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.rotate: {
    "length": <1, F, F, T>,
    "name": <"rotate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.rotateFromVector: {
    "length": <2, F, F, T>,
    "name": <"rotateFromVector", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.flipX: {
    "length": <0, F, F, T>,
    "name": <"flipX", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.flipY: {
    "length": <0, F, F, T>,
    "name": <"flipY", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.skewX: {
    "length": <1, F, F, T>,
    "name": <"skewX", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMatrix.prototype.skewY: {
    "length": <1, F, F, T>,
    "name": <"skewY", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMaskElement: {
    "length": <0, F, F, T>,
    "name": <"SVGMaskElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMaskElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGMaskElement.prototype: {
    "maskUnits": <undefined, T, T, T>,
    "maskContentUnits": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "requiredFeatures": <undefined, T, T, T>,
    "requiredExtensions": <undefined, T, T, T>,
    "systemLanguage": <undefined, T, T, T>,
    "constructor": <#Global.SVGMaskElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGMarkerElement: {
    "length": <0, F, F, T>,
    "name": <"SVGMarkerElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGMarkerElement.prototype, F, F, F>,
    "SVG_MARKERUNITS_UNKNOWN": <0, F, T, F>,
    "SVG_MARKERUNITS_USERSPACEONUSE": <1, F, T, F>,
    "SVG_MARKERUNITS_STROKEWIDTH": <2, F, T, F>,
    "SVG_MARKER_ORIENT_UNKNOWN": <0, F, T, F>,
    "SVG_MARKER_ORIENT_AUTO": <1, F, T, F>,
    "SVG_MARKER_ORIENT_ANGLE": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGMarkerElement.prototype: {
    "SVG_MARKERUNITS_UNKNOWN": <0, F, T, F>,
    "SVG_MARKERUNITS_USERSPACEONUSE": <1, F, T, F>,
    "SVG_MARKERUNITS_STROKEWIDTH": <2, F, T, F>,
    "SVG_MARKER_ORIENT_UNKNOWN": <0, F, T, F>,
    "SVG_MARKER_ORIENT_AUTO": <1, F, T, F>,
    "SVG_MARKER_ORIENT_ANGLE": <2, F, T, F>,
    "refX": <undefined, T, T, T>,
    "refY": <undefined, T, T, T>,
    "markerUnits": <undefined, T, T, T>,
    "markerWidth": <undefined, T, T, T>,
    "markerHeight": <undefined, T, T, T>,
    "orientType": <undefined, T, T, T>,
    "orientAngle": <undefined, T, T, T>,
    "viewBox": <undefined, T, T, T>,
    "preserveAspectRatio": <undefined, T, T, T>,
    "setOrientToAuto": <#Global.SVGMarkerElement.prototype.setOrientToAuto, T, T, T>,
    "setOrientToAngle": <#Global.SVGMarkerElement.prototype.setOrientToAngle, T, T, T>,
    "constructor": <#Global.SVGMarkerElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGMarkerElement.prototype.setOrientToAuto: {
    "length": <0, F, F, T>,
    "name": <"setOrientToAuto", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGMarkerElement.prototype.setOrientToAngle: {
    "length": <1, F, F, T>,
    "name": <"setOrientToAngle", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLinearGradientElement: {
    "length": <0, F, F, T>,
    "name": <"SVGLinearGradientElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGLinearGradientElement.prototype, F, F, F>,
    "SVG_SPREADMETHOD_REPEAT": <3, F, T, F>,
    "SVG_SPREADMETHOD_REFLECT": <2, F, T, F>,
    "SVG_SPREADMETHOD_PAD": <1, F, T, F>,
    "SVG_SPREADMETHOD_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRadialGradientElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGLinearGradientElement.prototype: {
    "x1": <undefined, T, T, T>,
    "y1": <undefined, T, T, T>,
    "x2": <undefined, T, T, T>,
    "y2": <undefined, T, T, T>,
    "constructor": <#Global.SVGLinearGradientElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRadialGradientElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGLineElement: {
    "length": <0, F, F, T>,
    "name": <"SVGLineElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGLineElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGLineElement.prototype: {
    "x1": <undefined, T, T, T>,
    "y1": <undefined, T, T, T>,
    "x2": <undefined, T, T, T>,
    "y2": <undefined, T, T, T>,
    "constructor": <#Global.SVGLineElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGLengthList: {
    "length": <0, F, F, T>,
    "name": <"SVGLengthList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGLengthList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGLengthList.prototype: {
    "length": <undefined, T, T, T>,
    "numberOfItems": <undefined, T, T, T>,
    "clear": <#Global.SVGLengthList.prototype.clear, T, T, T>,
    "initialize": <#Global.SVGLengthList.prototype.initialize, T, T, T>,
    "getItem": <#Global.SVGLengthList.prototype.getItem, T, T, T>,
    "insertItemBefore": <#Global.SVGLengthList.prototype.insertItemBefore, T, T, T>,
    "replaceItem": <#Global.SVGLengthList.prototype.replaceItem, T, T, T>,
    "removeItem": <#Global.SVGLengthList.prototype.removeItem, T, T, T>,
    "appendItem": <#Global.SVGLengthList.prototype.appendItem, T, T, T>,
    "constructor": <#Global.SVGLengthList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGLengthList.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLengthList.prototype.initialize: {
    "length": <1, F, F, T>,
    "name": <"initialize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLengthList.prototype.getItem: {
    "length": <1, F, F, T>,
    "name": <"getItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLengthList.prototype.insertItemBefore: {
    "length": <2, F, F, T>,
    "name": <"insertItemBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLengthList.prototype.replaceItem: {
    "length": <2, F, F, T>,
    "name": <"replaceItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLengthList.prototype.removeItem: {
    "length": <1, F, F, T>,
    "name": <"removeItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLengthList.prototype.appendItem: {
    "length": <1, F, F, T>,
    "name": <"appendItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLength: {
    "length": <0, F, F, T>,
    "name": <"SVGLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGLength.prototype, F, F, F>,
    "SVG_LENGTHTYPE_UNKNOWN": <0, F, T, F>,
    "SVG_LENGTHTYPE_NUMBER": <1, F, T, F>,
    "SVG_LENGTHTYPE_PERCENTAGE": <2, F, T, F>,
    "SVG_LENGTHTYPE_EMS": <3, F, T, F>,
    "SVG_LENGTHTYPE_EXS": <4, F, T, F>,
    "SVG_LENGTHTYPE_PX": <5, F, T, F>,
    "SVG_LENGTHTYPE_CM": <6, F, T, F>,
    "SVG_LENGTHTYPE_MM": <7, F, T, F>,
    "SVG_LENGTHTYPE_IN": <8, F, T, F>,
    "SVG_LENGTHTYPE_PT": <9, F, T, F>,
    "SVG_LENGTHTYPE_PC": <10, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGLength.prototype: {
    "SVG_LENGTHTYPE_UNKNOWN": <0, F, T, F>,
    "SVG_LENGTHTYPE_NUMBER": <1, F, T, F>,
    "SVG_LENGTHTYPE_PERCENTAGE": <2, F, T, F>,
    "SVG_LENGTHTYPE_EMS": <3, F, T, F>,
    "SVG_LENGTHTYPE_EXS": <4, F, T, F>,
    "SVG_LENGTHTYPE_PX": <5, F, T, F>,
    "SVG_LENGTHTYPE_CM": <6, F, T, F>,
    "SVG_LENGTHTYPE_MM": <7, F, T, F>,
    "SVG_LENGTHTYPE_IN": <8, F, T, F>,
    "SVG_LENGTHTYPE_PT": <9, F, T, F>,
    "SVG_LENGTHTYPE_PC": <10, F, T, F>,
    "unitType": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "valueInSpecifiedUnits": <undefined, T, T, T>,
    "valueAsString": <undefined, T, T, T>,
    "newValueSpecifiedUnits": <#Global.SVGLength.prototype.newValueSpecifiedUnits, T, T, T>,
    "convertToSpecifiedUnits": <#Global.SVGLength.prototype.convertToSpecifiedUnits, T, T, T>,
    "constructor": <#Global.SVGLength, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGLength.prototype.newValueSpecifiedUnits: {
    "length": <2, F, F, T>,
    "name": <"newValueSpecifiedUnits", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGLength.prototype.convertToSpecifiedUnits: {
    "length": <1, F, F, T>,
    "name": <"convertToSpecifiedUnits", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGImageElement: {
    "length": <0, F, F, T>,
    "name": <"SVGImageElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGImageElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGImageElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "preserveAspectRatio": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGImageElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGGElement: {
    "length": <0, F, F, T>,
    "name": <"SVGGElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGGElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGGElement.prototype: {
    "constructor": <#Global.SVGGElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGForeignObjectElement: {
    "length": <0, F, F, T>,
    "name": <"SVGForeignObjectElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGForeignObjectElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGForeignObjectElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "constructor": <#Global.SVGForeignObjectElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFilterElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFilterElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFilterElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFilterElement.prototype: {
    "filterUnits": <undefined, T, T, T>,
    "primitiveUnits": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGFilterElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFETurbulenceElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFETurbulenceElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFETurbulenceElement.prototype, F, F, F>,
    "SVG_STITCHTYPE_NOSTITCH": <2, F, T, F>,
    "SVG_STITCHTYPE_STITCH": <1, F, T, F>,
    "SVG_STITCHTYPE_UNKNOWN": <0, F, T, F>,
    "SVG_TURBULENCE_TYPE_TURBULENCE": <2, F, T, F>,
    "SVG_TURBULENCE_TYPE_FRACTALNOISE": <1, F, T, F>,
    "SVG_TURBULENCE_TYPE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFETurbulenceElement.prototype: {
    "SVG_STITCHTYPE_NOSTITCH": <2, F, T, F>,
    "SVG_STITCHTYPE_STITCH": <1, F, T, F>,
    "SVG_STITCHTYPE_UNKNOWN": <0, F, T, F>,
    "SVG_TURBULENCE_TYPE_TURBULENCE": <2, F, T, F>,
    "SVG_TURBULENCE_TYPE_FRACTALNOISE": <1, F, T, F>,
    "SVG_TURBULENCE_TYPE_UNKNOWN": <0, F, T, F>,
    "baseFrequencyX": <undefined, T, T, T>,
    "baseFrequencyY": <undefined, T, T, T>,
    "numOctaves": <undefined, T, T, T>,
    "seed": <undefined, T, T, T>,
    "stitchTiles": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFETurbulenceElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFETileElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFETileElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFETileElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFETileElement.prototype: {
    "in1": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFETileElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFESpotLightElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFESpotLightElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFESpotLightElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFESpotLightElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "z": <undefined, T, T, T>,
    "pointsAtX": <undefined, T, T, T>,
    "pointsAtY": <undefined, T, T, T>,
    "pointsAtZ": <undefined, T, T, T>,
    "specularExponent": <undefined, T, T, T>,
    "limitingConeAngle": <undefined, T, T, T>,
    "constructor": <#Global.SVGFESpotLightElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFESpecularLightingElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFESpecularLightingElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFESpecularLightingElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFESpecularLightingElement.prototype: {
    "in1": <undefined, T, T, T>,
    "surfaceScale": <undefined, T, T, T>,
    "specularConstant": <undefined, T, T, T>,
    "specularExponent": <undefined, T, T, T>,
    "kernelUnitLengthX": <undefined, T, T, T>,
    "kernelUnitLengthY": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFESpecularLightingElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEPointLightElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEPointLightElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEPointLightElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEPointLightElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "z": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEPointLightElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEOffsetElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEOffsetElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEOffsetElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEOffsetElement.prototype: {
    "in1": <undefined, T, T, T>,
    "dx": <undefined, T, T, T>,
    "dy": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEOffsetElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEMorphologyElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEMorphologyElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEMorphologyElement.prototype, F, F, F>,
    "SVG_MORPHOLOGY_OPERATOR_DILATE": <2, F, T, F>,
    "SVG_MORPHOLOGY_OPERATOR_ERODE": <1, F, T, F>,
    "SVG_MORPHOLOGY_OPERATOR_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEMorphologyElement.prototype: {
    "SVG_MORPHOLOGY_OPERATOR_DILATE": <2, F, T, F>,
    "SVG_MORPHOLOGY_OPERATOR_ERODE": <1, F, T, F>,
    "SVG_MORPHOLOGY_OPERATOR_UNKNOWN": <0, F, T, F>,
    "in1": <undefined, T, T, T>,
    "operator": <undefined, T, T, T>,
    "radiusX": <undefined, T, T, T>,
    "radiusY": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEMorphologyElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEMergeNodeElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEMergeNodeElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEMergeNodeElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEMergeNodeElement.prototype: {
    "in1": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEMergeNodeElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEMergeElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEMergeElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEMergeElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEMergeElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEMergeElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEImageElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEImageElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEImageElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEImageElement.prototype: {
    "preserveAspectRatio": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEImageElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEGaussianBlurElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEGaussianBlurElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEGaussianBlurElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEGaussianBlurElement.prototype: {
    "in1": <undefined, T, T, T>,
    "stdDeviationX": <undefined, T, T, T>,
    "stdDeviationY": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "setStdDeviation": <#Global.SVGFEGaussianBlurElement.prototype.setStdDeviation, T, T, T>,
    "constructor": <#Global.SVGFEGaussianBlurElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEGaussianBlurElement.prototype.setStdDeviation: {
    "length": <2, F, F, T>,
    "name": <"setStdDeviation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGFEFuncRElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEFuncRElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEFuncRElement.prototype, F, F, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": <5, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": <4, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": <3, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": <2, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": <1, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEFuncRElement.prototype: {
    "constructor": <#Global.SVGFEFuncRElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEFuncRElement.prototype.[[Prototype]]: {
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": <5, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": <4, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": <3, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": <2, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": <1, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": <0, F, T, F>,
    "type": <undefined, T, T, T>,
    "tableValues": <undefined, T, T, T>,
    "slope": <undefined, T, T, T>,
    "intercept": <undefined, T, T, T>,
    "amplitude": <undefined, T, T, T>,
    "exponent": <undefined, T, T, T>,
    "offset": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEFuncRElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEFuncRElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"SVGComponentTransferFunctionElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEFuncRElement.prototype.[[Prototype]], F, F, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": <5, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": <4, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": <3, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": <2, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": <1, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEFuncGElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEFuncGElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEFuncGElement.prototype, F, F, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": <5, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": <4, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": <3, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": <2, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": <1, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEFuncGElement.prototype: {
    "constructor": <#Global.SVGFEFuncGElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEFuncBElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEFuncBElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEFuncBElement.prototype, F, F, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": <5, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": <4, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": <3, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": <2, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": <1, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEFuncBElement.prototype: {
    "constructor": <#Global.SVGFEFuncBElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEFuncAElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEFuncAElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEFuncAElement.prototype, F, F, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": <5, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": <4, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": <3, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": <2, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": <1, F, T, F>,
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEFuncAElement.prototype: {
    "constructor": <#Global.SVGFEFuncAElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGFEFuncRElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEFloodElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEFloodElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEFloodElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEFloodElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEFloodElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEDropShadowElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEDropShadowElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEDropShadowElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEDropShadowElement.prototype: {
    "in1": <undefined, T, T, T>,
    "dx": <undefined, T, T, T>,
    "dy": <undefined, T, T, T>,
    "stdDeviationX": <undefined, T, T, T>,
    "stdDeviationY": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "setStdDeviation": <#Global.SVGFEDropShadowElement.prototype.setStdDeviation, T, T, T>,
    "constructor": <#Global.SVGFEDropShadowElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEDropShadowElement.prototype.setStdDeviation: {
    "length": <2, F, F, T>,
    "name": <"setStdDeviation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGFEDistantLightElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEDistantLightElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEDistantLightElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEDistantLightElement.prototype: {
    "azimuth": <undefined, T, T, T>,
    "elevation": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEDistantLightElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEDisplacementMapElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEDisplacementMapElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEDisplacementMapElement.prototype, F, F, F>,
    "SVG_CHANNEL_A": <4, F, T, F>,
    "SVG_CHANNEL_B": <3, F, T, F>,
    "SVG_CHANNEL_G": <2, F, T, F>,
    "SVG_CHANNEL_R": <1, F, T, F>,
    "SVG_CHANNEL_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEDisplacementMapElement.prototype: {
    "SVG_CHANNEL_A": <4, F, T, F>,
    "SVG_CHANNEL_B": <3, F, T, F>,
    "SVG_CHANNEL_G": <2, F, T, F>,
    "SVG_CHANNEL_R": <1, F, T, F>,
    "SVG_CHANNEL_UNKNOWN": <0, F, T, F>,
    "in1": <undefined, T, T, T>,
    "in2": <undefined, T, T, T>,
    "scale": <undefined, T, T, T>,
    "xChannelSelector": <undefined, T, T, T>,
    "yChannelSelector": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEDisplacementMapElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEDiffuseLightingElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEDiffuseLightingElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEDiffuseLightingElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEDiffuseLightingElement.prototype: {
    "in1": <undefined, T, T, T>,
    "surfaceScale": <undefined, T, T, T>,
    "diffuseConstant": <undefined, T, T, T>,
    "kernelUnitLengthX": <undefined, T, T, T>,
    "kernelUnitLengthY": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEDiffuseLightingElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEConvolveMatrixElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEConvolveMatrixElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEConvolveMatrixElement.prototype, F, F, F>,
    "SVG_EDGEMODE_NONE": <3, F, T, F>,
    "SVG_EDGEMODE_WRAP": <2, F, T, F>,
    "SVG_EDGEMODE_DUPLICATE": <1, F, T, F>,
    "SVG_EDGEMODE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEConvolveMatrixElement.prototype: {
    "SVG_EDGEMODE_NONE": <3, F, T, F>,
    "SVG_EDGEMODE_WRAP": <2, F, T, F>,
    "SVG_EDGEMODE_DUPLICATE": <1, F, T, F>,
    "SVG_EDGEMODE_UNKNOWN": <0, F, T, F>,
    "in1": <undefined, T, T, T>,
    "orderX": <undefined, T, T, T>,
    "orderY": <undefined, T, T, T>,
    "kernelMatrix": <undefined, T, T, T>,
    "divisor": <undefined, T, T, T>,
    "bias": <undefined, T, T, T>,
    "targetX": <undefined, T, T, T>,
    "targetY": <undefined, T, T, T>,
    "edgeMode": <undefined, T, T, T>,
    "kernelUnitLengthX": <undefined, T, T, T>,
    "kernelUnitLengthY": <undefined, T, T, T>,
    "preserveAlpha": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEConvolveMatrixElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFECompositeElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFECompositeElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFECompositeElement.prototype, F, F, F>,
    "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC": <6, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_XOR": <5, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_ATOP": <4, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_OUT": <3, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_IN": <2, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_OVER": <1, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFECompositeElement.prototype: {
    "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC": <6, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_XOR": <5, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_ATOP": <4, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_OUT": <3, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_IN": <2, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_OVER": <1, F, T, F>,
    "SVG_FECOMPOSITE_OPERATOR_UNKNOWN": <0, F, T, F>,
    "in2": <undefined, T, T, T>,
    "in1": <undefined, T, T, T>,
    "operator": <undefined, T, T, T>,
    "k1": <undefined, T, T, T>,
    "k2": <undefined, T, T, T>,
    "k3": <undefined, T, T, T>,
    "k4": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFECompositeElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEComponentTransferElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEComponentTransferElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEComponentTransferElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEComponentTransferElement.prototype: {
    "in1": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEComponentTransferElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEColorMatrixElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEColorMatrixElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEColorMatrixElement.prototype, F, F, F>,
    "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA": <4, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_HUEROTATE": <3, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_SATURATE": <2, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_MATRIX": <1, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEColorMatrixElement.prototype: {
    "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA": <4, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_HUEROTATE": <3, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_SATURATE": <2, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_MATRIX": <1, F, T, F>,
    "SVG_FECOLORMATRIX_TYPE_UNKNOWN": <0, F, T, F>,
    "in1": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "values": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEColorMatrixElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGFEBlendElement: {
    "length": <0, F, F, T>,
    "name": <"SVGFEBlendElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGFEBlendElement.prototype, F, F, F>,
    "SVG_FEBLEND_MODE_LIGHTEN": <5, F, T, F>,
    "SVG_FEBLEND_MODE_DARKEN": <4, F, T, F>,
    "SVG_FEBLEND_MODE_SCREEN": <3, F, T, F>,
    "SVG_FEBLEND_MODE_MULTIPLY": <2, F, T, F>,
    "SVG_FEBLEND_MODE_NORMAL": <1, F, T, F>,
    "SVG_FEBLEND_MODE_UNKNOWN": <0, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGFEBlendElement.prototype: {
    "SVG_FEBLEND_MODE_LIGHTEN": <5, F, T, F>,
    "SVG_FEBLEND_MODE_DARKEN": <4, F, T, F>,
    "SVG_FEBLEND_MODE_SCREEN": <3, F, T, F>,
    "SVG_FEBLEND_MODE_MULTIPLY": <2, F, T, F>,
    "SVG_FEBLEND_MODE_NORMAL": <1, F, T, F>,
    "SVG_FEBLEND_MODE_UNKNOWN": <0, F, T, F>,
    "in1": <undefined, T, T, T>,
    "in2": <undefined, T, T, T>,
    "mode": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "constructor": <#Global.SVGFEBlendElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGEllipseElement: {
    "length": <0, F, F, T>,
    "name": <"SVGEllipseElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGEllipseElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGEllipseElement.prototype: {
    "cx": <undefined, T, T, T>,
    "cy": <undefined, T, T, T>,
    "rx": <undefined, T, T, T>,
    "ry": <undefined, T, T, T>,
    "constructor": <#Global.SVGEllipseElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGDescElement: {
    "length": <0, F, F, T>,
    "name": <"SVGDescElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGDescElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGDescElement.prototype: {
    "constructor": <#Global.SVGDescElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGDefsElement: {
    "length": <0, F, F, T>,
    "name": <"SVGDefsElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGDefsElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGDefsElement.prototype: {
    "constructor": <#Global.SVGDefsElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGCursorElement: {
    "length": <0, F, F, T>,
    "name": <"SVGCursorElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGCursorElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGCursorElement.prototype: {
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "requiredFeatures": <undefined, T, T, T>,
    "requiredExtensions": <undefined, T, T, T>,
    "systemLanguage": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGCursorElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGClipPathElement: {
    "length": <0, F, F, T>,
    "name": <"SVGClipPathElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGClipPathElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGClipPathElement.prototype: {
    "clipPathUnits": <undefined, T, T, T>,
    "constructor": <#Global.SVGClipPathElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGCircleElement: {
    "length": <0, F, F, T>,
    "name": <"SVGCircleElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGCircleElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGCircleElement.prototype: {
    "cx": <undefined, T, T, T>,
    "cy": <undefined, T, T, T>,
    "r": <undefined, T, T, T>,
    "constructor": <#Global.SVGCircleElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGRectElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedTransformList: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedTransformList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedTransformList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedTransformList.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedTransformList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedString: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedString.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedString.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedString, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedRect: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedRect.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedRect.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedRect, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedPreserveAspectRatio: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedPreserveAspectRatio", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedPreserveAspectRatio.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedPreserveAspectRatio.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedPreserveAspectRatio, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedNumberList: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedNumberList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedNumberList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedNumberList.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedNumberList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedNumber: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedNumber", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedNumber.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedNumber.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedNumber, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedLengthList: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedLengthList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedLengthList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedLengthList.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedLengthList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedLength: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedLength", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedLength.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedLength.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedLength, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedInteger: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedInteger", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedInteger.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedInteger.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedInteger, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedEnumeration: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedEnumeration", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedEnumeration.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedEnumeration.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedEnumeration, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedBoolean: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedBoolean", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedBoolean.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedBoolean.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedBoolean, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimatedAngle: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimatedAngle", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimatedAngle.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimatedAngle.prototype: {
    "baseVal": <undefined, T, T, T>,
    "animVal": <undefined, T, T, T>,
    "constructor": <#Global.SVGAnimatedAngle, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimateTransformElement: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimateTransformElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimateTransformElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimateTransformElement.prototype: {
    "constructor": <#Global.SVGAnimateTransformElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimateMotionElement: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimateMotionElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimateMotionElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimateMotionElement.prototype: {
    "constructor": <#Global.SVGAnimateMotionElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAnimateElement: {
    "length": <0, F, F, T>,
    "name": <"SVGAnimateElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAnimateElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAnimateElement.prototype: {
    "constructor": <#Global.SVGAnimateElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGAnimationElement.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAngle: {
    "length": <0, F, F, T>,
    "name": <"SVGAngle", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAngle.prototype, F, F, F>,
    "SVG_ANGLETYPE_UNKNOWN": <0, F, T, F>,
    "SVG_ANGLETYPE_UNSPECIFIED": <1, F, T, F>,
    "SVG_ANGLETYPE_DEG": <2, F, T, F>,
    "SVG_ANGLETYPE_RAD": <3, F, T, F>,
    "SVG_ANGLETYPE_GRAD": <4, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAngle.prototype: {
    "SVG_ANGLETYPE_UNKNOWN": <0, F, T, F>,
    "SVG_ANGLETYPE_UNSPECIFIED": <1, F, T, F>,
    "SVG_ANGLETYPE_DEG": <2, F, T, F>,
    "SVG_ANGLETYPE_RAD": <3, F, T, F>,
    "SVG_ANGLETYPE_GRAD": <4, F, T, F>,
    "unitType": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "valueInSpecifiedUnits": <undefined, T, T, T>,
    "valueAsString": <undefined, T, T, T>,
    "newValueSpecifiedUnits": <#Global.SVGAngle.prototype.newValueSpecifiedUnits, T, T, T>,
    "convertToSpecifiedUnits": <#Global.SVGAngle.prototype.convertToSpecifiedUnits, T, T, T>,
    "constructor": <#Global.SVGAngle, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.SVGAngle.prototype.newValueSpecifiedUnits: {
    "length": <2, F, F, T>,
    "name": <"newValueSpecifiedUnits", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAngle.prototype.convertToSpecifiedUnits: {
    "length": <1, F, F, T>,
    "name": <"convertToSpecifiedUnits", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.SVGAElement: {
    "length": <0, F, F, T>,
    "name": <"SVGAElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.SVGAElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.SVGAElement.prototype: {
    "target": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "constructor": <#Global.SVGAElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGUseElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Range: {
    "length": <0, F, F, T>,
    "name": <"Range", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Range.prototype, F, F, F>,
    "START_TO_START": <0, F, T, F>,
    "START_TO_END": <1, F, T, F>,
    "END_TO_END": <2, F, T, F>,
    "END_TO_START": <3, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Range.prototype: {
    "START_TO_START": <0, F, T, F>,
    "START_TO_END": <1, F, T, F>,
    "END_TO_END": <2, F, T, F>,
    "END_TO_START": <3, F, T, F>,
    "startContainer": <undefined, T, T, T>,
    "startOffset": <undefined, T, T, T>,
    "endContainer": <undefined, T, T, T>,
    "endOffset": <undefined, T, T, T>,
    "collapsed": <undefined, T, T, T>,
    "commonAncestorContainer": <undefined, T, T, T>,
    "setStart": <#Global.Range.prototype.setStart, T, T, T>,
    "setEnd": <#Global.Range.prototype.setEnd, T, T, T>,
    "setStartBefore": <#Global.Range.prototype.setStartBefore, T, T, T>,
    "setStartAfter": <#Global.Range.prototype.setStartAfter, T, T, T>,
    "setEndBefore": <#Global.Range.prototype.setEndBefore, T, T, T>,
    "setEndAfter": <#Global.Range.prototype.setEndAfter, T, T, T>,
    "collapse": <#Global.Range.prototype.collapse, T, T, T>,
    "selectNode": <#Global.Range.prototype.selectNode, T, T, T>,
    "selectNodeContents": <#Global.Range.prototype.selectNodeContents, T, T, T>,
    "compareBoundaryPoints": <#Global.Range.prototype.compareBoundaryPoints, T, T, T>,
    "deleteContents": <#Global.Range.prototype.deleteContents, T, T, T>,
    "extractContents": <#Global.Range.prototype.extractContents, T, T, T>,
    "cloneContents": <#Global.Range.prototype.cloneContents, T, T, T>,
    "insertNode": <#Global.Range.prototype.insertNode, T, T, T>,
    "surroundContents": <#Global.Range.prototype.surroundContents, T, T, T>,
    "cloneRange": <#Global.Range.prototype.cloneRange, T, T, T>,
    "detach": <#Global.Range.prototype.detach, T, T, T>,
    "isPointInRange": <#Global.Range.prototype.isPointInRange, T, T, T>,
    "comparePoint": <#Global.Range.prototype.comparePoint, T, T, T>,
    "intersectsNode": <#Global.Range.prototype.intersectsNode, T, T, T>,
    "getClientRects": <#Global.Range.prototype.getClientRects, T, T, T>,
    "getBoundingClientRect": <#Global.Range.prototype.getBoundingClientRect, T, T, T>,
    "createContextualFragment": <#Global.Range.prototype.createContextualFragment, T, T, T>,
    "expand": <#Global.Range.prototype.expand, T, T, T>,
    "toString": <#Global.Range.prototype.toString, T, T, T>,
    "constructor": <#Global.Range, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Range.prototype.setStart: {
    "length": <2, F, F, T>,
    "name": <"setStart", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.setEnd: {
    "length": <2, F, F, T>,
    "name": <"setEnd", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.setStartBefore: {
    "length": <1, F, F, T>,
    "name": <"setStartBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.setStartAfter: {
    "length": <1, F, F, T>,
    "name": <"setStartAfter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.setEndBefore: {
    "length": <1, F, F, T>,
    "name": <"setEndBefore", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.setEndAfter: {
    "length": <1, F, F, T>,
    "name": <"setEndAfter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.collapse: {
    "length": <0, F, F, T>,
    "name": <"collapse", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.selectNode: {
    "length": <1, F, F, T>,
    "name": <"selectNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.selectNodeContents: {
    "length": <1, F, F, T>,
    "name": <"selectNodeContents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.compareBoundaryPoints: {
    "length": <2, F, F, T>,
    "name": <"compareBoundaryPoints", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.deleteContents: {
    "length": <0, F, F, T>,
    "name": <"deleteContents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.extractContents: {
    "length": <0, F, F, T>,
    "name": <"extractContents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.cloneContents: {
    "length": <0, F, F, T>,
    "name": <"cloneContents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.insertNode: {
    "length": <1, F, F, T>,
    "name": <"insertNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.surroundContents: {
    "length": <1, F, F, T>,
    "name": <"surroundContents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.cloneRange: {
    "length": <0, F, F, T>,
    "name": <"cloneRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.detach: {
    "length": <0, F, F, T>,
    "name": <"detach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.isPointInRange: {
    "length": <2, F, F, T>,
    "name": <"isPointInRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.comparePoint: {
    "length": <2, F, F, T>,
    "name": <"comparePoint", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.intersectsNode: {
    "length": <1, F, F, T>,
    "name": <"intersectsNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.getClientRects: {
    "length": <0, F, F, T>,
    "name": <"getClientRects", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.getBoundingClientRect: {
    "length": <0, F, F, T>,
    "name": <"getBoundingClientRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.createContextualFragment: {
    "length": <1, F, F, T>,
    "name": <"createContextualFragment", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.expand: {
    "length": <0, F, F, T>,
    "name": <"expand", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Range.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RadioNodeList: {
    "length": <0, F, F, T>,
    "name": <"RadioNodeList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RadioNodeList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.RadioNodeList.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.RadioNodeList.prototype: {
    "value": <undefined, T, T, T>,
    "constructor": <#Global.RadioNodeList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.RadioNodeList.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.RadioNodeList.prototype.[[Prototype]]: {
    "length": <undefined, T, T, T>,
    "item": <#Global.RadioNodeList.prototype.[[Prototype]].item, T, T, T>,
    "keys": <#Global.RadioNodeList.prototype.[[Prototype]].keys, T, T, T>,
    "values": <#Global.RadioNodeList.prototype.[[Prototype]].values, T, T, T>,
    "entries": <#Global.RadioNodeList.prototype.[[Prototype]].entries, T, T, T>,
    "forEach": <#Global.RadioNodeList.prototype.[[Prototype]].forEach, T, T, T>,
    "constructor": <#Global.RadioNodeList.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.RadioNodeList.prototype.[[Prototype]].item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RadioNodeList.prototype.[[Prototype]].keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RadioNodeList.prototype.[[Prototype]].values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RadioNodeList.prototype.[[Prototype]].entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RadioNodeList.prototype.[[Prototype]].forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.RadioNodeList.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"NodeList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.RadioNodeList.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PromiseRejectionEvent: {
    "length": <2, F, F, T>,
    "name": <"PromiseRejectionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PromiseRejectionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PromiseRejectionEvent.prototype: {
    "promise": <undefined, T, T, T>,
    "reason": <undefined, T, T, T>,
    "constructor": <#Global.PromiseRejectionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ProgressEvent: {
    "length": <1, F, F, T>,
    "name": <"ProgressEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ProgressEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ProgressEvent.prototype: {
    "lengthComputable": <undefined, T, T, T>,
    "loaded": <undefined, T, T, T>,
    "total": <undefined, T, T, T>,
    "constructor": <#Global.ProgressEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ProcessingInstruction: {
    "length": <0, F, F, T>,
    "name": <"ProcessingInstruction", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ProcessingInstruction.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ProcessingInstruction.prototype: {
    "target": <undefined, T, T, T>,
    "sheet": <undefined, T, T, T>,
    "constructor": <#Global.ProcessingInstruction, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PopStateEvent: {
    "length": <1, F, F, T>,
    "name": <"PopStateEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PopStateEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PopStateEvent.prototype: {
    "state": <undefined, T, T, T>,
    "constructor": <#Global.PopStateEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PerformanceTiming: {
    "length": <0, F, F, T>,
    "name": <"PerformanceTiming", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceTiming.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceTiming.prototype: {
    "navigationStart": <undefined, T, T, T>,
    "unloadEventStart": <undefined, T, T, T>,
    "unloadEventEnd": <undefined, T, T, T>,
    "redirectStart": <undefined, T, T, T>,
    "redirectEnd": <undefined, T, T, T>,
    "fetchStart": <undefined, T, T, T>,
    "domainLookupStart": <undefined, T, T, T>,
    "domainLookupEnd": <undefined, T, T, T>,
    "connectStart": <undefined, T, T, T>,
    "connectEnd": <undefined, T, T, T>,
    "secureConnectionStart": <undefined, T, T, T>,
    "requestStart": <undefined, T, T, T>,
    "responseStart": <undefined, T, T, T>,
    "responseEnd": <undefined, T, T, T>,
    "domLoading": <undefined, T, T, T>,
    "domInteractive": <undefined, T, T, T>,
    "domContentLoadedEventStart": <undefined, T, T, T>,
    "domContentLoadedEventEnd": <undefined, T, T, T>,
    "domComplete": <undefined, T, T, T>,
    "loadEventStart": <undefined, T, T, T>,
    "loadEventEnd": <undefined, T, T, T>,
    "toJSON": <#Global.PerformanceTiming.prototype.toJSON, T, T, T>,
    "constructor": <#Global.PerformanceTiming, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PerformanceTiming.prototype.toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceResourceTiming: {
    "length": <0, F, F, T>,
    "name": <"PerformanceResourceTiming", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceResourceTiming.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PerformanceResourceTiming.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceResourceTiming.prototype: {
    "initiatorType": <undefined, T, T, T>,
    "workerStart": <undefined, T, T, T>,
    "redirectStart": <undefined, T, T, T>,
    "redirectEnd": <undefined, T, T, T>,
    "fetchStart": <undefined, T, T, T>,
    "domainLookupStart": <undefined, T, T, T>,
    "domainLookupEnd": <undefined, T, T, T>,
    "connectStart": <undefined, T, T, T>,
    "connectEnd": <undefined, T, T, T>,
    "secureConnectionStart": <undefined, T, T, T>,
    "requestStart": <undefined, T, T, T>,
    "responseStart": <undefined, T, T, T>,
    "responseEnd": <undefined, T, T, T>,
    "transferSize": <undefined, T, T, T>,
    "encodedBodySize": <undefined, T, T, T>,
    "decodedBodySize": <undefined, T, T, T>,
    "constructor": <#Global.PerformanceResourceTiming, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PerformanceResourceTiming.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PerformanceResourceTiming.prototype.[[Prototype]]: {
    "name": <undefined, T, T, T>,
    "entryType": <undefined, T, T, T>,
    "startTime": <undefined, T, T, T>,
    "duration": <undefined, T, T, T>,
    "toJSON": <#Global.PerformanceResourceTiming.prototype.[[Prototype]].toJSON, T, T, T>,
    "constructor": <#Global.PerformanceResourceTiming.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PerformanceResourceTiming.prototype.[[Prototype]].toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceResourceTiming.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"PerformanceEntry", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceResourceTiming.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceNavigation: {
    "length": <0, F, F, T>,
    "name": <"PerformanceNavigation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceNavigation.prototype, F, F, F>,
    "TYPE_NAVIGATE": <0, F, T, F>,
    "TYPE_RELOAD": <1, F, T, F>,
    "TYPE_BACK_FORWARD": <2, F, T, F>,
    "TYPE_RESERVED": <255, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceNavigation.prototype: {
    "TYPE_NAVIGATE": <0, F, T, F>,
    "TYPE_RELOAD": <1, F, T, F>,
    "TYPE_BACK_FORWARD": <2, F, T, F>,
    "TYPE_RESERVED": <255, F, T, F>,
    "type": <undefined, T, T, T>,
    "redirectCount": <undefined, T, T, T>,
    "toJSON": <#Global.PerformanceNavigation.prototype.toJSON, T, T, T>,
    "constructor": <#Global.PerformanceNavigation, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.PerformanceNavigation.prototype.toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PerformanceMeasure: {
    "length": <0, F, F, T>,
    "name": <"PerformanceMeasure", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceMeasure.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PerformanceResourceTiming.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceMeasure.prototype: {
    "constructor": <#Global.PerformanceMeasure, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PerformanceResourceTiming.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.PerformanceMark: {
    "length": <0, F, F, T>,
    "name": <"PerformanceMark", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PerformanceMark.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PerformanceResourceTiming.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PerformanceMark.prototype: {
    "constructor": <#Global.PerformanceMark, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PerformanceResourceTiming.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Performance: {
    "length": <0, F, F, T>,
    "name": <"Performance", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Performance.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype: {
    "onresourcetimingbufferfull": <undefined, T, T, T>,
    "onwebkitresourcetimingbufferfull": <undefined, T, T, T>,
    "timing": <undefined, T, T, T>,
    "navigation": <undefined, T, T, T>,
    "memory": <undefined, T, T, T>,
    "now": <#Global.Performance.prototype.now, T, T, T>,
    "getEntries": <#Global.Performance.prototype.getEntries, T, T, T>,
    "getEntriesByType": <#Global.Performance.prototype.getEntriesByType, T, T, T>,
    "getEntriesByName": <#Global.Performance.prototype.getEntriesByName, T, T, T>,
    "clearResourceTimings": <#Global.Performance.prototype.clearResourceTimings, T, T, T>,
    "setResourceTimingBufferSize": <#Global.Performance.prototype.setResourceTimingBufferSize, T, T, T>,
    "webkitClearResourceTimings": <#Global.Performance.prototype.webkitClearResourceTimings, T, T, T>,
    "webkitSetResourceTimingBufferSize": <#Global.Performance.prototype.webkitSetResourceTimingBufferSize, T, T, T>,
    "mark": <#Global.Performance.prototype.mark, T, T, T>,
    "clearMarks": <#Global.Performance.prototype.clearMarks, T, T, T>,
    "measure": <#Global.Performance.prototype.measure, T, T, T>,
    "clearMeasures": <#Global.Performance.prototype.clearMeasures, T, T, T>,
    "toJSON": <#Global.Performance.prototype.toJSON, T, T, T>,
    "constructor": <#Global.Performance, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Performance.prototype.now: {
    "length": <0, F, F, T>,
    "name": <"now", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.getEntries: {
    "length": <0, F, F, T>,
    "name": <"getEntries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.getEntriesByType: {
    "length": <1, F, F, T>,
    "name": <"getEntriesByType", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.getEntriesByName: {
    "length": <1, F, F, T>,
    "name": <"getEntriesByName", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.clearResourceTimings: {
    "length": <0, F, F, T>,
    "name": <"clearResourceTimings", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.setResourceTimingBufferSize: {
    "length": <1, F, F, T>,
    "name": <"setResourceTimingBufferSize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.webkitClearResourceTimings: {
    "length": <0, F, F, T>,
    "name": <"webkitClearResourceTimings", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.webkitSetResourceTimingBufferSize: {
    "length": <1, F, F, T>,
    "name": <"webkitSetResourceTimingBufferSize", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.mark: {
    "length": <1, F, F, T>,
    "name": <"mark", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.clearMarks: {
    "length": <0, F, F, T>,
    "name": <"clearMarks", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.measure: {
    "length": <1, F, F, T>,
    "name": <"measure", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.clearMeasures: {
    "length": <0, F, F, T>,
    "name": <"clearMeasures", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Performance.prototype.toJSON: {
    "length": <0, F, F, T>,
    "name": <"toJSON", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.PageTransitionEvent: {
    "length": <1, F, F, T>,
    "name": <"PageTransitionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.PageTransitionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.PageTransitionEvent.prototype: {
    "persisted": <undefined, T, T, T>,
    "constructor": <#Global.PageTransitionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.NodeIterator: {
    "length": <0, F, F, T>,
    "name": <"NodeIterator", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.NodeIterator.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.NodeIterator.prototype: {
    "root": <undefined, T, T, T>,
    "referenceNode": <undefined, T, T, T>,
    "pointerBeforeReferenceNode": <undefined, T, T, T>,
    "whatToShow": <undefined, T, T, T>,
    "filter": <undefined, T, T, T>,
    "nextNode": <#Global.NodeIterator.prototype.nextNode, T, T, T>,
    "previousNode": <#Global.NodeIterator.prototype.previousNode, T, T, T>,
    "detach": <#Global.NodeIterator.prototype.detach, T, T, T>,
    "constructor": <#Global.NodeIterator, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.NodeIterator.prototype.nextNode: {
    "length": <0, F, F, T>,
    "name": <"nextNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NodeIterator.prototype.previousNode: {
    "length": <0, F, F, T>,
    "name": <"previousNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NodeIterator.prototype.detach: {
    "length": <0, F, F, T>,
    "name": <"detach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NodeFilter: {
    "length": <0, F, F, T>,
    "name": <"NodeFilter", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.NodeFilter.prototype, F, F, F>,
    "FILTER_ACCEPT": <1, F, T, F>,
    "FILTER_REJECT": <2, F, T, F>,
    "FILTER_SKIP": <3, F, T, F>,
    "SHOW_ALL": <4294967295, F, T, F>,
    "SHOW_ELEMENT": <1, F, T, F>,
    "SHOW_ATTRIBUTE": <2, F, T, F>,
    "SHOW_TEXT": <4, F, T, F>,
    "SHOW_CDATA_SECTION": <8, F, T, F>,
    "SHOW_ENTITY_REFERENCE": <16, F, T, F>,
    "SHOW_ENTITY": <32, F, T, F>,
    "SHOW_PROCESSING_INSTRUCTION": <64, F, T, F>,
    "SHOW_COMMENT": <128, F, T, F>,
    "SHOW_DOCUMENT": <256, F, T, F>,
    "SHOW_DOCUMENT_TYPE": <512, F, T, F>,
    "SHOW_DOCUMENT_FRAGMENT": <1024, F, T, F>,
    "SHOW_NOTATION": <2048, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.NodeFilter.prototype: {
    "FILTER_ACCEPT": <1, F, T, F>,
    "FILTER_REJECT": <2, F, T, F>,
    "FILTER_SKIP": <3, F, T, F>,
    "SHOW_ALL": <4294967295, F, T, F>,
    "SHOW_ELEMENT": <1, F, T, F>,
    "SHOW_ATTRIBUTE": <2, F, T, F>,
    "SHOW_TEXT": <4, F, T, F>,
    "SHOW_CDATA_SECTION": <8, F, T, F>,
    "SHOW_ENTITY_REFERENCE": <16, F, T, F>,
    "SHOW_ENTITY": <32, F, T, F>,
    "SHOW_PROCESSING_INSTRUCTION": <64, F, T, F>,
    "SHOW_COMMENT": <128, F, T, F>,
    "SHOW_DOCUMENT": <256, F, T, F>,
    "SHOW_DOCUMENT_TYPE": <512, F, T, F>,
    "SHOW_DOCUMENT_FRAGMENT": <1024, F, T, F>,
    "SHOW_NOTATION": <2048, F, T, F>,
    "acceptNode": <#Global.NodeFilter.prototype.acceptNode, T, T, T>,
    "constructor": <#Global.NodeFilter, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.NodeFilter.prototype.acceptNode: {
    "length": <0, F, F, T>,
    "name": <"acceptNode", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator: {
    "length": <0, F, F, T>,
    "name": <"Navigator", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Navigator.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype: {
    "vendorSub": <undefined, T, T, T>,
    "productSub": <undefined, T, T, T>,
    "vendor": <undefined, T, T, T>,
    "maxTouchPoints": <undefined, T, T, T>,
    "hardwareConcurrency": <undefined, T, T, T>,
    "appCodeName": <undefined, T, T, T>,
    "appName": <undefined, T, T, T>,
    "appVersion": <undefined, T, T, T>,
    "platform": <undefined, T, T, T>,
    "product": <undefined, T, T, T>,
    "userAgent": <string, T, T, T>,
    "language": <undefined, T, T, T>,
    "languages": <undefined, T, T, T>,
    "onLine": <undefined, T, T, T>,
    "cookieEnabled": <undefined, T, T, T>,
    "doNotTrack": <undefined, T, T, T>,
    "geolocation": <undefined, T, T, T>,
    "mediaDevices": <undefined, T, T, T>,
    "plugins": <undefined, T, T, T>,
    "mimeTypes": <undefined, T, T, T>,
    "webkitTemporaryStorage": <undefined, T, T, T>,
    "webkitPersistentStorage": <undefined, T, T, T>,
    "serviceWorker": <undefined, T, T, T>,
    "getBattery": <#Global.Navigator.prototype.getBattery, T, T, T>,
    "sendBeacon": <#Global.Navigator.prototype.sendBeacon, T, T, T>,
    "requestMediaKeySystemAccess": <#Global.Navigator.prototype.requestMediaKeySystemAccess, T, T, T>,
    "getGamepads": <#Global.Navigator.prototype.getGamepads, T, T, T>,
    "webkitGetUserMedia": <#Global.Navigator.prototype.webkitGetUserMedia, T, T, T>,
    "javaEnabled": <#Global.Navigator.prototype.javaEnabled, T, T, T>,
    "vibrate": <#Global.Navigator.prototype.vibrate, T, T, T>,
    "requestMIDIAccess": <#Global.Navigator.prototype.requestMIDIAccess, T, T, T>,
    "credentials": <undefined, T, T, T>,
    "storage": <undefined, T, T, T>,
    "permissions": <undefined, T, T, T>,
    "presentation": <undefined, T, T, T>,
    "bluetooth": <undefined, T, T, T>,
    "getUserMedia": <#Global.Navigator.prototype.getUserMedia, T, T, T>,
    "registerProtocolHandler": <#Global.Navigator.prototype.registerProtocolHandler, T, T, T>,
    "unregisterProtocolHandler": <#Global.Navigator.prototype.unregisterProtocolHandler, T, T, T>,
    "constructor": <#Global.Navigator, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Navigator.prototype.getBattery: {
    "length": <0, F, F, T>,
    "name": <"getBattery", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.sendBeacon: {
    "length": <1, F, F, T>,
    "name": <"sendBeacon", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.requestMediaKeySystemAccess: {
    "length": <2, F, F, T>,
    "name": <"requestMediaKeySystemAccess", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.getGamepads: {
    "length": <0, F, F, T>,
    "name": <"getGamepads", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.webkitGetUserMedia: {
    "length": <3, F, F, T>,
    "name": <"webkitGetUserMedia", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.javaEnabled: {
    "length": <0, F, F, T>,
    "name": <"javaEnabled", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.vibrate: {
    "length": <1, F, F, T>,
    "name": <"vibrate", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.requestMIDIAccess: {
    "length": <0, F, F, T>,
    "name": <"requestMIDIAccess", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.getUserMedia: {
    "length": <3, F, F, T>,
    "name": <"getUserMedia", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.registerProtocolHandler: {
    "length": <3, F, F, T>,
    "name": <"registerProtocolHandler", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Navigator.prototype.unregisterProtocolHandler: {
    "length": <2, F, F, T>,
    "name": <"unregisterProtocolHandler", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap: {
    "length": <0, F, F, T>,
    "name": <"NamedNodeMap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.NamedNodeMap.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.NamedNodeMap.prototype.item, T, T, T>,
    "getNamedItem": <#Global.NamedNodeMap.prototype.getNamedItem, T, T, T>,
    "getNamedItemNS": <#Global.NamedNodeMap.prototype.getNamedItemNS, T, T, T>,
    "setNamedItem": <#Global.NamedNodeMap.prototype.setNamedItem, T, T, T>,
    "setNamedItemNS": <#Global.NamedNodeMap.prototype.setNamedItemNS, T, T, T>,
    "removeNamedItem": <#Global.NamedNodeMap.prototype.removeNamedItem, T, T, T>,
    "removeNamedItemNS": <#Global.NamedNodeMap.prototype.removeNamedItemNS, T, T, T>,
    "constructor": <#Global.NamedNodeMap, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.NamedNodeMap.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap.prototype.getNamedItem: {
    "length": <1, F, F, T>,
    "name": <"getNamedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap.prototype.getNamedItemNS: {
    "length": <2, F, F, T>,
    "name": <"getNamedItemNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap.prototype.setNamedItem: {
    "length": <1, F, F, T>,
    "name": <"setNamedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap.prototype.setNamedItemNS: {
    "length": <1, F, F, T>,
    "name": <"setNamedItemNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap.prototype.removeNamedItem: {
    "length": <1, F, F, T>,
    "name": <"removeNamedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.NamedNodeMap.prototype.removeNamedItemNS: {
    "length": <2, F, F, T>,
    "name": <"removeNamedItemNS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MutationRecord: {
    "length": <0, F, F, T>,
    "name": <"MutationRecord", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MutationRecord.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MutationRecord.prototype: {
    "type": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "addedNodes": <undefined, T, T, T>,
    "removedNodes": <undefined, T, T, T>,
    "previousSibling": <undefined, T, T, T>,
    "nextSibling": <undefined, T, T, T>,
    "attributeName": <undefined, T, T, T>,
    "attributeNamespace": <undefined, T, T, T>,
    "oldValue": <undefined, T, T, T>,
    "constructor": <#Global.MutationRecord, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MutationObserver: {
    "length": <1, F, F, T>,
    "name": <"MutationObserver", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MutationObserver.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MutationObserver.prototype: {
    "observe": <#Global.MutationObserver.prototype.observe, T, T, T>,
    "disconnect": <#Global.MutationObserver.prototype.disconnect, T, T, T>,
    "takeRecords": <#Global.MutationObserver.prototype.takeRecords, T, T, T>,
    "constructor": <#Global.MutationObserver, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MutationObserver.prototype.observe: {
    "length": <2, F, F, T>,
    "name": <"observe", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MutationObserver.prototype.disconnect: {
    "length": <0, F, F, T>,
    "name": <"disconnect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MutationObserver.prototype.takeRecords: {
    "length": <0, F, F, T>,
    "name": <"takeRecords", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MutationEvent: {
    "length": <0, F, F, T>,
    "name": <"MutationEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MutationEvent.prototype, F, F, F>,
    "MODIFICATION": <1, F, T, F>,
    "ADDITION": <2, F, T, F>,
    "REMOVAL": <3, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MutationEvent.prototype: {
    "MODIFICATION": <1, F, T, F>,
    "ADDITION": <2, F, T, F>,
    "REMOVAL": <3, F, T, F>,
    "relatedNode": <undefined, T, T, T>,
    "prevValue": <undefined, T, T, T>,
    "newValue": <undefined, T, T, T>,
    "attrName": <undefined, T, T, T>,
    "attrChange": <undefined, T, T, T>,
    "initMutationEvent": <#Global.MutationEvent.prototype.initMutationEvent, T, T, T>,
    "constructor": <#Global.MutationEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MutationEvent.prototype.initMutationEvent: {
    "length": <0, F, F, T>,
    "name": <"initMutationEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MessagePort: {
    "length": <0, F, F, T>,
    "name": <"MessagePort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MessagePort.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MessagePort.prototype: {
    "onmessage": <undefined, T, T, T>,
    "postMessage": <#Global.MessagePort.prototype.postMessage, T, T, T>,
    "start": <#Global.MessagePort.prototype.start, T, T, T>,
    "close": <#Global.MessagePort.prototype.close, T, T, T>,
    "constructor": <#Global.MessagePort, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MessagePort.prototype.postMessage: {
    "length": <1, F, F, T>,
    "name": <"postMessage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MessagePort.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MessagePort.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MessageEvent: {
    "length": <1, F, F, T>,
    "name": <"MessageEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MessageEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MessageEvent.prototype: {
    "data": <undefined, T, T, T>,
    "origin": <undefined, T, T, T>,
    "lastEventId": <undefined, T, T, T>,
    "source": <undefined, T, T, T>,
    "ports": <undefined, T, T, T>,
    "initMessageEvent": <#Global.MessageEvent.prototype.initMessageEvent, T, T, T>,
    "constructor": <#Global.MessageEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MessageEvent.prototype.initMessageEvent: {
    "length": <0, F, F, T>,
    "name": <"initMessageEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MessageChannel: {
    "length": <0, F, F, T>,
    "name": <"MessageChannel", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MessageChannel.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MessageChannel.prototype: {
    "port1": <undefined, T, T, T>,
    "port2": <undefined, T, T, T>,
    "constructor": <#Global.MessageChannel, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MediaQueryListEvent: {
    "length": <1, F, F, T>,
    "name": <"MediaQueryListEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaQueryListEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaQueryListEvent.prototype: {
    "media": <undefined, T, T, T>,
    "matches": <undefined, T, T, T>,
    "constructor": <#Global.MediaQueryListEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaQueryList: {
    "length": <0, F, F, T>,
    "name": <"MediaQueryList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaQueryList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaQueryList.prototype: {
    "media": <undefined, T, T, T>,
    "matches": <undefined, T, T, T>,
    "onchange": <undefined, T, T, T>,
    "addListener": <#Global.MediaQueryList.prototype.addListener, T, T, T>,
    "removeListener": <#Global.MediaQueryList.prototype.removeListener, T, T, T>,
    "constructor": <#Global.MediaQueryList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.MediaQueryList.prototype.addListener: {
    "length": <1, F, F, T>,
    "name": <"addListener", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaQueryList.prototype.removeListener: {
    "length": <1, F, F, T>,
    "name": <"removeListener", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaList: {
    "length": <0, F, F, T>,
    "name": <"MediaList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaList.prototype: {
    "mediaText": <undefined, T, T, T>,
    "length": <undefined, T, T, T>,
    "item": <#Global.MediaList.prototype.item, T, T, T>,
    "appendMedium": <#Global.MediaList.prototype.appendMedium, T, T, T>,
    "deleteMedium": <#Global.MediaList.prototype.deleteMedium, T, T, T>,
    "constructor": <#Global.MediaList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.MediaList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaList.prototype.appendMedium: {
    "length": <1, F, F, T>,
    "name": <"appendMedium", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaList.prototype.deleteMedium: {
    "length": <1, F, F, T>,
    "name": <"deleteMedium", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.MediaError: {
    "length": <0, F, F, T>,
    "name": <"MediaError", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.MediaError.prototype, F, F, F>,
    "MEDIA_ERR_ABORTED": <1, F, T, F>,
    "MEDIA_ERR_NETWORK": <2, F, T, F>,
    "MEDIA_ERR_DECODE": <3, F, T, F>,
    "MEDIA_ERR_SRC_NOT_SUPPORTED": <4, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.MediaError.prototype: {
    "MEDIA_ERR_ABORTED": <1, F, T, F>,
    "MEDIA_ERR_NETWORK": <2, F, T, F>,
    "MEDIA_ERR_DECODE": <3, F, T, F>,
    "MEDIA_ERR_SRC_NOT_SUPPORTED": <4, F, T, F>,
    "code": <undefined, T, T, T>,
    "constructor": <#Global.MediaError, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Location: {
    "length": <0, F, F, T>,
    "name": <"Location", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Location.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Location.prototype: {
    "constructor": <#Global.Location, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.KeyboardEvent: {
    "length": <1, F, F, T>,
    "name": <"KeyboardEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.KeyboardEvent.prototype, F, F, F>,
    "DOM_KEY_LOCATION_STANDARD": <0, F, T, F>,
    "DOM_KEY_LOCATION_LEFT": <1, F, T, F>,
    "DOM_KEY_LOCATION_RIGHT": <2, F, T, F>,
    "DOM_KEY_LOCATION_NUMPAD": <3, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.KeyboardEvent.prototype: {
    "DOM_KEY_LOCATION_STANDARD": <0, F, T, F>,
    "DOM_KEY_LOCATION_LEFT": <1, F, T, F>,
    "DOM_KEY_LOCATION_RIGHT": <2, F, T, F>,
    "DOM_KEY_LOCATION_NUMPAD": <3, F, T, F>,
    "key": <undefined, T, T, T>,
    "code": <undefined, T, T, T>,
    "location": <undefined, T, T, T>,
    "ctrlKey": <undefined, T, T, T>,
    "shiftKey": <undefined, T, T, T>,
    "altKey": <undefined, T, T, T>,
    "metaKey": <undefined, T, T, T>,
    "repeat": <undefined, T, T, T>,
    "isComposing": <undefined, T, T, T>,
    "charCode": <undefined, T, T, T>,
    "keyCode": <undefined, T, T, T>,
    "which": <undefined, T, T, T>,
    "getModifierState": <#Global.KeyboardEvent.prototype.getModifierState, T, T, T>,
    "initKeyboardEvent": <#Global.KeyboardEvent.prototype.initKeyboardEvent, T, T, T>,
    "constructor": <#Global.KeyboardEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.KeyboardEvent.prototype.getModifierState: {
    "length": <1, F, F, T>,
    "name": <"getModifierState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.KeyboardEvent.prototype.initKeyboardEvent: {
    "length": <0, F, F, T>,
    "name": <"initKeyboardEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.InputDeviceCapabilities: {
    "length": <0, F, F, T>,
    "name": <"InputDeviceCapabilities", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.InputDeviceCapabilities.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.InputDeviceCapabilities.prototype: {
    "firesTouchEvents": <undefined, T, T, T>,
    "constructor": <#Global.InputDeviceCapabilities, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ImageData: {
    "length": <2, F, F, T>,
    "name": <"ImageData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ImageData.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ImageData.prototype: {
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "constructor": <#Global.ImageData, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ImageBitmap: {
    "length": <0, F, F, T>,
    "name": <"ImageBitmap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ImageBitmap.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ImageBitmap.prototype: {
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "close": <#Global.ImageBitmap.prototype.close, T, T, T>,
    "constructor": <#Global.ImageBitmap, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ImageBitmap.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.IdleDeadline: {
    "length": <0, F, F, T>,
    "name": <"IdleDeadline", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.IdleDeadline.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.IdleDeadline.prototype: {
    "didTimeout": <undefined, T, T, T>,
    "timeRemaining": <#Global.IdleDeadline.prototype.timeRemaining, T, T, T>,
    "constructor": <#Global.IdleDeadline, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.IdleDeadline.prototype.timeRemaining: {
    "length": <0, F, F, T>,
    "name": <"timeRemaining", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.History: {
    "length": <0, F, F, T>,
    "name": <"History", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.History.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.History.prototype: {
    "length": <undefined, T, T, T>,
    "scrollRestoration": <undefined, T, T, T>,
    "state": <undefined, T, T, T>,
    "go": <#Global.History.prototype.go, T, T, T>,
    "back": <#Global.History.prototype.back, T, T, T>,
    "forward": <#Global.History.prototype.forward, T, T, T>,
    "pushState": <#Global.History.prototype.pushState, T, T, T>,
    "replaceState": <#Global.History.prototype.replaceState, T, T, T>,
    "constructor": <#Global.History, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.History.prototype.go: {
    "length": <0, F, F, T>,
    "name": <"go", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.History.prototype.back: {
    "length": <0, F, F, T>,
    "name": <"back", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.History.prototype.forward: {
    "length": <0, F, F, T>,
    "name": <"forward", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.History.prototype.pushState: {
    "length": <2, F, F, T>,
    "name": <"pushState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.History.prototype.replaceState: {
    "length": <2, F, F, T>,
    "name": <"replaceState", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HashChangeEvent: {
    "length": <1, F, F, T>,
    "name": <"HashChangeEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HashChangeEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HashChangeEvent.prototype: {
    "oldURL": <undefined, T, T, T>,
    "newURL": <undefined, T, T, T>,
    "constructor": <#Global.HashChangeEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLVideoElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLVideoElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLVideoElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLVideoElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype: {
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "videoWidth": <undefined, T, T, T>,
    "videoHeight": <undefined, T, T, T>,
    "poster": <undefined, T, T, T>,
    "webkitDecodedFrameCount": <undefined, T, T, T>,
    "webkitDroppedFrameCount": <undefined, T, T, T>,
    "webkitDisplayingFullscreen": <undefined, T, T, T>,
    "webkitSupportsFullscreen": <undefined, T, T, T>,
    "webkitEnterFullscreen": <#Global.HTMLVideoElement.prototype.webkitEnterFullscreen, T, T, T>,
    "webkitExitFullscreen": <#Global.HTMLVideoElement.prototype.webkitExitFullscreen, T, T, T>,
    "webkitEnterFullScreen": <#Global.HTMLVideoElement.prototype.webkitEnterFullScreen, T, T, T>,
    "webkitExitFullScreen": <#Global.HTMLVideoElement.prototype.webkitExitFullScreen, T, T, T>,
    "constructor": <#Global.HTMLVideoElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLVideoElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLVideoElement.prototype.webkitEnterFullscreen: {
    "length": <0, F, F, T>,
    "name": <"webkitEnterFullscreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.webkitExitFullscreen: {
    "length": <0, F, F, T>,
    "name": <"webkitExitFullscreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.webkitEnterFullScreen: {
    "length": <0, F, F, T>,
    "name": <"webkitEnterFullScreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.webkitExitFullScreen: {
    "length": <0, F, F, T>,
    "name": <"webkitExitFullScreen", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]]: {
    "NETWORK_EMPTY": <0, F, T, F>,
    "NETWORK_IDLE": <1, F, T, F>,
    "NETWORK_LOADING": <2, F, T, F>,
    "NETWORK_NO_SOURCE": <3, F, T, F>,
    "HAVE_NOTHING": <0, F, T, F>,
    "HAVE_METADATA": <1, F, T, F>,
    "HAVE_CURRENT_DATA": <2, F, T, F>,
    "HAVE_FUTURE_DATA": <3, F, T, F>,
    "HAVE_ENOUGH_DATA": <4, F, T, F>,
    "error": <undefined, T, T, T>,
    "src": <undefined, T, T, T>,
    "currentSrc": <undefined, T, T, T>,
    "crossOrigin": <undefined, T, T, T>,
    "networkState": <undefined, T, T, T>,
    "preload": <undefined, T, T, T>,
    "buffered": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "seeking": <undefined, T, T, T>,
    "currentTime": <undefined, T, T, T>,
    "duration": <undefined, T, T, T>,
    "paused": <undefined, T, T, T>,
    "defaultPlaybackRate": <undefined, T, T, T>,
    "playbackRate": <undefined, T, T, T>,
    "played": <undefined, T, T, T>,
    "seekable": <undefined, T, T, T>,
    "ended": <undefined, T, T, T>,
    "autoplay": <undefined, T, T, T>,
    "loop": <undefined, T, T, T>,
    "controls": <undefined, T, T, T>,
    "volume": <undefined, T, T, T>,
    "muted": <undefined, T, T, T>,
    "defaultMuted": <undefined, T, T, T>,
    "textTracks": <undefined, T, T, T>,
    "webkitAudioDecodedByteCount": <undefined, T, T, T>,
    "webkitVideoDecodedByteCount": <undefined, T, T, T>,
    "load": <#Global.HTMLVideoElement.prototype.[[Prototype]].load, T, T, T>,
    "canPlayType": <#Global.HTMLVideoElement.prototype.[[Prototype]].canPlayType, T, T, T>,
    "play": <#Global.HTMLVideoElement.prototype.[[Prototype]].play, T, T, T>,
    "pause": <#Global.HTMLVideoElement.prototype.[[Prototype]].pause, T, T, T>,
    "addTextTrack": <#Global.HTMLVideoElement.prototype.[[Prototype]].addTextTrack, T, T, T>,
    "mediaKeys": <undefined, T, T, T>,
    "onencrypted": <undefined, T, T, T>,
    "onwaitingforkey": <undefined, T, T, T>,
    "srcObject": <undefined, T, T, T>,
    "setMediaKeys": <#Global.HTMLVideoElement.prototype.[[Prototype]].setMediaKeys, T, T, T>,
    "sinkId": <undefined, T, T, T>,
    "remote": <undefined, T, T, T>,
    "disableRemotePlayback": <undefined, T, T, T>,
    "setSinkId": <#Global.HTMLVideoElement.prototype.[[Prototype]].setSinkId, T, T, T>,
    "constructor": <#Global.HTMLVideoElement.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].load: {
    "length": <0, F, F, T>,
    "name": <"load", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].canPlayType: {
    "length": <1, F, F, T>,
    "name": <"canPlayType", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].play: {
    "length": <0, F, F, T>,
    "name": <"play", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].pause: {
    "length": <0, F, F, T>,
    "name": <"pause", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].addTextTrack: {
    "length": <1, F, F, T>,
    "name": <"addTextTrack", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].setMediaKeys: {
    "length": <1, F, F, T>,
    "name": <"setMediaKeys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].setSinkId: {
    "length": <1, F, F, T>,
    "name": <"setSinkId", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLVideoElement.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"HTMLMediaElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLVideoElement.prototype.[[Prototype]], F, F, F>,
    "NETWORK_EMPTY": <0, F, T, F>,
    "NETWORK_IDLE": <1, F, T, F>,
    "NETWORK_LOADING": <2, F, T, F>,
    "NETWORK_NO_SOURCE": <3, F, T, F>,
    "HAVE_NOTHING": <0, F, T, F>,
    "HAVE_METADATA": <1, F, T, F>,
    "HAVE_CURRENT_DATA": <2, F, T, F>,
    "HAVE_FUTURE_DATA": <3, F, T, F>,
    "HAVE_ENOUGH_DATA": <4, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLUnknownElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLUnknownElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLUnknownElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLUnknownElement.prototype: {
    "constructor": <#Global.HTMLUnknownElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLUListElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLUListElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLUListElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLUListElement.prototype: {
    "compact": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "constructor": <#Global.HTMLUListElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTrackElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTrackElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTrackElement.prototype, F, F, F>,
    "NONE": <0, F, T, F>,
    "LOADING": <1, F, T, F>,
    "LOADED": <2, F, T, F>,
    "ERROR": <3, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTrackElement.prototype: {
    "NONE": <0, F, T, F>,
    "LOADING": <1, F, T, F>,
    "LOADED": <2, F, T, F>,
    "ERROR": <3, F, T, F>,
    "kind": <undefined, T, T, T>,
    "src": <undefined, T, T, T>,
    "srclang": <undefined, T, T, T>,
    "label": <undefined, T, T, T>,
    "default": <undefined, T, T, T>,
    "readyState": <undefined, T, T, T>,
    "track": <undefined, T, T, T>,
    "constructor": <#Global.HTMLTrackElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTitleElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTitleElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTitleElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTitleElement.prototype: {
    "text": <undefined, T, T, T>,
    "constructor": <#Global.HTMLTitleElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTextAreaElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTextAreaElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTextAreaElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTextAreaElement.prototype: {
    "autofocus": <undefined, T, T, T>,
    "cols": <undefined, T, T, T>,
    "dirName": <undefined, T, T, T>,
    "disabled": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "maxLength": <undefined, T, T, T>,
    "minLength": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "placeholder": <undefined, T, T, T>,
    "readOnly": <undefined, T, T, T>,
    "required": <undefined, T, T, T>,
    "rows": <undefined, T, T, T>,
    "wrap": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "defaultValue": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "textLength": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "selectionStart": <undefined, T, T, T>,
    "selectionEnd": <undefined, T, T, T>,
    "selectionDirection": <undefined, T, T, T>,
    "autocapitalize": <undefined, T, T, T>,
    "checkValidity": <#Global.HTMLTextAreaElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLTextAreaElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLTextAreaElement.prototype.setCustomValidity, T, T, T>,
    "select": <#Global.HTMLTextAreaElement.prototype.select, T, T, T>,
    "setRangeText": <#Global.HTMLTextAreaElement.prototype.setRangeText, T, T, T>,
    "setSelectionRange": <#Global.HTMLTextAreaElement.prototype.setSelectionRange, T, T, T>,
    "constructor": <#Global.HTMLTextAreaElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTextAreaElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTextAreaElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTextAreaElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTextAreaElement.prototype.select: {
    "length": <0, F, F, T>,
    "name": <"select", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTextAreaElement.prototype.setRangeText: {
    "length": <1, F, F, T>,
    "name": <"setRangeText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTextAreaElement.prototype.setSelectionRange: {
    "length": <0, F, F, T>,
    "name": <"setSelectionRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTemplateElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTemplateElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTemplateElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTemplateElement.prototype: {
    "content": <undefined, T, T, T>,
    "constructor": <#Global.HTMLTemplateElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTableSectionElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTableSectionElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTableSectionElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTableSectionElement.prototype: {
    "rows": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "ch": <undefined, T, T, T>,
    "chOff": <undefined, T, T, T>,
    "vAlign": <undefined, T, T, T>,
    "insertRow": <#Global.HTMLTableSectionElement.prototype.insertRow, T, T, T>,
    "deleteRow": <#Global.HTMLTableSectionElement.prototype.deleteRow, T, T, T>,
    "constructor": <#Global.HTMLTableSectionElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTableSectionElement.prototype.insertRow: {
    "length": <0, F, F, T>,
    "name": <"insertRow", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableSectionElement.prototype.deleteRow: {
    "length": <1, F, F, T>,
    "name": <"deleteRow", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableRowElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTableRowElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTableRowElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTableRowElement.prototype: {
    "rowIndex": <undefined, T, T, T>,
    "sectionRowIndex": <undefined, T, T, T>,
    "cells": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "ch": <undefined, T, T, T>,
    "chOff": <undefined, T, T, T>,
    "vAlign": <undefined, T, T, T>,
    "bgColor": <undefined, T, T, T>,
    "insertCell": <#Global.HTMLTableRowElement.prototype.insertCell, T, T, T>,
    "deleteCell": <#Global.HTMLTableRowElement.prototype.deleteCell, T, T, T>,
    "constructor": <#Global.HTMLTableRowElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTableRowElement.prototype.insertCell: {
    "length": <0, F, F, T>,
    "name": <"insertCell", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableRowElement.prototype.deleteCell: {
    "length": <1, F, F, T>,
    "name": <"deleteCell", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTableElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTableElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype: {
    "caption": <undefined, T, T, T>,
    "tHead": <undefined, T, T, T>,
    "tFoot": <undefined, T, T, T>,
    "tBodies": <undefined, T, T, T>,
    "rows": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "border": <undefined, T, T, T>,
    "frame": <undefined, T, T, T>,
    "rules": <undefined, T, T, T>,
    "summary": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "bgColor": <undefined, T, T, T>,
    "cellPadding": <undefined, T, T, T>,
    "cellSpacing": <undefined, T, T, T>,
    "createCaption": <#Global.HTMLTableElement.prototype.createCaption, T, T, T>,
    "deleteCaption": <#Global.HTMLTableElement.prototype.deleteCaption, T, T, T>,
    "createTHead": <#Global.HTMLTableElement.prototype.createTHead, T, T, T>,
    "deleteTHead": <#Global.HTMLTableElement.prototype.deleteTHead, T, T, T>,
    "createTFoot": <#Global.HTMLTableElement.prototype.createTFoot, T, T, T>,
    "deleteTFoot": <#Global.HTMLTableElement.prototype.deleteTFoot, T, T, T>,
    "createTBody": <#Global.HTMLTableElement.prototype.createTBody, T, T, T>,
    "insertRow": <#Global.HTMLTableElement.prototype.insertRow, T, T, T>,
    "deleteRow": <#Global.HTMLTableElement.prototype.deleteRow, T, T, T>,
    "constructor": <#Global.HTMLTableElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTableElement.prototype.createCaption: {
    "length": <0, F, F, T>,
    "name": <"createCaption", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.deleteCaption: {
    "length": <0, F, F, T>,
    "name": <"deleteCaption", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.createTHead: {
    "length": <0, F, F, T>,
    "name": <"createTHead", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.deleteTHead: {
    "length": <0, F, F, T>,
    "name": <"deleteTHead", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.createTFoot: {
    "length": <0, F, F, T>,
    "name": <"createTFoot", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.deleteTFoot: {
    "length": <0, F, F, T>,
    "name": <"deleteTFoot", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.createTBody: {
    "length": <0, F, F, T>,
    "name": <"createTBody", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.insertRow: {
    "length": <0, F, F, T>,
    "name": <"insertRow", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableElement.prototype.deleteRow: {
    "length": <1, F, F, T>,
    "name": <"deleteRow", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLTableColElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTableColElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTableColElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTableColElement.prototype: {
    "span": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "ch": <undefined, T, T, T>,
    "chOff": <undefined, T, T, T>,
    "vAlign": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "constructor": <#Global.HTMLTableColElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTableCellElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTableCellElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTableCellElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTableCellElement.prototype: {
    "colSpan": <undefined, T, T, T>,
    "rowSpan": <undefined, T, T, T>,
    "headers": <undefined, T, T, T>,
    "cellIndex": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "axis": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "ch": <undefined, T, T, T>,
    "chOff": <undefined, T, T, T>,
    "noWrap": <undefined, T, T, T>,
    "vAlign": <undefined, T, T, T>,
    "bgColor": <undefined, T, T, T>,
    "abbr": <undefined, T, T, T>,
    "scope": <undefined, T, T, T>,
    "constructor": <#Global.HTMLTableCellElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLTableCaptionElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLTableCaptionElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLTableCaptionElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLTableCaptionElement.prototype: {
    "align": <undefined, T, T, T>,
    "constructor": <#Global.HTMLTableCaptionElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLStyleElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLStyleElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLStyleElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLStyleElement.prototype: {
    "disabled": <undefined, T, T, T>,
    "media": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "sheet": <undefined, T, T, T>,
    "constructor": <#Global.HTMLStyleElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLSpanElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLSpanElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLSpanElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLSpanElement.prototype: {
    "constructor": <#Global.HTMLSpanElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLSourceElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLSourceElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLSourceElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLSourceElement.prototype: {
    "src": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "srcset": <undefined, T, T, T>,
    "sizes": <undefined, T, T, T>,
    "media": <undefined, T, T, T>,
    "constructor": <#Global.HTMLSourceElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLShadowElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLShadowElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLShadowElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLShadowElement.prototype: {
    "getDistributedNodes": <#Global.HTMLShadowElement.prototype.getDistributedNodes, T, T, T>,
    "constructor": <#Global.HTMLShadowElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLShadowElement.prototype.getDistributedNodes: {
    "length": <0, F, F, T>,
    "name": <"getDistributedNodes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLSelectElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLSelectElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement.prototype: {
    "autofocus": <undefined, T, T, T>,
    "disabled": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "multiple": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "required": <undefined, T, T, T>,
    "size": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "options": <undefined, T, T, T>,
    "length": <undefined, T, T, T>,
    "selectedOptions": <undefined, T, T, T>,
    "selectedIndex": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "item": <#Global.HTMLSelectElement.prototype.item, T, T, T>,
    "namedItem": <#Global.HTMLSelectElement.prototype.namedItem, T, T, T>,
    "add": <#Global.HTMLSelectElement.prototype.add, T, T, T>,
    "remove": <#Global.HTMLSelectElement.prototype.remove, T, T, T>,
    "checkValidity": <#Global.HTMLSelectElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLSelectElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLSelectElement.prototype.setCustomValidity, T, T, T>,
    "constructor": <#Global.HTMLSelectElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLSelectElement.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement.prototype.namedItem: {
    "length": <1, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement.prototype.add: {
    "length": <1, F, F, T>,
    "name": <"add", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement.prototype.remove: {
    "length": <0, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLSelectElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLScriptElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLScriptElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLScriptElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLScriptElement.prototype: {
    "src": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "charset": <undefined, T, T, T>,
    "async": <undefined, T, T, T>,
    "defer": <undefined, T, T, T>,
    "crossOrigin": <undefined, T, T, T>,
    "text": <undefined, T, T, T>,
    "event": <undefined, T, T, T>,
    "htmlFor": <undefined, T, T, T>,
    "integrity": <undefined, T, T, T>,
    "constructor": <#Global.HTMLScriptElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLQuoteElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLQuoteElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLQuoteElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLQuoteElement.prototype: {
    "cite": <undefined, T, T, T>,
    "constructor": <#Global.HTMLQuoteElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLProgressElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLProgressElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLProgressElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLProgressElement.prototype: {
    "value": <undefined, T, T, T>,
    "max": <undefined, T, T, T>,
    "position": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "constructor": <#Global.HTMLProgressElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLPreElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLPreElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLPreElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLPreElement.prototype: {
    "width": <undefined, T, T, T>,
    "constructor": <#Global.HTMLPreElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLPictureElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLPictureElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLPictureElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLPictureElement.prototype: {
    "constructor": <#Global.HTMLPictureElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLParamElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLParamElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLParamElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLParamElement.prototype: {
    "name": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "valueType": <undefined, T, T, T>,
    "constructor": <#Global.HTMLParamElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLParagraphElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLParagraphElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLParagraphElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLParagraphElement.prototype: {
    "align": <undefined, T, T, T>,
    "constructor": <#Global.HTMLParagraphElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLOutputElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLOutputElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLOutputElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLOutputElement.prototype: {
    "htmlFor": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "defaultValue": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "checkValidity": <#Global.HTMLOutputElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLOutputElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLOutputElement.prototype.setCustomValidity, T, T, T>,
    "constructor": <#Global.HTMLOutputElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLOutputElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOutputElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOutputElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOptionsCollection: {
    "length": <0, F, F, T>,
    "name": <"HTMLOptionsCollection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLOptionsCollection.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLOptionsCollection.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLOptionsCollection.prototype: {
    "length": <undefined, T, T, T>,
    "selectedIndex": <undefined, T, T, T>,
    "add": <#Global.HTMLOptionsCollection.prototype.add, T, T, T>,
    "remove": <#Global.HTMLOptionsCollection.prototype.remove, T, T, T>,
    "namedItem": <#Global.HTMLOptionsCollection.prototype.namedItem, T, T, T>,
    "constructor": <#Global.HTMLOptionsCollection, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLOptionsCollection.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLOptionsCollection.prototype.add: {
    "length": <1, F, F, T>,
    "name": <"add", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOptionsCollection.prototype.remove: {
    "length": <1, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOptionsCollection.prototype.namedItem: {
    "length": <1, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOptionsCollection.prototype.[[Prototype]]: {
    "length": <undefined, T, T, T>,
    "item": <#Global.HTMLOptionsCollection.prototype.[[Prototype]].item, T, T, T>,
    "namedItem": <#Global.HTMLOptionsCollection.prototype.[[Prototype]].namedItem, T, T, T>,
    "constructor": <#Global.HTMLOptionsCollection.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.HTMLOptionsCollection.prototype.[[Prototype]].item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOptionsCollection.prototype.[[Prototype]].namedItem: {
    "length": <1, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOptionsCollection.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"HTMLCollection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLOptionsCollection.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Option: {
    "length": <0, F, F, T>,
    "name": <"HTMLOptionElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Option.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Option.prototype: {
    "constructor": <#Global.Option, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Option.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Option.prototype.[[Prototype]]: {
    "disabled": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "label": <undefined, T, T, T>,
    "defaultSelected": <undefined, T, T, T>,
    "selected": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "text": <undefined, T, T, T>,
    "index": <undefined, T, T, T>,
    "constructor": <#Global.Option.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Option.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"HTMLOptionElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Option.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLOptGroupElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLOptGroupElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLOptGroupElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLOptGroupElement.prototype: {
    "disabled": <undefined, T, T, T>,
    "label": <undefined, T, T, T>,
    "constructor": <#Global.HTMLOptGroupElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLObjectElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLObjectElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLObjectElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLObjectElement.prototype: {
    "data": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "useMap": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "contentDocument": <undefined, T, T, T>,
    "contentWindow": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "archive": <undefined, T, T, T>,
    "code": <undefined, T, T, T>,
    "declare": <undefined, T, T, T>,
    "hspace": <undefined, T, T, T>,
    "standby": <undefined, T, T, T>,
    "vspace": <undefined, T, T, T>,
    "codeBase": <undefined, T, T, T>,
    "codeType": <undefined, T, T, T>,
    "border": <undefined, T, T, T>,
    "getSVGDocument": <#Global.HTMLObjectElement.prototype.getSVGDocument, T, T, T>,
    "checkValidity": <#Global.HTMLObjectElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLObjectElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLObjectElement.prototype.setCustomValidity, T, T, T>,
    "constructor": <#Global.HTMLObjectElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLObjectElement.prototype.getSVGDocument: {
    "length": <0, F, F, T>,
    "name": <"getSVGDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLObjectElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLObjectElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLObjectElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLOListElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLOListElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLOListElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLOListElement.prototype: {
    "reversed": <undefined, T, T, T>,
    "start": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "compact": <undefined, T, T, T>,
    "constructor": <#Global.HTMLOListElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLModElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLModElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLModElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLModElement.prototype: {
    "cite": <undefined, T, T, T>,
    "dateTime": <undefined, T, T, T>,
    "constructor": <#Global.HTMLModElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLMeterElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLMeterElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLMeterElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLMeterElement.prototype: {
    "value": <undefined, T, T, T>,
    "min": <undefined, T, T, T>,
    "max": <undefined, T, T, T>,
    "low": <undefined, T, T, T>,
    "high": <undefined, T, T, T>,
    "optimum": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "constructor": <#Global.HTMLMeterElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLMetaElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLMetaElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLMetaElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLMetaElement.prototype: {
    "name": <undefined, T, T, T>,
    "httpEquiv": <undefined, T, T, T>,
    "content": <undefined, T, T, T>,
    "scheme": <undefined, T, T, T>,
    "constructor": <#Global.HTMLMetaElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLMenuElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLMenuElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLMenuElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLMenuElement.prototype: {
    "compact": <undefined, T, T, T>,
    "constructor": <#Global.HTMLMenuElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLMarqueeElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLMarqueeElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLMarqueeElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLMarqueeElement.prototype: {
    "behavior": <undefined, T, T, T>,
    "bgColor": <undefined, T, T, T>,
    "direction": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "hspace": <undefined, T, T, T>,
    "loop": <undefined, T, T, T>,
    "scrollAmount": <undefined, T, T, T>,
    "scrollDelay": <undefined, T, T, T>,
    "trueSpeed": <undefined, T, T, T>,
    "vspace": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "start": <#Global.HTMLMarqueeElement.prototype.start, T, T, T>,
    "stop": <#Global.HTMLMarqueeElement.prototype.stop, T, T, T>,
    "constructor": <#Global.HTMLMarqueeElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLMarqueeElement.prototype.start: {
    "length": <0, F, F, T>,
    "name": <"start", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLMarqueeElement.prototype.stop: {
    "length": <0, F, F, T>,
    "name": <"stop", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLMapElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLMapElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLMapElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLMapElement.prototype: {
    "name": <undefined, T, T, T>,
    "areas": <undefined, T, T, T>,
    "constructor": <#Global.HTMLMapElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLLinkElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLLinkElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLLinkElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLLinkElement.prototype: {
    "disabled": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "crossOrigin": <undefined, T, T, T>,
    "rel": <undefined, T, T, T>,
    "relList": <undefined, T, T, T>,
    "media": <undefined, T, T, T>,
    "hreflang": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "as": <undefined, T, T, T>,
    "sizes": <undefined, T, T, T>,
    "charset": <undefined, T, T, T>,
    "rev": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "sheet": <undefined, T, T, T>,
    "import": <undefined, T, T, T>,
    "integrity": <undefined, T, T, T>,
    "constructor": <#Global.HTMLLinkElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLLegendElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLLegendElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLLegendElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLLegendElement.prototype: {
    "form": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "constructor": <#Global.HTMLLegendElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLLabelElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLLabelElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLLabelElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLLabelElement.prototype: {
    "form": <undefined, T, T, T>,
    "htmlFor": <undefined, T, T, T>,
    "control": <undefined, T, T, T>,
    "constructor": <#Global.HTMLLabelElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLLIElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLLIElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLLIElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLLIElement.prototype: {
    "value": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "constructor": <#Global.HTMLLIElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLKeygenElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLKeygenElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLKeygenElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLKeygenElement.prototype: {
    "autofocus": <undefined, T, T, T>,
    "challenge": <undefined, T, T, T>,
    "disabled": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "keytype": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "checkValidity": <#Global.HTMLKeygenElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLKeygenElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLKeygenElement.prototype.setCustomValidity, T, T, T>,
    "constructor": <#Global.HTMLKeygenElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLKeygenElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLKeygenElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLKeygenElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLInputElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLInputElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype: {
    "accept": <undefined, T, T, T>,
    "alt": <undefined, T, T, T>,
    "autocomplete": <undefined, T, T, T>,
    "autofocus": <undefined, T, T, T>,
    "defaultChecked": <undefined, T, T, T>,
    "checked": <undefined, T, T, T>,
    "dirName": <undefined, T, T, T>,
    "disabled": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "files": <undefined, T, T, T>,
    "formAction": <undefined, T, T, T>,
    "formEnctype": <undefined, T, T, T>,
    "formMethod": <undefined, T, T, T>,
    "formNoValidate": <undefined, T, T, T>,
    "formTarget": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "indeterminate": <undefined, T, T, T>,
    "list": <undefined, T, T, T>,
    "max": <undefined, T, T, T>,
    "maxLength": <undefined, T, T, T>,
    "min": <undefined, T, T, T>,
    "minLength": <undefined, T, T, T>,
    "multiple": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "pattern": <undefined, T, T, T>,
    "placeholder": <undefined, T, T, T>,
    "readOnly": <undefined, T, T, T>,
    "required": <undefined, T, T, T>,
    "size": <undefined, T, T, T>,
    "src": <undefined, T, T, T>,
    "step": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "defaultValue": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "valueAsDate": <undefined, T, T, T>,
    "valueAsNumber": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "selectionStart": <undefined, T, T, T>,
    "selectionEnd": <undefined, T, T, T>,
    "selectionDirection": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "useMap": <undefined, T, T, T>,
    "autocapitalize": <undefined, T, T, T>,
    "webkitdirectory": <undefined, T, T, T>,
    "incremental": <undefined, T, T, T>,
    "stepUp": <#Global.HTMLInputElement.prototype.stepUp, T, T, T>,
    "stepDown": <#Global.HTMLInputElement.prototype.stepDown, T, T, T>,
    "checkValidity": <#Global.HTMLInputElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLInputElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLInputElement.prototype.setCustomValidity, T, T, T>,
    "select": <#Global.HTMLInputElement.prototype.select, T, T, T>,
    "setRangeText": <#Global.HTMLInputElement.prototype.setRangeText, T, T, T>,
    "setSelectionRange": <#Global.HTMLInputElement.prototype.setSelectionRange, T, T, T>,
    "webkitEntries": <undefined, T, T, T>,
    "constructor": <#Global.HTMLInputElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLInputElement.prototype.stepUp: {
    "length": <0, F, F, T>,
    "name": <"stepUp", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype.stepDown: {
    "length": <0, F, F, T>,
    "name": <"stepDown", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype.select: {
    "length": <0, F, F, T>,
    "name": <"select", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype.setRangeText: {
    "length": <1, F, F, T>,
    "name": <"setRangeText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLInputElement.prototype.setSelectionRange: {
    "length": <0, F, F, T>,
    "name": <"setSelectionRange", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Image: {
    "length": <0, F, F, T>,
    "name": <"HTMLImageElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Image.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Image.prototype: {
    "constructor": <#Global.Image, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Image.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Image.prototype.[[Prototype]]: {
    "alt": <undefined, T, T, T>,
    "src": <undefined, T, T, T>,
    "srcset": <undefined, T, T, T>,
    "sizes": <undefined, T, T, T>,
    "crossOrigin": <undefined, T, T, T>,
    "useMap": <undefined, T, T, T>,
    "isMap": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "naturalWidth": <undefined, T, T, T>,
    "naturalHeight": <undefined, T, T, T>,
    "complete": <undefined, T, T, T>,
    "currentSrc": <undefined, T, T, T>,
    "referrerPolicy": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "lowsrc": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "hspace": <undefined, T, T, T>,
    "vspace": <undefined, T, T, T>,
    "longDesc": <undefined, T, T, T>,
    "border": <undefined, T, T, T>,
    "x": <undefined, T, T, T>,
    "y": <undefined, T, T, T>,
    "constructor": <#Global.Image.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Image.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"HTMLImageElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Image.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLIFrameElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLIFrameElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLIFrameElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLIFrameElement.prototype: {
    "src": <undefined, T, T, T>,
    "srcdoc": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "sandbox": <undefined, T, T, T>,
    "allowFullscreen": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "contentDocument": <undefined, T, T, T>,
    "contentWindow": <undefined, T, T, T>,
    "referrerPolicy": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "scrolling": <undefined, T, T, T>,
    "frameBorder": <undefined, T, T, T>,
    "longDesc": <undefined, T, T, T>,
    "marginHeight": <undefined, T, T, T>,
    "marginWidth": <undefined, T, T, T>,
    "getSVGDocument": <#Global.HTMLIFrameElement.prototype.getSVGDocument, T, T, T>,
    "constructor": <#Global.HTMLIFrameElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLIFrameElement.prototype.getSVGDocument: {
    "length": <0, F, F, T>,
    "name": <"getSVGDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLHtmlElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLHtmlElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLHtmlElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLHtmlElement.prototype: {
    "version": <undefined, T, T, T>,
    "constructor": <#Global.HTMLHtmlElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLHeadingElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLHeadingElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLHeadingElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLHeadingElement.prototype: {
    "align": <undefined, T, T, T>,
    "constructor": <#Global.HTMLHeadingElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLHeadElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLHeadElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLHeadElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLHeadElement.prototype: {
    "constructor": <#Global.HTMLHeadElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLHRElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLHRElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLHRElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLHRElement.prototype: {
    "align": <undefined, T, T, T>,
    "color": <undefined, T, T, T>,
    "noShade": <undefined, T, T, T>,
    "size": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "constructor": <#Global.HTMLHRElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLFrameSetElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLFrameSetElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLFrameSetElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLFrameSetElement.prototype: {
    "cols": <undefined, T, T, T>,
    "rows": <undefined, T, T, T>,
    "onblur": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onfocus": <undefined, T, T, T>,
    "onload": <undefined, T, T, T>,
    "onresize": <undefined, T, T, T>,
    "onscroll": <undefined, T, T, T>,
    "onbeforeunload": <undefined, T, T, T>,
    "onhashchange": <undefined, T, T, T>,
    "onlanguagechange": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "onoffline": <undefined, T, T, T>,
    "ononline": <undefined, T, T, T>,
    "onpagehide": <undefined, T, T, T>,
    "onpageshow": <undefined, T, T, T>,
    "onpopstate": <undefined, T, T, T>,
    "onrejectionhandled": <undefined, T, T, T>,
    "onstorage": <undefined, T, T, T>,
    "onunhandledrejection": <undefined, T, T, T>,
    "onunload": <undefined, T, T, T>,
    "constructor": <#Global.HTMLFrameSetElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLFrameElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLFrameElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLFrameElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLFrameElement.prototype: {
    "name": <undefined, T, T, T>,
    "scrolling": <undefined, T, T, T>,
    "src": <undefined, T, T, T>,
    "frameBorder": <undefined, T, T, T>,
    "longDesc": <undefined, T, T, T>,
    "noResize": <undefined, T, T, T>,
    "contentDocument": <undefined, T, T, T>,
    "contentWindow": <undefined, T, T, T>,
    "marginHeight": <undefined, T, T, T>,
    "marginWidth": <undefined, T, T, T>,
    "constructor": <#Global.HTMLFrameElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLFormElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLFormElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLFormElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLFormElement.prototype: {
    "acceptCharset": <undefined, T, T, T>,
    "action": <undefined, T, T, T>,
    "autocomplete": <undefined, T, T, T>,
    "enctype": <undefined, T, T, T>,
    "encoding": <undefined, T, T, T>,
    "method": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "noValidate": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "elements": <undefined, T, T, T>,
    "length": <undefined, T, T, T>,
    "submit": <#Global.HTMLFormElement.prototype.submit, T, T, T>,
    "reset": <#Global.HTMLFormElement.prototype.reset, T, T, T>,
    "checkValidity": <#Global.HTMLFormElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLFormElement.prototype.reportValidity, T, T, T>,
    "constructor": <#Global.HTMLFormElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLFormElement.prototype.submit: {
    "length": <0, F, F, T>,
    "name": <"submit", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLFormElement.prototype.reset: {
    "length": <0, F, F, T>,
    "name": <"reset", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLFormElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLFormElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLFormControlsCollection: {
    "length": <0, F, F, T>,
    "name": <"HTMLFormControlsCollection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLFormControlsCollection.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLOptionsCollection.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLFormControlsCollection.prototype: {
    "namedItem": <#Global.HTMLFormControlsCollection.prototype.namedItem, T, T, T>,
    "constructor": <#Global.HTMLFormControlsCollection, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLOptionsCollection.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLFormControlsCollection.prototype.namedItem: {
    "length": <1, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLFontElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLFontElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLFontElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLFontElement.prototype: {
    "color": <undefined, T, T, T>,
    "face": <undefined, T, T, T>,
    "size": <undefined, T, T, T>,
    "constructor": <#Global.HTMLFontElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLFieldSetElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLFieldSetElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLFieldSetElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLFieldSetElement.prototype: {
    "disabled": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "elements": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "checkValidity": <#Global.HTMLFieldSetElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLFieldSetElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLFieldSetElement.prototype.setCustomValidity, T, T, T>,
    "constructor": <#Global.HTMLFieldSetElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLFieldSetElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLFieldSetElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLFieldSetElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLEmbedElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLEmbedElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLEmbedElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLEmbedElement.prototype: {
    "src": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "align": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "getSVGDocument": <#Global.HTMLEmbedElement.prototype.getSVGDocument, T, T, T>,
    "constructor": <#Global.HTMLEmbedElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLEmbedElement.prototype.getSVGDocument: {
    "length": <0, F, F, T>,
    "name": <"getSVGDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLDocument: {
    "length": <0, F, F, T>,
    "name": <"HTMLDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLDocument.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Document,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLDocument.prototype: {
    "fgColor": <undefined, T, T, T>,
    "linkColor": <undefined, T, T, T>,
    "vlinkColor": <undefined, T, T, T>,
    "alinkColor": <undefined, T, T, T>,
    "bgColor": <undefined, T, T, T>,
    "all": <undefined, T, T, T>,
    "clear": <#Global.HTMLDocument.prototype.clear, T, T, T>,
    "captureEvents": <#Global.HTMLDocument.prototype.captureEvents, T, T, T>,
    "releaseEvents": <#Global.HTMLDocument.prototype.releaseEvents, T, T, T>,
    "constructor": <#Global.HTMLDocument, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Document.prototype,
    [[Class]]: "Object"
  },
  #Global.HTMLDocument.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLDocument.prototype.captureEvents: {
    "length": <0, F, F, T>,
    "name": <"captureEvents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLDocument.prototype.releaseEvents: {
    "length": <0, F, F, T>,
    "name": <"releaseEvents", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLDivElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLDivElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLDivElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLDivElement.prototype: {
    "align": <undefined, T, T, T>,
    "constructor": <#Global.HTMLDivElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLDirectoryElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLDirectoryElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLDirectoryElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLDirectoryElement.prototype: {
    "compact": <undefined, T, T, T>,
    "constructor": <#Global.HTMLDirectoryElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLDialogElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLDialogElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLDialogElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLDialogElement.prototype: {
    "open": <undefined, T, T, T>,
    "returnValue": <undefined, T, T, T>,
    "show": <#Global.HTMLDialogElement.prototype.show, T, T, T>,
    "showModal": <#Global.HTMLDialogElement.prototype.showModal, T, T, T>,
    "close": <#Global.HTMLDialogElement.prototype.close, T, T, T>,
    "constructor": <#Global.HTMLDialogElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLDialogElement.prototype.show: {
    "length": <0, F, F, T>,
    "name": <"show", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLDialogElement.prototype.showModal: {
    "length": <0, F, F, T>,
    "name": <"showModal", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLDialogElement.prototype.close: {
    "length": <0, F, F, T>,
    "name": <"close", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLDetailsElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLDetailsElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLDetailsElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLDetailsElement.prototype: {
    "open": <undefined, T, T, T>,
    "constructor": <#Global.HTMLDetailsElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLDataListElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLDataListElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLDataListElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLDataListElement.prototype: {
    "options": <undefined, T, T, T>,
    "constructor": <#Global.HTMLDataListElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLDListElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLDListElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLDListElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLDListElement.prototype: {
    "compact": <undefined, T, T, T>,
    "constructor": <#Global.HTMLDListElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLContentElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLContentElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLContentElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLContentElement.prototype: {
    "select": <undefined, T, T, T>,
    "getDistributedNodes": <#Global.HTMLContentElement.prototype.getDistributedNodes, T, T, T>,
    "constructor": <#Global.HTMLContentElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLContentElement.prototype.getDistributedNodes: {
    "length": <0, F, F, T>,
    "name": <"getDistributedNodes", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLCanvasElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLCanvasElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLCanvasElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLCanvasElement.prototype: {
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "toDataURL": <#Global.HTMLCanvasElement.prototype.toDataURL, T, T, T>,
    "toBlob": <#Global.HTMLCanvasElement.prototype.toBlob, T, T, T>,
    "getContext": <#Global.HTMLCanvasElement.prototype.getContext, T, T, T>,
    "captureStream": <#Global.HTMLCanvasElement.prototype.captureStream, T, T, T>,
    "constructor": <#Global.HTMLCanvasElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLCanvasElement.prototype.toDataURL: {
    "length": <0, F, F, T>,
    "name": <"toDataURL", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLCanvasElement.prototype.toBlob: {
    "length": <1, F, F, T>,
    "name": <"toBlob", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLCanvasElement.prototype.getContext: {
    "length": <1, F, F, T>,
    "name": <"getContext", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLCanvasElement.prototype.captureStream: {
    "length": <0, F, F, T>,
    "name": <"captureStream", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLButtonElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLButtonElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLButtonElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLButtonElement.prototype: {
    "autofocus": <undefined, T, T, T>,
    "disabled": <undefined, T, T, T>,
    "form": <undefined, T, T, T>,
    "formAction": <undefined, T, T, T>,
    "formEnctype": <undefined, T, T, T>,
    "formMethod": <undefined, T, T, T>,
    "formNoValidate": <undefined, T, T, T>,
    "formTarget": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "willValidate": <undefined, T, T, T>,
    "validity": <undefined, T, T, T>,
    "validationMessage": <undefined, T, T, T>,
    "labels": <undefined, T, T, T>,
    "checkValidity": <#Global.HTMLButtonElement.prototype.checkValidity, T, T, T>,
    "reportValidity": <#Global.HTMLButtonElement.prototype.reportValidity, T, T, T>,
    "setCustomValidity": <#Global.HTMLButtonElement.prototype.setCustomValidity, T, T, T>,
    "constructor": <#Global.HTMLButtonElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLButtonElement.prototype.checkValidity: {
    "length": <0, F, F, T>,
    "name": <"checkValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLButtonElement.prototype.reportValidity: {
    "length": <0, F, F, T>,
    "name": <"reportValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLButtonElement.prototype.setCustomValidity: {
    "length": <1, F, F, T>,
    "name": <"setCustomValidity", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLBodyElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLBodyElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLBodyElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLBodyElement.prototype: {
    "text": <undefined, T, T, T>,
    "link": <undefined, T, T, T>,
    "vLink": <undefined, T, T, T>,
    "aLink": <undefined, T, T, T>,
    "bgColor": <undefined, T, T, T>,
    "background": <undefined, T, T, T>,
    "onblur": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onfocus": <undefined, T, T, T>,
    "onload": <undefined, T, T, T>,
    "onresize": <undefined, T, T, T>,
    "onscroll": <undefined, T, T, T>,
    "onbeforeunload": <undefined, T, T, T>,
    "onhashchange": <undefined, T, T, T>,
    "onlanguagechange": <undefined, T, T, T>,
    "onmessage": <undefined, T, T, T>,
    "onoffline": <undefined, T, T, T>,
    "ononline": <undefined, T, T, T>,
    "onpagehide": <undefined, T, T, T>,
    "onpageshow": <undefined, T, T, T>,
    "onpopstate": <undefined, T, T, T>,
    "onrejectionhandled": <undefined, T, T, T>,
    "onstorage": <undefined, T, T, T>,
    "onunhandledrejection": <undefined, T, T, T>,
    "onunload": <undefined, T, T, T>,
    "constructor": <#Global.HTMLBodyElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLBaseElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLBaseElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLBaseElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLBaseElement.prototype: {
    "href": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "constructor": <#Global.HTMLBaseElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLBRElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLBRElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLBRElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLBRElement.prototype: {
    "clear": <undefined, T, T, T>,
    "constructor": <#Global.HTMLBRElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Audio: {
    "length": <0, F, F, T>,
    "name": <"HTMLAudioElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Audio.prototype, T, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Audio.prototype: {
    "constructor": <#Global.Audio, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Audio.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Audio.prototype.[[Prototype]]: {
    "constructor": <#Global.Audio.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLVideoElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.Audio.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"HTMLAudioElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Audio.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLAreaElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLAreaElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLAreaElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLAreaElement.prototype: {
    "alt": <undefined, T, T, T>,
    "coords": <undefined, T, T, T>,
    "download": <undefined, T, T, T>,
    "shape": <undefined, T, T, T>,
    "target": <undefined, T, T, T>,
    "ping": <undefined, T, T, T>,
    "rel": <undefined, T, T, T>,
    "referrerPolicy": <undefined, T, T, T>,
    "noHref": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "origin": <undefined, T, T, T>,
    "protocol": <undefined, T, T, T>,
    "username": <undefined, T, T, T>,
    "password": <undefined, T, T, T>,
    "host": <undefined, T, T, T>,
    "hostname": <undefined, T, T, T>,
    "port": <undefined, T, T, T>,
    "pathname": <undefined, T, T, T>,
    "search": <undefined, T, T, T>,
    "hash": <undefined, T, T, T>,
    "toString": <#Global.HTMLAreaElement.prototype.toString, T, T, T>,
    "constructor": <#Global.HTMLAreaElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLAreaElement.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLAnchorElement: {
    "length": <0, F, F, T>,
    "name": <"HTMLAnchorElement", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLAnchorElement.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLAnchorElement.prototype: {
    "target": <undefined, T, T, T>,
    "download": <undefined, T, T, T>,
    "ping": <undefined, T, T, T>,
    "rel": <undefined, T, T, T>,
    "hreflang": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "referrerPolicy": <undefined, T, T, T>,
    "text": <undefined, T, T, T>,
    "coords": <undefined, T, T, T>,
    "charset": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "rev": <undefined, T, T, T>,
    "shape": <undefined, T, T, T>,
    "href": <undefined, T, T, T>,
    "origin": <undefined, T, T, T>,
    "protocol": <undefined, T, T, T>,
    "username": <undefined, T, T, T>,
    "password": <undefined, T, T, T>,
    "host": <undefined, T, T, T>,
    "hostname": <undefined, T, T, T>,
    "port": <undefined, T, T, T>,
    "pathname": <undefined, T, T, T>,
    "search": <undefined, T, T, T>,
    "hash": <undefined, T, T, T>,
    "toString": <#Global.HTMLAnchorElement.prototype.toString, T, T, T>,
    "constructor": <#Global.HTMLAnchorElement, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLSlotElement.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.HTMLAnchorElement.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLAllCollection: {
    "length": <0, F, F, T>,
    "name": <"HTMLAllCollection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.HTMLAllCollection.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.HTMLAllCollection.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.HTMLAllCollection.prototype.item, T, T, T>,
    "namedItem": <#Global.HTMLAllCollection.prototype.namedItem, T, T, T>,
    "constructor": <#Global.HTMLAllCollection, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.HTMLAllCollection.prototype.item: {
    "length": <0, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.HTMLAllCollection.prototype.namedItem: {
    "length": <1, F, F, T>,
    "name": <"namedItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData: {
    "length": <0, F, F, T>,
    "name": <"FormData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.FormData.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype: {
    "append": <#Global.FormData.prototype.append, T, T, T>,
    "delete": <#Global.FormData.prototype.delete, T, T, T>,
    "get": <#Global.FormData.prototype.get, T, T, T>,
    "getAll": <#Global.FormData.prototype.getAll, T, T, T>,
    "has": <#Global.FormData.prototype.has, T, T, T>,
    "set": <#Global.FormData.prototype.set, T, T, T>,
    "keys": <#Global.FormData.prototype.keys, T, T, T>,
    "values": <#Global.FormData.prototype.values, T, T, T>,
    "entries": <#Global.FormData.prototype.entries, T, T, T>,
    "forEach": <#Global.FormData.prototype.forEach, T, T, T>,
    "constructor": <#Global.FormData, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.FormData.prototype.append: {
    "length": <2, F, F, T>,
    "name": <"append", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.delete: {
    "length": <1, F, F, T>,
    "name": <"delete", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.get: {
    "length": <1, F, F, T>,
    "name": <"get", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.getAll: {
    "length": <1, F, F, T>,
    "name": <"getAll", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.has: {
    "length": <1, F, F, T>,
    "name": <"has", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.set: {
    "length": <2, F, F, T>,
    "name": <"set", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FormData.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FontFace: {
    "length": <2, F, F, T>,
    "name": <"FontFace", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.FontFace.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.FontFace.prototype: {
    "family": <undefined, T, T, T>,
    "style": <undefined, T, T, T>,
    "weight": <undefined, T, T, T>,
    "stretch": <undefined, T, T, T>,
    "unicodeRange": <undefined, T, T, T>,
    "variant": <undefined, T, T, T>,
    "featureSettings": <undefined, T, T, T>,
    "status": <undefined, T, T, T>,
    "loaded": <undefined, T, T, T>,
    "load": <#Global.FontFace.prototype.load, T, T, T>,
    "constructor": <#Global.FontFace, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.FontFace.prototype.load: {
    "length": <0, F, F, T>,
    "name": <"load", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FocusEvent: {
    "length": <1, F, F, T>,
    "name": <"FocusEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.FocusEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.FocusEvent.prototype: {
    "relatedTarget": <undefined, T, T, T>,
    "constructor": <#Global.FocusEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.FileReader: {
    "length": <0, F, F, T>,
    "name": <"FileReader", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.FileReader.prototype, F, F, F>,
    "EMPTY": <0, F, T, F>,
    "LOADING": <1, F, T, F>,
    "DONE": <2, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.FileReader.prototype: {
    "EMPTY": <0, F, T, F>,
    "LOADING": <1, F, T, F>,
    "DONE": <2, F, T, F>,
    "readyState": <undefined, T, T, T>,
    "result": <undefined, T, T, T>,
    "error": <undefined, T, T, T>,
    "onloadstart": <undefined, T, T, T>,
    "onprogress": <undefined, T, T, T>,
    "onload": <undefined, T, T, T>,
    "onabort": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onloadend": <undefined, T, T, T>,
    "readAsArrayBuffer": <#Global.FileReader.prototype.readAsArrayBuffer, T, T, T>,
    "readAsBinaryString": <#Global.FileReader.prototype.readAsBinaryString, T, T, T>,
    "readAsText": <#Global.FileReader.prototype.readAsText, T, T, T>,
    "readAsDataURL": <#Global.FileReader.prototype.readAsDataURL, T, T, T>,
    "abort": <#Global.FileReader.prototype.abort, T, T, T>,
    "constructor": <#Global.FileReader, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.FileReader.prototype.readAsArrayBuffer: {
    "length": <1, F, F, T>,
    "name": <"readAsArrayBuffer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FileReader.prototype.readAsBinaryString: {
    "length": <1, F, F, T>,
    "name": <"readAsBinaryString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FileReader.prototype.readAsText: {
    "length": <1, F, F, T>,
    "name": <"readAsText", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FileReader.prototype.readAsDataURL: {
    "length": <1, F, F, T>,
    "name": <"readAsDataURL", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FileReader.prototype.abort: {
    "length": <0, F, F, T>,
    "name": <"abort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.FileList: {
    "length": <0, F, F, T>,
    "name": <"FileList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.FileList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.FileList.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.FileList.prototype.item, T, T, T>,
    "constructor": <#Global.FileList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.FileList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.File: {
    "length": <2, F, F, T>,
    "name": <"File", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.File.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.File.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.File.prototype: {
    "name": <undefined, T, T, T>,
    "lastModified": <undefined, T, T, T>,
    "lastModifiedDate": <undefined, T, T, T>,
    "webkitRelativePath": <undefined, T, T, T>,
    "constructor": <#Global.File, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.File.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.File.prototype.[[Prototype]]: {
    "size": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "slice": <#Global.File.prototype.[[Prototype]].slice, T, T, T>,
    "constructor": <#Global.File.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.File.prototype.[[Prototype]].slice: {
    "length": <0, F, F, T>,
    "name": <"slice", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.File.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"Blob", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.File.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ErrorEvent: {
    "length": <1, F, F, T>,
    "name": <"ErrorEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ErrorEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ErrorEvent.prototype: {
    "message": <undefined, T, T, T>,
    "filename": <undefined, T, T, T>,
    "lineno": <undefined, T, T, T>,
    "colno": <undefined, T, T, T>,
    "error": <undefined, T, T, T>,
    "constructor": <#Global.ErrorEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.DragEvent: {
    "length": <1, F, F, T>,
    "name": <"DragEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DragEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DragEvent.prototype: {
    "dataTransfer": <undefined, T, T, T>,
    "constructor": <#Global.DragEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.DocumentType: {
    "length": <0, F, F, T>,
    "name": <"DocumentType", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DocumentType.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DocumentType.prototype: {
    "name": <undefined, T, T, T>,
    "publicId": <undefined, T, T, T>,
    "systemId": <undefined, T, T, T>,
    "remove": <#Global.DocumentType.prototype.remove, T, T, T>,
    "before": <#Global.DocumentType.prototype.before, T, T, T>,
    "after": <#Global.DocumentType.prototype.after, T, T, T>,
    "replaceWith": <#Global.DocumentType.prototype.replaceWith, T, T, T>,
    "constructor": <#Global.DocumentType, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.DocumentType.prototype.remove: {
    "length": <0, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DocumentType.prototype.before: {
    "length": <0, F, F, T>,
    "name": <"before", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DocumentType.prototype.after: {
    "length": <0, F, F, T>,
    "name": <"after", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DocumentType.prototype.replaceWith: {
    "length": <0, F, F, T>,
    "name": <"replaceWith", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransferItemList: {
    "length": <0, F, F, T>,
    "name": <"DataTransferItemList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DataTransferItemList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DataTransferItemList.prototype: {
    "length": <undefined, T, T, T>,
    "add": <#Global.DataTransferItemList.prototype.add, T, T, T>,
    "remove": <#Global.DataTransferItemList.prototype.remove, T, T, T>,
    "clear": <#Global.DataTransferItemList.prototype.clear, T, T, T>,
    "constructor": <#Global.DataTransferItemList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DataTransferItemList.prototype.add: {
    "length": <1, F, F, T>,
    "name": <"add", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransferItemList.prototype.remove: {
    "length": <1, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransferItemList.prototype.clear: {
    "length": <0, F, F, T>,
    "name": <"clear", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransferItem: {
    "length": <0, F, F, T>,
    "name": <"DataTransferItem", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DataTransferItem.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DataTransferItem.prototype: {
    "kind": <undefined, T, T, T>,
    "type": <undefined, T, T, T>,
    "getAsString": <#Global.DataTransferItem.prototype.getAsString, T, T, T>,
    "getAsFile": <#Global.DataTransferItem.prototype.getAsFile, T, T, T>,
    "webkitGetAsEntry": <#Global.DataTransferItem.prototype.webkitGetAsEntry, T, T, T>,
    "constructor": <#Global.DataTransferItem, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DataTransferItem.prototype.getAsString: {
    "length": <1, F, F, T>,
    "name": <"getAsString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransferItem.prototype.getAsFile: {
    "length": <0, F, F, T>,
    "name": <"getAsFile", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransferItem.prototype.webkitGetAsEntry: {
    "length": <0, F, F, T>,
    "name": <"webkitGetAsEntry", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransfer: {
    "length": <0, F, F, T>,
    "name": <"DataTransfer", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DataTransfer.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DataTransfer.prototype: {
    "dropEffect": <undefined, T, T, T>,
    "effectAllowed": <undefined, T, T, T>,
    "items": <undefined, T, T, T>,
    "types": <undefined, T, T, T>,
    "files": <undefined, T, T, T>,
    "setDragImage": <#Global.DataTransfer.prototype.setDragImage, T, T, T>,
    "getData": <#Global.DataTransfer.prototype.getData, T, T, T>,
    "setData": <#Global.DataTransfer.prototype.setData, T, T, T>,
    "clearData": <#Global.DataTransfer.prototype.clearData, T, T, T>,
    "constructor": <#Global.DataTransfer, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DataTransfer.prototype.setDragImage: {
    "length": <3, F, F, T>,
    "name": <"setDragImage", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransfer.prototype.getData: {
    "length": <1, F, F, T>,
    "name": <"getData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransfer.prototype.setData: {
    "length": <2, F, F, T>,
    "name": <"setData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DataTransfer.prototype.clearData: {
    "length": <0, F, F, T>,
    "name": <"clearData", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList: {
    "length": <0, F, F, T>,
    "name": <"DOMTokenList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DOMTokenList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype: {
    "length": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "item": <#Global.DOMTokenList.prototype.item, T, T, T>,
    "contains": <#Global.DOMTokenList.prototype.contains, T, T, T>,
    "add": <#Global.DOMTokenList.prototype.add, T, T, T>,
    "remove": <#Global.DOMTokenList.prototype.remove, T, T, T>,
    "toggle": <#Global.DOMTokenList.prototype.toggle, T, T, T>,
    "supports": <#Global.DOMTokenList.prototype.supports, T, T, T>,
    "keys": <#Global.DOMTokenList.prototype.keys, T, T, T>,
    "values": <#Global.DOMTokenList.prototype.values, T, T, T>,
    "entries": <#Global.DOMTokenList.prototype.entries, T, T, T>,
    "forEach": <#Global.DOMTokenList.prototype.forEach, T, T, T>,
    "toString": <#Global.DOMTokenList.prototype.toString, T, T, T>,
    "constructor": <#Global.DOMTokenList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DOMTokenList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.contains: {
    "length": <1, F, F, T>,
    "name": <"contains", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.add: {
    "length": <0, F, F, T>,
    "name": <"add", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.remove: {
    "length": <0, F, F, T>,
    "name": <"remove", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.toggle: {
    "length": <1, F, F, T>,
    "name": <"toggle", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.supports: {
    "length": <1, F, F, T>,
    "name": <"supports", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.keys: {
    "length": <0, F, F, T>,
    "name": <"keys", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.values: {
    "length": <0, F, F, T>,
    "name": <"values", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.entries: {
    "length": <0, F, F, T>,
    "name": <"entries", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.forEach: {
    "length": <1, F, F, T>,
    "name": <"forEach", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMTokenList.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMStringMap: {
    "length": <0, F, F, T>,
    "name": <"DOMStringMap", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DOMStringMap.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DOMStringMap.prototype: {
    "constructor": <#Global.DOMStringMap, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DOMStringList: {
    "length": <0, F, F, T>,
    "name": <"DOMStringList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DOMStringList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DOMStringList.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.DOMStringList.prototype.item, T, T, T>,
    "contains": <#Global.DOMStringList.prototype.contains, T, T, T>,
    "constructor": <#Global.DOMStringList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DOMStringList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMStringList.prototype.contains: {
    "length": <1, F, F, T>,
    "name": <"contains", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMParser: {
    "length": <0, F, F, T>,
    "name": <"DOMParser", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DOMParser.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DOMParser.prototype: {
    "parseFromString": <#Global.DOMParser.prototype.parseFromString, T, T, T>,
    "constructor": <#Global.DOMParser, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DOMParser.prototype.parseFromString: {
    "length": <2, F, F, T>,
    "name": <"parseFromString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMImplementation: {
    "length": <0, F, F, T>,
    "name": <"DOMImplementation", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DOMImplementation.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DOMImplementation.prototype: {
    "createDocumentType": <#Global.DOMImplementation.prototype.createDocumentType, T, T, T>,
    "createDocument": <#Global.DOMImplementation.prototype.createDocument, T, T, T>,
    "createHTMLDocument": <#Global.DOMImplementation.prototype.createHTMLDocument, T, T, T>,
    "hasFeature": <#Global.DOMImplementation.prototype.hasFeature, T, T, T>,
    "constructor": <#Global.DOMImplementation, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.DOMImplementation.prototype.createDocumentType: {
    "length": <3, F, F, T>,
    "name": <"createDocumentType", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMImplementation.prototype.createDocument: {
    "length": <2, F, F, T>,
    "name": <"createDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMImplementation.prototype.createHTMLDocument: {
    "length": <0, F, F, T>,
    "name": <"createHTMLDocument", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMImplementation.prototype.hasFeature: {
    "length": <0, F, F, T>,
    "name": <"hasFeature", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.DOMException: {
    "length": <0, F, F, T>,
    "name": <"DOMException", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.DOMException.prototype, F, F, F>,
    "INDEX_SIZE_ERR": <1, F, T, F>,
    "DOMSTRING_SIZE_ERR": <2, F, T, F>,
    "HIERARCHY_REQUEST_ERR": <3, F, T, F>,
    "WRONG_DOCUMENT_ERR": <4, F, T, F>,
    "INVALID_CHARACTER_ERR": <5, F, T, F>,
    "NO_DATA_ALLOWED_ERR": <6, F, T, F>,
    "NO_MODIFICATION_ALLOWED_ERR": <7, F, T, F>,
    "NOT_FOUND_ERR": <8, F, T, F>,
    "NOT_SUPPORTED_ERR": <9, F, T, F>,
    "INUSE_ATTRIBUTE_ERR": <10, F, T, F>,
    "INVALID_STATE_ERR": <11, F, T, F>,
    "SYNTAX_ERR": <12, F, T, F>,
    "INVALID_MODIFICATION_ERR": <13, F, T, F>,
    "NAMESPACE_ERR": <14, F, T, F>,
    "INVALID_ACCESS_ERR": <15, F, T, F>,
    "VALIDATION_ERR": <16, F, T, F>,
    "TYPE_MISMATCH_ERR": <17, F, T, F>,
    "SECURITY_ERR": <18, F, T, F>,
    "NETWORK_ERR": <19, F, T, F>,
    "ABORT_ERR": <20, F, T, F>,
    "URL_MISMATCH_ERR": <21, F, T, F>,
    "QUOTA_EXCEEDED_ERR": <22, F, T, F>,
    "TIMEOUT_ERR": <23, F, T, F>,
    "INVALID_NODE_TYPE_ERR": <24, F, T, F>,
    "DATA_CLONE_ERR": <25, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.DOMException.prototype: {
    "INDEX_SIZE_ERR": <1, F, T, F>,
    "DOMSTRING_SIZE_ERR": <2, F, T, F>,
    "HIERARCHY_REQUEST_ERR": <3, F, T, F>,
    "WRONG_DOCUMENT_ERR": <4, F, T, F>,
    "INVALID_CHARACTER_ERR": <5, F, T, F>,
    "NO_DATA_ALLOWED_ERR": <6, F, T, F>,
    "NO_MODIFICATION_ALLOWED_ERR": <7, F, T, F>,
    "NOT_FOUND_ERR": <8, F, T, F>,
    "NOT_SUPPORTED_ERR": <9, F, T, F>,
    "INUSE_ATTRIBUTE_ERR": <10, F, T, F>,
    "INVALID_STATE_ERR": <11, F, T, F>,
    "SYNTAX_ERR": <12, F, T, F>,
    "INVALID_MODIFICATION_ERR": <13, F, T, F>,
    "NAMESPACE_ERR": <14, F, T, F>,
    "INVALID_ACCESS_ERR": <15, F, T, F>,
    "VALIDATION_ERR": <16, F, T, F>,
    "TYPE_MISMATCH_ERR": <17, F, T, F>,
    "SECURITY_ERR": <18, F, T, F>,
    "NETWORK_ERR": <19, F, T, F>,
    "ABORT_ERR": <20, F, T, F>,
    "URL_MISMATCH_ERR": <21, F, T, F>,
    "QUOTA_EXCEEDED_ERR": <22, F, T, F>,
    "TIMEOUT_ERR": <23, F, T, F>,
    "INVALID_NODE_TYPE_ERR": <24, F, T, F>,
    "DATA_CLONE_ERR": <25, F, T, F>,
    "code": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "message": <undefined, T, T, T>,
    "toString": <#Global.DOMException.prototype.toString, T, F, T>,
    "constructor": <#Global.DOMException, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Error.prototype,
    [[Class]]: "Error"
  },
  #Global.DOMException.prototype.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CustomEvent: {
    "length": <1, F, F, T>,
    "name": <"CustomEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CustomEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CustomEvent.prototype: {
    "detail": <undefined, T, T, T>,
    "initCustomEvent": <#Global.CustomEvent.prototype.initCustomEvent, T, T, T>,
    "constructor": <#Global.CustomEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CustomEvent.prototype.initCustomEvent: {
    "length": <4, F, F, T>,
    "name": <"initCustomEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CompositionEvent: {
    "length": <1, F, F, T>,
    "name": <"CompositionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CompositionEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CompositionEvent.prototype: {
    "data": <undefined, T, T, T>,
    "initCompositionEvent": <#Global.CompositionEvent.prototype.initCompositionEvent, T, T, T>,
    "constructor": <#Global.CompositionEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.PointerEvent.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.CompositionEvent.prototype.initCompositionEvent: {
    "length": <0, F, F, T>,
    "name": <"initCompositionEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.Comment: {
    "length": <0, F, F, T>,
    "name": <"Comment", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Comment.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Comment.prototype: {
    "constructor": <#Global.Comment, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ClipboardEvent: {
    "length": <0, F, F, T>,
    "name": <"ClipboardEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ClipboardEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ClipboardEvent.prototype: {
    "clipboardData": <undefined, T, T, T>,
    "constructor": <#Global.ClipboardEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ClientRectList: {
    "length": <0, F, F, T>,
    "name": <"ClientRectList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ClientRectList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ClientRectList.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.ClientRectList.prototype.item, T, T, T>,
    "constructor": <#Global.ClientRectList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.ClientRectList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ClientRect: {
    "length": <0, F, F, T>,
    "name": <"ClientRect", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ClientRect.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ClientRect.prototype: {
    "top": <undefined, T, T, T>,
    "right": <undefined, T, T, T>,
    "bottom": <undefined, T, T, T>,
    "left": <undefined, T, T, T>,
    "width": <undefined, T, T, T>,
    "height": <undefined, T, T, T>,
    "constructor": <#Global.ClientRect, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CSSViewportRule: {
    "length": <0, F, F, T>,
    "name": <"CSSViewportRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSViewportRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSViewportRule.prototype: {
    "style": <undefined, T, T, T>,
    "constructor": <#Global.CSSViewportRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSViewportRule.prototype.[[Prototype]]: {
    "STYLE_RULE": <1, F, T, F>,
    "CHARSET_RULE": <2, F, T, F>,
    "IMPORT_RULE": <3, F, T, F>,
    "MEDIA_RULE": <4, F, T, F>,
    "FONT_FACE_RULE": <5, F, T, F>,
    "PAGE_RULE": <6, F, T, F>,
    "NAMESPACE_RULE": <10, F, T, F>,
    "KEYFRAMES_RULE": <7, F, T, F>,
    "KEYFRAME_RULE": <8, F, T, F>,
    "SUPPORTS_RULE": <12, F, T, F>,
    "WEBKIT_KEYFRAMES_RULE": <7, F, T, F>,
    "WEBKIT_KEYFRAME_RULE": <8, F, T, F>,
    "type": <undefined, T, T, T>,
    "cssText": <undefined, T, T, T>,
    "parentRule": <undefined, T, T, T>,
    "parentStyleSheet": <undefined, T, T, T>,
    "constructor": <#Global.CSSViewportRule.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CSSViewportRule.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"CSSRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSViewportRule.prototype.[[Prototype]], F, F, F>,
    "STYLE_RULE": <1, F, T, F>,
    "CHARSET_RULE": <2, F, T, F>,
    "IMPORT_RULE": <3, F, T, F>,
    "MEDIA_RULE": <4, F, T, F>,
    "FONT_FACE_RULE": <5, F, T, F>,
    "PAGE_RULE": <6, F, T, F>,
    "NAMESPACE_RULE": <10, F, T, F>,
    "KEYFRAMES_RULE": <7, F, T, F>,
    "KEYFRAME_RULE": <8, F, T, F>,
    "SUPPORTS_RULE": <12, F, T, F>,
    "WEBKIT_KEYFRAMES_RULE": <7, F, T, F>,
    "WEBKIT_KEYFRAME_RULE": <8, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSSupportsRule: {
    "length": <0, F, F, T>,
    "name": <"CSSSupportsRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSSupportsRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSSupportsRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSSupportsRule.prototype: {
    "constructor": <#Global.CSSSupportsRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSSupportsRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSSupportsRule.prototype.[[Prototype]]: {
    "conditionText": <undefined, T, T, T>,
    "constructor": <#Global.CSSSupportsRule.prototype.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]].prototype,
    [[Class]]: "Object"
  },
  #Global.CSSSupportsRule.prototype.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"CSSConditionRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSSupportsRule.prototype.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]],
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]]: {
    "length": <0, F, F, T>,
    "name": <"CSSGroupingRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]].prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]].prototype: {
    "cssRules": <undefined, T, T, T>,
    "insertRule": <#Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertRule, T, T, T>,
    "deleteRule": <#Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]].prototype.deleteRule, T, T, T>,
    "constructor": <#Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]], T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]].prototype.insertRule: {
    "length": <2, F, F, T>,
    "name": <"insertRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSSupportsRule.prototype.[[Prototype]].constructor.[[Prototype]].prototype.deleteRule: {
    "length": <1, F, F, T>,
    "name": <"deleteRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleSheet: {
    "length": <0, F, F, T>,
    "name": <"CSSStyleSheet", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSStyleSheet.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.StyleSheet,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSStyleSheet.prototype: {
    "ownerRule": <undefined, T, T, T>,
    "cssRules": <undefined, T, T, T>,
    "rules": <undefined, T, T, T>,
    "insertRule": <#Global.CSSStyleSheet.prototype.insertRule, T, T, T>,
    "deleteRule": <#Global.CSSStyleSheet.prototype.deleteRule, T, T, T>,
    "addRule": <#Global.CSSStyleSheet.prototype.addRule, T, T, T>,
    "removeRule": <#Global.CSSStyleSheet.prototype.removeRule, T, T, T>,
    "constructor": <#Global.CSSStyleSheet, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.StyleSheet.prototype,
    [[Class]]: "Object"
  },
  #Global.CSSStyleSheet.prototype.insertRule: {
    "length": <1, F, F, T>,
    "name": <"insertRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleSheet.prototype.deleteRule: {
    "length": <1, F, F, T>,
    "name": <"deleteRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleSheet.prototype.addRule: {
    "length": <0, F, F, T>,
    "name": <"addRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleSheet.prototype.removeRule: {
    "length": <0, F, F, T>,
    "name": <"removeRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleRule: {
    "length": <0, F, F, T>,
    "name": <"CSSStyleRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSStyleRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSStyleRule.prototype: {
    "selectorText": <undefined, T, T, T>,
    "style": <undefined, T, T, T>,
    "constructor": <#Global.CSSStyleRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSStyleDeclaration: {
    "length": <0, F, F, T>,
    "name": <"CSSStyleDeclaration", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSStyleDeclaration.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSStyleDeclaration.prototype: {
    "cssText": <undefined, T, T, T>,
    "length": <undefined, T, T, T>,
    "parentRule": <undefined, T, T, T>,
    "cssFloat": <undefined, T, T, T>,
    "item": <#Global.CSSStyleDeclaration.prototype.item, T, T, T>,
    "getPropertyValue": <#Global.CSSStyleDeclaration.prototype.getPropertyValue, T, T, T>,
    "getPropertyPriority": <#Global.CSSStyleDeclaration.prototype.getPropertyPriority, T, T, T>,
    "setProperty": <#Global.CSSStyleDeclaration.prototype.setProperty, T, T, T>,
    "removeProperty": <#Global.CSSStyleDeclaration.prototype.removeProperty, T, T, T>,
    "constructor": <#Global.CSSStyleDeclaration, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CSSStyleDeclaration.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleDeclaration.prototype.getPropertyValue: {
    "length": <1, F, F, T>,
    "name": <"getPropertyValue", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleDeclaration.prototype.getPropertyPriority: {
    "length": <1, F, F, T>,
    "name": <"getPropertyPriority", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleDeclaration.prototype.setProperty: {
    "length": <2, F, F, T>,
    "name": <"setProperty", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSStyleDeclaration.prototype.removeProperty: {
    "length": <1, F, F, T>,
    "name": <"removeProperty", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSRuleList: {
    "length": <0, F, F, T>,
    "name": <"CSSRuleList", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSRuleList.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSRuleList.prototype: {
    "length": <undefined, T, T, T>,
    "item": <#Global.CSSRuleList.prototype.item, T, T, T>,
    "constructor": <#Global.CSSRuleList, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CSSRuleList.prototype.item: {
    "length": <1, F, F, T>,
    "name": <"item", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSPageRule: {
    "length": <0, F, F, T>,
    "name": <"CSSPageRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSPageRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSPageRule.prototype: {
    "selectorText": <undefined, T, T, T>,
    "style": <undefined, T, T, T>,
    "constructor": <#Global.CSSPageRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSNamespaceRule: {
    "length": <0, F, F, T>,
    "name": <"CSSNamespaceRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSNamespaceRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSNamespaceRule.prototype: {
    "namespaceURI": <undefined, T, T, T>,
    "prefix": <undefined, T, T, T>,
    "constructor": <#Global.CSSNamespaceRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSMediaRule: {
    "length": <0, F, F, T>,
    "name": <"CSSMediaRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSMediaRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSSupportsRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSMediaRule.prototype: {
    "media": <undefined, T, T, T>,
    "constructor": <#Global.CSSMediaRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSSupportsRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSKeyframesRule: {
    "length": <0, F, F, T>,
    "name": <"CSSKeyframesRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSKeyframesRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSKeyframesRule.prototype: {
    "name": <undefined, T, T, T>,
    "cssRules": <undefined, T, T, T>,
    "appendRule": <#Global.CSSKeyframesRule.prototype.appendRule, T, T, T>,
    "deleteRule": <#Global.CSSKeyframesRule.prototype.deleteRule, T, T, T>,
    "findRule": <#Global.CSSKeyframesRule.prototype.findRule, T, T, T>,
    "constructor": <#Global.CSSKeyframesRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSKeyframesRule.prototype.appendRule: {
    "length": <1, F, F, T>,
    "name": <"appendRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSKeyframesRule.prototype.deleteRule: {
    "length": <1, F, F, T>,
    "name": <"deleteRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSKeyframesRule.prototype.findRule: {
    "length": <1, F, F, T>,
    "name": <"findRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSSKeyframeRule: {
    "length": <0, F, F, T>,
    "name": <"CSSKeyframeRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSKeyframeRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSKeyframeRule.prototype: {
    "keyText": <undefined, T, T, T>,
    "style": <undefined, T, T, T>,
    "constructor": <#Global.CSSKeyframeRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSImportRule: {
    "length": <0, F, F, T>,
    "name": <"CSSImportRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSImportRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSImportRule.prototype: {
    "href": <undefined, T, T, T>,
    "media": <undefined, T, T, T>,
    "styleSheet": <undefined, T, T, T>,
    "constructor": <#Global.CSSImportRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSSFontFaceRule: {
    "length": <0, F, F, T>,
    "name": <"CSSFontFaceRule", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSSFontFaceRule.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSSFontFaceRule.prototype: {
    "style": <undefined, T, T, T>,
    "constructor": <#Global.CSSFontFaceRule, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.CSSViewportRule.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.CSS: {
    "length": <0, F, F, T>,
    "name": <"CSS", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CSS.prototype, F, F, F>,
    "supports": <#Global.CSS.supports, T, T, T>,
    "escape": <#Global.CSS.escape, T, T, T>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CSS.prototype: {
    "constructor": <#Global.CSS, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.CSS.supports: {
    "length": <1, F, F, T>,
    "name": <"supports", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CSS.escape: {
    "length": <1, F, F, T>,
    "name": <"escape", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.CDATASection: {
    "length": <0, F, F, T>,
    "name": <"CDATASection", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.CDATASection.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.CDATASection.prototype: {
    "constructor": <#Global.CDATASection, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Text.prototype,
    [[Class]]: "Object"
  },
  #Global.BeforeUnloadEvent: {
    "length": <0, F, F, T>,
    "name": <"BeforeUnloadEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BeforeUnloadEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BeforeUnloadEvent.prototype: {
    "returnValue": <undefined, T, T, T>,
    "constructor": <#Global.BeforeUnloadEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.BarProp: {
    "length": <0, F, F, T>,
    "name": <"BarProp", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.BarProp.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.BarProp.prototype: {
    "visible": <undefined, T, T, T>,
    "constructor": <#Global.BarProp, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.Attr: {
    "length": <0, F, F, T>,
    "name": <"Attr", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.Attr.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.Attr.prototype: {
    "namespaceURI": <undefined, T, T, T>,
    "prefix": <undefined, T, T, T>,
    "localName": <undefined, T, T, T>,
    "name": <undefined, T, T, T>,
    "value": <undefined, T, T, T>,
    "ownerElement": <undefined, T, T, T>,
    "specified": <undefined, T, T, T>,
    "constructor": <#Global.Attr, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SVGMPathElement.prototype.[[Prototype]].constructor.[[Prototype]].prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ApplicationCacheErrorEvent: {
    "length": <1, F, F, T>,
    "name": <"ApplicationCacheErrorEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ApplicationCacheErrorEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ApplicationCacheErrorEvent.prototype: {
    "reason": <undefined, T, T, T>,
    "url": <undefined, T, T, T>,
    "status": <undefined, T, T, T>,
    "message": <undefined, T, T, T>,
    "constructor": <#Global.ApplicationCacheErrorEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ApplicationCache: {
    "length": <0, F, F, T>,
    "name": <"ApplicationCache", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.ApplicationCache.prototype, F, F, F>,
    "UNCACHED": <0, F, T, F>,
    "IDLE": <1, F, T, F>,
    "CHECKING": <2, F, T, F>,
    "DOWNLOADING": <3, F, T, F>,
    "UPDATEREADY": <4, F, T, F>,
    "OBSOLETE": <5, F, T, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.ApplicationCache.prototype: {
    "UNCACHED": <0, F, T, F>,
    "IDLE": <1, F, T, F>,
    "CHECKING": <2, F, T, F>,
    "DOWNLOADING": <3, F, T, F>,
    "UPDATEREADY": <4, F, T, F>,
    "OBSOLETE": <5, F, T, F>,
    "status": <undefined, T, T, T>,
    "onchecking": <undefined, T, T, T>,
    "onerror": <undefined, T, T, T>,
    "onnoupdate": <undefined, T, T, T>,
    "ondownloading": <undefined, T, T, T>,
    "onprogress": <undefined, T, T, T>,
    "onupdateready": <undefined, T, T, T>,
    "oncached": <undefined, T, T, T>,
    "onobsolete": <undefined, T, T, T>,
    "update": <#Global.ApplicationCache.prototype.update, T, T, T>,
    "abort": <#Global.ApplicationCache.prototype.abort, T, T, T>,
    "swapCache": <#Global.ApplicationCache.prototype.swapCache, T, T, T>,
    "constructor": <#Global.ApplicationCache, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.BluetoothRemoteGATTCharacteristic.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.ApplicationCache.prototype.update: {
    "length": <0, F, F, T>,
    "name": <"update", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ApplicationCache.prototype.abort: {
    "length": <0, F, F, T>,
    "name": <"abort", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.ApplicationCache.prototype.swapCache: {
    "length": <0, F, F, T>,
    "name": <"swapCache", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.AnimationEvent: {
    "length": <1, F, F, T>,
    "name": <"AnimationEvent", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.AnimationEvent.prototype, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]].constructor,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.AnimationEvent.prototype: {
    "animationName": <undefined, T, T, T>,
    "elapsedTime": <undefined, T, T, T>,
    "constructor": <#Global.AnimationEvent, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.SpeechSynthesisEvent.prototype.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.performance: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.Performance.prototype,
    [[Class]]: "Object"
  },
  #Global.styleMedia: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.styleMedia.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.styleMedia.[[Prototype]]: {
    "type": <undefined, T, T, T>,
    "matchMedium": <#Global.styleMedia.[[Prototype]].matchMedium, T, T, T>,
    "constructor": <#Global.styleMedia.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.styleMedia.[[Prototype]].matchMedium: {
    "length": <0, F, F, T>,
    "name": <"matchMedium", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.styleMedia.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"StyleMedia", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.styleMedia.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.clientInformation: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.Navigator.prototype,
    [[Class]]: "Object"
  },
  #Global.screen: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.Screen.prototype,
    [[Class]]: "Object"
  },
  #Global.external: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.external.[[Prototype]],
    [[Class]]: "Object"
  },
  #Global.external.[[Prototype]]: {
    "AddSearchProvider": <#Global.external.[[Prototype]].AddSearchProvider, T, T, T>,
    "IsSearchProviderInstalled": <#Global.external.[[Prototype]].IsSearchProviderInstalled, T, T, T>,
    "constructor": <#Global.external.[[Prototype]].constructor, T, F, T>,
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Class]]: "Object"
  },
  #Global.external.[[Prototype]].AddSearchProvider: {
    "length": <0, F, F, T>,
    "name": <"AddSearchProvider", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.external.[[Prototype]].IsSearchProviderInstalled: {
    "length": <0, F, F, T>,
    "name": <"IsSearchProviderInstalled", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.external.[[Prototype]].constructor: {
    "length": <0, F, F, T>,
    "name": <"External", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    "prototype": <#Global.external.[[Prototype]], F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[HasInstance]]: null,
    [[Class]]: "Function"
  },
  #Global.applicationCache: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.ApplicationCache.prototype,
    [[Class]]: "Object"
  },
  #Global.toolbar: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.BarProp.prototype,
    [[Class]]: "Object"
  },
  #Global.statusbar: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.BarProp.prototype,
    [[Class]]: "Object"
  },
  #Global.scrollbars: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.BarProp.prototype,
    [[Class]]: "Object"
  },
  #Global.personalbar: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.BarProp.prototype,
    [[Class]]: "Object"
  },
  #Global.menubar: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.BarProp.prototype,
    [[Class]]: "Object"
  },
  #Global.locationbar: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.BarProp.prototype,
    [[Class]]: "Object"
  },
  #Global.history: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.History.prototype,
    [[Class]]: "Object"
  },
  #Global.location: {
    "replace": <#Global.location.replace, F, T, F>,
    "assign": <#Global.location.assign, F, T, F>,
    "hash": <"", T, T, F>,
    "search": <"", T, T, F>,
    "pathname": <"/Users/naldo/project/safe/lib/snapshot/index.html", T, T, F>,
    "port": <"", T, T, F>,
    "hostname": <"", T, T, F>,
    "host": <"", T, T, F>,
    "protocol": <"file:", T, T, F>,
    "origin": <"file://", F, T, F>,
    "href": <"file:///Users/naldo/project/safe/lib/snapshot/index.html", T, T, F>,
    "ancestorOrigins": <#Global.location.ancestorOrigins, F, T, F>,
    "reload": <#Global.location.reload, F, T, F>,
    "toString": <#Global.location.toString, F, F, F>,
    "valueOf": <#Global.location.valueOf, F, F, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.Location.prototype,
    [[Class]]: "Object"
  },
  #Global.location.replace: {
    "length": <1, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.location.assign: {
    "length": <1, F, F, T>,
    "name": <"", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.location.ancestorOrigins: {
    [[Extensible]]: true,
    [[Prototype]]: #Global.DOMStringList.prototype,
    [[Class]]: "Object"
  },
  #Global.location.reload: {
    "length": <0, F, F, T>,
    "name": <"reload", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.location.toString: {
    "length": <0, F, F, T>,
    "name": <"toString", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.location.valueOf: {
    "length": <0, F, F, T>,
    "name": <"valueOf", F, F, T>,
    "arguments": <null, F, F, F>,
    "caller": <null, F, F, F>,
    [[Scope]]: null,
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Class]]: "Function"
  },
  #Global.document: {
    "location": <#Global.location, T, T, F>,
    [[Extensible]]: true,
    [[Prototype]]: #Global.HTMLDocument.prototype,
    [[Class]]: "Object"
  },
  #Array: {
    [[Call]]: fun(59),
    [[Class]]: "Function",
    [[Construct]]: fun(60),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "isArray": <#Array.isArray, T, F, T>,
    "length": <1, F, F, F>,
    "prototype": <#Array.prototype, F, F, F>
  },
  #Array.isArray: {
    [[Call]]: fun(61),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype: {
    [[Class]]: "Array",
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    "concat": <#Array.prototype.concat, T, F, T>,
    "constructor": <#Array, T, F, T>,
    "every": <#Array.prototype.every, T, F, T>,
    "filter": <#Array.prototype.filter, T, F, T>,
    "forEach": <#Array.prototype.forEach, T, F, T>,
    "indexOf": <#Array.prototype.indexOf, T, F, T>,
    "join": <#Array.prototype.join, T, F, T>,
    "lastIndexOf": <#Array.prototype.lastIndexOf, T, F, T>,
    "length": <0, T, F, T>,
    "map": <#Array.prototype.map, T, F, T>,
    "pop": <#Array.prototype.pop, T, F, T>,
    "push": <#Array.prototype.push, T, F, T>,
    "reduce": <#Array.prototype.reduce, T, F, T>,
    "reduceRight": <#Array.prototype.reduceRight, T, F, T>,
    "reverse": <#Array.prototype.reverse, T, F, T>,
    "shift": <#Array.prototype.shift, T, F, T>,
    "slice": <#Array.prototype.slice, T, F, T>,
    "some": <#Array.prototype.some, T, F, T>,
    "sort": <#Array.prototype.sort, T, F, T>,
    "splice": <#Array.prototype.splice, T, F, T>,
    "toLocaleString": <#Array.prototype.toLocaleString, T, F, T>,
    "toString": <#Array.prototype.toString, T, F, T>,
    "unshift": <#Array.prototype.unshift, T, F, T>
  },
  #Array.prototype.concat: {
    [[Call]]: fun(40),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.every: {
    [[Call]]: fun(52),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.filter: {
    [[Call]]: fun(56),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.forEach: {
    [[Call]]: fun(54),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.indexOf: {
    [[Call]]: fun(50),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.join: {
    [[Call]]: fun(41),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.lastIndexOf: {
    [[Call]]: fun(51),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.map: {
    [[Call]]: fun(55),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.pop: {
    [[Call]]: fun(42),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Array.prototype.push: {
    [[Call]]: fun(43),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.reduce: {
    [[Call]]: fun(57),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.reduceRight: {
    [[Call]]: fun(58),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.reverse: {
    [[Call]]: fun(44),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Array.prototype.shift: {
    [[Call]]: fun(45),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Array.prototype.slice: {
    [[Call]]: fun(46),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Array.prototype.some: {
    [[Call]]: fun(53),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.sort: {
    [[Call]]: fun(47),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Array.prototype.splice: {
    [[Call]]: fun(48),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Array.prototype.toLocaleString: {
    [[Call]]: fun(39),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Array.prototype.toString: {
    [[Call]]: fun(38),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Array.prototype.unshift: {
    [[Call]]: fun(49),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Boolean: {
    [[Call]]: fun(87),
    [[Class]]: "Function",
    [[Construct]]: fun(88),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "prototype": <#Boolean.prototype, F, F, F>
  },
  #Boolean.prototype: {
    [[Class]]: "Boolean",
    [[Extensible]]: true,
    [[PrimitiveValue]]: false,
    [[Prototype]]: #Object.prototype,
    "constructor": <#Boolean, T, F, T>,
    "toString": <#Boolean.prototype.toString, T, F, T>,
    "valueOf": <#Boolean.prototype.valueOf, T, F, T>
  },
  #Boolean.prototype.toString: {
    [[Call]]: fun(85),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Boolean.prototype.valueOf: {
    [[Call]]: fun(86),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date: {
    [[Call]]: fun(142),
    [[Class]]: "Function",
    [[Construct]]: fun(143),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "UTC": <#Date.UTC, T, F, T>,
    "length": <7, F, F, F>,
    "now": <#Date.now, T, F, T>,
    "parse": <#Date.parse, T, F, T>,
    "prototype": <#Date.prototype, F, F, F>
  },
  #Date.UTC: {
    [[Call]]: fun(145),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <7, F, F, F>
  },
  #Date.now: {
    [[Call]]: fun(146),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.parse: {
    [[Call]]: fun(144),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype: {
    [[Class]]: "Date",
    [[Extensible]]: true,
    [[PrimitiveValue]]: NaN,
    [[Prototype]]: #Object.prototype,
    "constructor": <#Date, T, F, T>,
    "getDate": <#Date.prototype.getDate, T, F, T>,
    "getDay": <#Date.prototype.getDay, T, F, T>,
    "getFullYear": <#Date.prototype.getFullYear, T, F, T>,
    "getHours": <#Date.prototype.getHours, T, F, T>,
    "getMilliseconds": <#Date.prototype.getMilliseconds, T, F, T>,
    "getMinutes": <#Date.prototype.getMinutes, T, F, T>,
    "getMonth": <#Date.prototype.getMonth, T, F, T>,
    "getSeconds": <#Date.prototype.getSeconds, T, F, T>,
    "getTime": <#Date.prototype.getTime, T, F, T>,
    "getTimezoneOffset": <#Date.prototype.getTimezoneOffset, T, F, T>,
    "getUTCDate": <#Date.prototype.getUTCDate, T, F, T>,
    "getUTCDay": <#Date.prototype.getUTCDay, T, F, T>,
    "getUTCFullYear": <#Date.prototype.getUTCFullYear, T, F, T>,
    "getUTCHours": <#Date.prototype.getUTCHours, T, F, T>,
    "getUTCMilliseconds": <#Date.prototype.getUTCMilliseconds, T, F, T>,
    "getUTCMinutes": <#Date.prototype.getUTCMinutes, T, F, T>,
    "getUTCMonth": <#Date.prototype.getUTCMonth, T, F, T>,
    "getUTCSeconds": <#Date.prototype.getUTCSeconds, T, F, T>,
    "setDate": <#Date.prototype.setDate, T, F, T>,
    "setFullYear": <#Date.prototype.setFullYear, T, F, T>,
    "setHours": <#Date.prototype.setHours, T, F, T>,
    "setMilliseconds": <#Date.prototype.setMilliseconds, T, F, T>,
    "setMinutes": <#Date.prototype.setMinutes, T, F, T>,
    "setMonth": <#Date.prototype.setMonth, T, F, T>,
    "setSeconds": <#Date.prototype.setSeconds, T, F, T>,
    "setTime": <#Date.prototype.setTime, T, F, T>,
    "setUTCDate": <#Date.prototype.setUTCDate, T, F, T>,
    "setUTCFullYear": <#Date.prototype.setUTCFullYear, T, F, T>,
    "setUTCHours": <#Date.prototype.setUTCHours, T, F, T>,
    "setUTCMilliseconds": <#Date.prototype.setUTCMilliseconds, T, F, T>,
    "setUTCMinutes": <#Date.prototype.setUTCMinutes, T, F, T>,
    "setUTCMonth": <#Date.prototype.setUTCMonth, T, F, T>,
    "setUTCSeconds": <#Date.prototype.setUTCSeconds, T, F, T>,
    "toDateString": <#Date.prototype.toDateString, T, F, T>,
    "toISOString": <#Date.prototype.toISOString, T, F, T>,
    "toJSON": <#Date.prototype.toJSON, T, F, T>,
    "toLocaleDateString": <#Date.prototype.toLocaleDateString, T, F, T>,
    "toLocaleString": <#Date.prototype.toLocaleString, T, F, T>,
    "toLocaleTimeString": <#Date.prototype.toLocaleTimeString, T, F, T>,
    "toString": <#Date.prototype.toString, T, F, T>,
    "toTimeString": <#Date.prototype.toTimeString, T, F, T>,
    "toUTCString": <#Date.prototype.toUTCString, T, F, T>,
    "valueOf": <#Date.prototype.valueOf, T, F, T>
  },
  #Date.prototype.constructor: {
    [[Call]]: fun(98),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype.getDate: {
    [[Call]]: fun(111),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getDay: {
    [[Call]]: fun(113),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getFullYear: {
    [[Call]]: fun(107),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getHours: {
    [[Call]]: fun(115),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getMilliseconds: {
    [[Call]]: fun(121),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getMinutes: {
    [[Call]]: fun(117),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getMonth: {
    [[Call]]: fun(109),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getSeconds: {
    [[Call]]: fun(119),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getTime: {
    [[Call]]: fun(106),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getTimezoneOffset: {
    [[Call]]: fun(123),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCDate: {
    [[Call]]: fun(112),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCDay: {
    [[Call]]: fun(114),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCFullYear: {
    [[Call]]: fun(108),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCHours: {
    [[Call]]: fun(116),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCMilliseconds: {
    [[Call]]: fun(122),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCMinutes: {
    [[Call]]: fun(118),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCMonth: {
    [[Call]]: fun(110),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.getUTCSeconds: {
    [[Call]]: fun(120),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.setDate: {
    [[Call]]: fun(133),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype.setFullYear: {
    [[Call]]: fun(137),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <3, F, F, F>
  },
  #Date.prototype.setHours: {
    [[Call]]: fun(131),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <4, F, F, F>
  },
  #Date.prototype.setMilliseconds: {
    [[Call]]: fun(125),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype.setMinutes: {
    [[Call]]: fun(129),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <3, F, F, F>
  },
  #Date.prototype.setMonth: {
    [[Call]]: fun(135),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Date.prototype.setSeconds: {
    [[Call]]: fun(127),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Date.prototype.setTime: {
    [[Call]]: fun(124),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype.setUTCDate: {
    [[Call]]: fun(134),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype.setUTCFullYear: {
    [[Call]]: fun(138),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <3, F, F, F>
  },
  #Date.prototype.setUTCHours: {
    [[Call]]: fun(132),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <4, F, F, F>
  },
  #Date.prototype.setUTCMilliseconds: {
    [[Call]]: fun(126),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype.setUTCMinutes: {
    [[Call]]: fun(130),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <3, F, F, F>
  },
  #Date.prototype.setUTCMonth: {
    [[Call]]: fun(136),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Date.prototype.setUTCSeconds: {
    [[Call]]: fun(128),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Date.prototype.toDateString: {
    [[Call]]: fun(100),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.toISOString: {
    [[Call]]: fun(140),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.toJSON: {
    [[Call]]: fun(141),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Date.prototype.toLocaleDateString: {
    [[Call]]: fun(103),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.toLocaleString: {
    [[Call]]: fun(102),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.toLocaleTimeString: {
    [[Call]]: fun(104),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.toString: {
    [[Call]]: fun(99),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.toTimeString: {
    [[Call]]: fun(101),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.toUTCString: {
    [[Call]]: fun(139),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Date.prototype.valueOf: {
    [[Call]]: fun(105),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Error: {
    [[Call]]: fun(153),
    [[Class]]: "Function",
    [[Construct]]: fun(154),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "prototype": <#Error.prototype, F, F, F>
  },
  #Error.prototype: {
    [[Class]]: "Error",
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    "constructor": <#Error, T, F, T>,
    "message": <"", T, F, T>,
    "name": <"Error", T, F, T>,
    "toString": <#Error.prototype.toString, T, F, T>
  },
  #Error.prototype.toString: {
    [[Call]]: fun(152),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #EvalError: {
    [[Call]]: fun(155),
    [[Class]]: "Function",
    [[Construct]]: fun(156),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "name": <"EvalError", T, F, T>,
    "prototype": <#EvalError.prototype, F, F, F>
  },
  #EvalError.prototype: {
    [[Class]]: "Error",
    [[Extensible]]: true,
    [[Prototype]]: #Error.prototype,
    "constructor": <#EvalError, T, F, T>,
    "message": <"", T, F, T>,
    "name": <"EvalError", T, F, T>
  },
  #Function: {
    [[Call]]: fun(36),
    [[Class]]: "Function",
    [[Construct]]: fun(37),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "prototype": <#Function.prototype, F, F, F>
  },
  #Function.prototype: {
    [[Call]]: fun(31),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    [[Scope]]: null,
    "apply": <#Function.prototype.apply, T, F, T>,
    "bind": <#Function.prototype.bind, T, F, T>,
    "call": <#Function.prototype.call, T, F, T>,
    "constructor": <#Function, T, F, T>,
    "length": <0, F, F, F>,
    "toString": <#Function.prototype.toString, T, F, T>
  },
  #Function.prototype.apply: {
    [[Call]]: fun(33),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Function.prototype.bind: {
    [[Call]]: fun(35),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Function.prototype.call: {
    [[Call]]: fun(34),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Function.prototype.toString: {
    [[Call]]: fun(32),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #JSON: {
    [[Class]]: "JSON",
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    "parse": <#JSON.parse, T, F, T>,
    "stringify": <#JSON.stringify, T, F, T>
  },
  #JSON.parse: {
    [[Call]]: fun(185),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #JSON.stringify: {
    [[Call]]: fun(186),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <3, F, F, F>
  },
  #Math: {
    [[Class]]: "Math",
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    "E": <2.718281828459045, F, F, F>,
    "LN10": <2.302585092994046, F, F, F>,
    "LN2": <0.6931471805599453, F, F, F>,
    "LOG10E": <0.4342944819032518, F, F, F>,
    "LOG2E": <1.4426950408889634, F, F, F>,
    "PI": <3.141592653589793, F, F, F>,
    "SQRT1_2": <0.7071067811865476, F, F, F>,
    "SQRT2": <1.4142135623730951, F, F, F>,
    "abs": <#Math.abs, T, F, T>,
    "acos": <#Math.acos, T, F, T>,
    "asin": <#Math.asin, T, F, T>,
    "atan": <#Math.atan, T, F, T>,
    "atan2": <#Math.atan2, T, F, T>,
    "ceil": <#Math.ceil, T, F, T>,
    "cos": <#Math.cos, T, F, T>,
    "exp": <#Math.exp, T, F, T>,
    "floor": <#Math.floor, T, F, T>,
    "log": <#Math.log, T, F, T>,
    "max": <#Math.max, T, F, T>,
    "min": <#Math.min, T, F, T>,
    "pow": <#Math.pow, T, F, T>,
    "random": <#Math.random, T, F, T>,
    "round": <#Math.round, T, F, T>,
    "sin": <#Math.sin, T, F, T>,
    "sqrt": <#Math.sqrt, T, F, T>,
    "tan": <#Math.tan, T, F, T>
  },
  #Math.abs: {
    [[Call]]: fun(167),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.acos: {
    [[Call]]: fun(168),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.asin: {
    [[Call]]: fun(169),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.atan: {
    [[Call]]: fun(170),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.atan2: {
    [[Call]]: fun(171),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Math.ceil: {
    [[Call]]: fun(172),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.cos: {
    [[Call]]: fun(173),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.exp: {
    [[Call]]: fun(174),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.floor: {
    [[Call]]: fun(175),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.log: {
    [[Call]]: fun(176),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.max: {
    [[Call]]: fun(177),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Math.min: {
    [[Call]]: fun(178),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Math.pow: {
    [[Call]]: fun(179),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Math.random: {
    [[Call]]: fun(180),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Math.round: {
    [[Call]]: fun(181),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.sin: {
    [[Call]]: fun(182),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.sqrt: {
    [[Call]]: fun(183),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Math.tan: {
    [[Call]]: fun(184),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Number: {
    [[Call]]: fun(96),
    [[Class]]: "Function",
    [[Construct]]: fun(97),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "MAX_VALUE": <1.7976931348623157E+308, F, F, F>,
    "MIN_VALUE": <4.9E-324, F, F, F>,
    "NEGATIVE_INFINITY": <-Infinity, F, F, F>,
    "NaN": <NaN, F, F, F>,
    "POSITIVE_INFINITY": <Infinity, F, F, F>,
    "length": <1, F, F, F>,
    "prototype": <#Number.prototype, F, F, F>
  },
  #Number.prototype: {
    [[Class]]: "Number",
    [[Extensible]]: true,
    [[PrimitiveValue]]: 0,
    [[Prototype]]: #Object.prototype,
    "constructor": <#Number, T, F, T>,
    "toExponential": <#Number.prototype.toExponential, T, F, T>,
    "toFixed": <#Number.prototype.toFixed, T, F, T>,
    "toLocaleString": <#Number.prototype.toLocaleString, T, F, T>,
    "toPrecision": <#Number.prototype.toPrecision, T, F, T>,
    "toString": <#Number.prototype.toString, T, F, T>,
    "valueOf": <#Number.prototype.valueOf, T, F, T>
  },
  #Number.prototype.constructor: {
    [[Call]]: fun(89),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Number.prototype.toExponential: {
    [[Call]]: fun(94),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Number.prototype.toFixed: {
    [[Call]]: fun(93),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Number.prototype.toLocaleString: {
    [[Call]]: fun(91),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Number.prototype.toPrecision: {
    [[Call]]: fun(95),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Number.prototype.toString: {
    [[Call]]: fun(90),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Number.prototype.valueOf: {
    [[Call]]: fun(92),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Object: {
    [[Call]]: fun(16),
    [[Class]]: "Function",
    [[Construct]]: fun(17),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "create": <#Object.create, T, F, T>,
    "defineProperties": <#Object.defineProperties, T, F, T>,
    "defineProperty": <#Object.defineProperty, T, F, T>,
    "freeze": <#Object.freeze, T, F, T>,
    "getOwnPropertyDescriptor": <#Object.getOwnPropertyDescriptor, T, F, T>,
    "getOwnPropertyNames": <#Object.getOwnPropertyNames, T, F, T>,
    "getPrototypeOf": <#Object.getPrototypeOf, T, F, T>,
    "isExtensible": <#Object.isExtensible, T, F, T>,
    "isFrozen": <#Object.isFrozen, T, F, T>,
    "isSealed": <#Object.isSealed, T, F, T>,
    "keys": <#Object.keys, T, F, T>,
    "length": <1, F, F, F>,
    "preventExtensions": <#Object.preventExtensions, T, F, T>,
    "prototype": <#Object.prototype, F, F, F>,
    "seal": <#Object.seal, T, F, T>
  },
  #Object.create: {
    [[Call]]: fun(21),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Object.defineProperties: {
    [[Call]]: fun(23),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Object.defineProperty: {
    [[Call]]: fun(22),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <3, F, F, F>
  },
  #Object.freeze: {
    [[Call]]: fun(25),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.getOwnPropertyDescriptor: {
    [[Call]]: fun(19),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #Object.getOwnPropertyNames: {
    [[Call]]: fun(20),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.getPrototypeOf: {
    [[Call]]: fun(18),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.isExtensible: {
    [[Call]]: fun(29),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.isFrozen: {
    [[Call]]: fun(28),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.isSealed: {
    [[Call]]: fun(27),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.keys: {
    [[Call]]: fun(30),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.preventExtensions: {
    [[Call]]: fun(26),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.prototype: {
    [[Class]]: "Object",
    [[Extensible]]: true,
    [[Prototype]]: null,
    "constructor": <#Object, T, F, T>,
    "hasOwnProperty": <#Object.prototype.hasOwnProperty, T, F, T>,
    "isPrototypeOf": <#Object.prototype.isPrototypeOf, T, F, T>,
    "propertyIsEnumerable": <#Object.prototype.propertyIsEnumerable, T, F, T>,
    "toLocaleString": <#Object.prototype.toLocaleString, T, F, T>,
    "toString": <#Object.prototype.toString, T, F, T>,
    "valueOf": <#Object.prototype.valueOf, T, F, T>
  },
  #Object.prototype.hasOwnProperty: {
    [[Call]]: fun(13),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.prototype.isPrototypeOf: {
    [[Call]]: fun(14),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.prototype.propertyIsEnumerable: {
    [[Call]]: fun(15),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #Object.prototype.toLocaleString: {
    [[Call]]: fun(11),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Object.prototype.toString: {
    [[Call]]: fun(10),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Object.prototype.valueOf: {
    [[Call]]: fun(12),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #Object.seal: {
    [[Call]]: fun(24),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #RangeError: {
    [[Call]]: fun(157),
    [[Class]]: "Function",
    [[Construct]]: fun(158),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "name": <"RangeError", T, F, T>,
    "prototype": <#RangeError.prototype, F, F, F>
  },
  #RangeError.prototype: {
    [[Class]]: "Error",
    [[Extensible]]: true,
    [[Prototype]]: #Error.prototype,
    "constructor": <#RangeError, T, F, T>,
    "message": <"", T, F, T>,
    "name": <"RangeError", T, F, T>
  },
  #ReferenceError: {
    [[Call]]: fun(159),
    [[Class]]: "Function",
    [[Construct]]: fun(160),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "name": <"ReferenceError", T, F, T>,
    "prototype": <#ReferenceError.prototype, F, F, F>
  },
  #ReferenceError.prototype: {
    [[Class]]: "Error",
    [[Extensible]]: true,
    [[Prototype]]: #Error.prototype,
    "constructor": <#ReferenceError, T, F, T>,
    "message": <"", T, F, T>,
    "name": <"ReferenceError", T, F, T>
  },
  #RegExp: {
    [[Call]]: fun(150),
    [[Class]]: "Function",
    [[Construct]]: fun(151),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>,
    "prototype": <#RegExp.prototype, F, F, F>
  },
  #RegExp.prototype: {
    [[Class]]: "RegExp",
    [[Extensible]]: true,
    [[Prototype]]: #Object.prototype,
    "constructor": <#RegExp, T, F, T>,
    "exec": <#RegExp.prototype.exec, T, F, T>,
    "test": <#RegExp.prototype.test, T, F, T>,
    "toString": <#RegExp.prototype.toString, T, F, T>
  },
  #RegExp.prototype.exec: {
    [[Call]]: fun(147),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #RegExp.prototype.test: {
    [[Call]]: fun(148),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #RegExp.prototype.toString: {
    [[Call]]: fun(149),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #String: {
    [[Call]]: fun(82),
    [[Class]]: "Function",
    [[Construct]]: fun(83),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "fromCharCode": <#String.fromCharCode, T, F, T>,
    "length": <1, F, F, F>,
    "prototype": <#String.prototype, F, F, F>
  },
  #String.fromCharCode: {
    [[Call]]: fun(84),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype: {
    [[Class]]: "String",
    [[Extensible]]: true,
    [[PrimitiveValue]]: "",
    [[Prototype]]: #Object.prototype,
    "charAt": <#String.prototype.charAt, T, F, T>,
    "charCodeAt": <#String.prototype.charCodeAt, T, F, T>,
    "concat": <#String.prototype.concat, T, F, T>,
    "constructor": <#String, T, F, T>,
    "indexOf": <#String.prototype.indexOf, T, F, T>,
    "lastIndexOf": <#String.prototype.lastIndexOf, T, F, T>,
    "localeCompare": <#String.prototype.localeCompare, T, F, T>,
    "match": <#String.prototype.match, T, F, T>,
    "replace": <#String.prototype.replace, T, F, T>,
    "search": <#String.prototype.search, T, F, T>,
    "slice": <#String.prototype.slice, T, F, T>,
    "split": <#String.prototype.split, T, F, T>,
    "substring": <#String.prototype.substring, T, F, T>,
    "toLocaleLowerCase": <#String.prototype.toLocaleLowerCase, T, F, T>,
    "toLocaleUpperCase": <#String.prototype.toLocaleUpperCase, T, F, T>,
    "toLowerCase": <#String.prototype.toLowerCase, T, F, T>,
    "toString": <#String.prototype.toString, T, F, T>,
    "toUpperCase": <#String.prototype.toUpperCase, T, F, T>,
    "trim": <#String.prototype.trim, T, F, T>,
    "valueOf": <#String.prototype.valueOf, T, F, T>
  },
  #String.prototype.charAt: {
    [[Call]]: fun(65),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.charCodeAt: {
    [[Call]]: fun(66),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.concat: {
    [[Call]]: fun(67),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.constructor: {
    [[Call]]: fun(62),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.indexOf: {
    [[Call]]: fun(68),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.lastIndexOf: {
    [[Call]]: fun(69),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.localeCompare: {
    [[Call]]: fun(70),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.match: {
    [[Call]]: fun(71),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.replace: {
    [[Call]]: fun(72),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #String.prototype.search: {
    [[Call]]: fun(73),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>
  },
  #String.prototype.slice: {
    [[Call]]: fun(74),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #String.prototype.split: {
    [[Call]]: fun(75),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #String.prototype.substring: {
    [[Call]]: fun(76),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <2, F, F, F>
  },
  #String.prototype.toLocaleLowerCase: {
    [[Call]]: fun(78),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #String.prototype.toLocaleUpperCase: {
    [[Call]]: fun(80),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #String.prototype.toLowerCase: {
    [[Call]]: fun(77),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #String.prototype.toString: {
    [[Call]]: fun(63),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #String.prototype.toUpperCase: {
    [[Call]]: fun(79),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #String.prototype.trim: {
    [[Call]]: fun(81),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #String.prototype.valueOf: {
    [[Call]]: fun(64),
    [[Class]]: "Function",
    [[Extensible]]: true,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <0, F, F, F>
  },
  #SyntaxError: {
    [[Call]]: fun(161),
    [[Class]]: "Function",
    [[Construct]]: fun(162),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "name": <"SyntaxError", T, F, T>,
    "prototype": <#SyntaxError.prototype, F, F, F>
  },
  #SyntaxError.prototype: {
    [[Class]]: "Error",
    [[Extensible]]: true,
    [[Prototype]]: #Error.prototype,
    "constructor": <#SyntaxError, T, F, T>,
    "message": <"", T, F, T>,
    "name": <"SyntaxError", T, F, T>
  },
  #TypeError: {
    [[Call]]: fun(163),
    [[Class]]: "Function",
    [[Construct]]: fun(164),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "name": <"TypeError", T, F, T>,
    "prototype": <#TypeError.prototype, F, F, F>
  },
  #TypeError.prototype: {
    [[Class]]: "Error",
    [[Extensible]]: true,
    [[Prototype]]: #Error.prototype,
    "constructor": <#TypeError, T, F, T>,
    "message": <"", T, F, T>,
    "name": <"TypeError", T, F, T>
  },
  #URIError: {
    [[Call]]: fun(165),
    [[Class]]: "Function",
    [[Construct]]: fun(166),
    [[Extensible]]: true,
    [[HasInstance]]: null,
    [[Prototype]]: #Function.prototype,
    [[Scope]]: null,
    "length": <1, F, F, F>,
    "name": <"URIError", T, F, T>,
    "prototype": <#URIError.prototype, F, F, F>
  },
  #URIError.prototype: {
    [[Class]]: "Error",
    [[Extensible]]: true,
    [[Prototype]]: #Error.prototype,
    "constructor": <#URIError, T, F, T>,
    "message": <"", T, F, T>,
    "name": <"URIError", T, F, T>,
  }
}
Function: {
  1: [\\
  function () {
  }
  \\],
  2: [\\
  function () {
  }
  \\],
  3: [\\
  function () {
  }
  \\],
  4: [\\
  function isNaN (number) {
    // 1. If ToNumber(number) is NaN, return true.
    // 2. Otherwise, return false.
    return @SameValue(@ToNumber(number), NaN);
  }
  \\],
  5: [\\
  function isFinite (number) {
    // 1. If ToNumber(number) is NaN, +Inf or -Inf, return false.
    // 2. Otherwise, return true.
    var num = @ToNumber(number);
    return !@SameValue(num, NaN)
      && !@SameValue(num, Infinity)
      && !@SameValue(num, -Infinity);
  }
  \\],
  6: [\\
  function () {
  }
  \\],
  7: [\\
  function () {
  }
  \\],
  8: [\\
  function () {
  }
  \\],
  9: [\\
  function () {
  }
  \\],
  10: [\\
  function toString () {
    // 1. If the this value is undefined, return "[object Undefined]".
    if (this === undefined) return '[object Undefined]';
    // 2. If the this value is null, return "[object Null]".
    if (this === null) return '[object Null]';
    // 3. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 4. Let class be the value of the [[Class]] internal property of O.
    var class = @Class(O);
    // 5. Return the String value that is the result of concatenating the three Strings "[object ", class, and "]"
    return '[object ' + class + ']';
  }
  \\],
  11: [\\
  function toLocaleString () {
    // XXX it is not exact toLocaleString but just toString.
    // 1. If the this value is undefined, return "[object Undefined]".
    if (this === undefined) return '[object Undefined';
    // 2. If the this value is null, return "[object Null]".
    if (this === null) return '[object Null]';
    // 3. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 4. Let class be the value of the [[Class]] internal property of O.
    var class = @Class(O);
    // 5. Return the String value that is the result of concatenating the three Strings "[object ", class, and "]"
    return '[object ' + class + ']';
  }
  \\],
  12: [\\
  function valueOf () {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // XXX: We do not support host object.
    // 2. If O is the result of calling the Object constructor with a host object (15.2.2.1), then
    //   a. Return either O or another value such as the host object originally passed to the constructor.
    //      The specific result that is returned is implementation-defined.
    // 3. Return O
    return O;
  }
  \\],
  13: [\\
  function hasOwnProperty (V) {
    // 1. Let P be ToString(V).
    var P = @ToString(V);
    // 2. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 3. Let desc be the result of calling the [[GetOwnProperty]] internal method of O passing P as the argument.
    var desc = @GetOwnProperty(O, P);
    // 4. If desc is undefined, return false.
    if (desc === undefined) return false;
    // 5. Return true.
    return true;
  }
  \\],
  14: [\\
  function isPrototypeOf (V) {
    // 1. If V is not an object, return false.
    if (typeof V !== 'object' || V === null) return false;
    // 2. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 3. Repeat
    var _V = V;
    while (true) {
      // a. Let V be the value of the [[Prototype]] internal property of V.
      V = @Prototype(V);
      // b. if V is null, return false
      if (V === null) return false;
      // c. If O and V refer to the same object, return true.
      if (O === V) return true;
    }
  }
  \\],
  15: [\\
  function propertyIsEnumerable (V) {
    // 1. Let P be ToString(V).
    var P = @ToString(V);
    // 2. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 3. Let desc be the result of calling the [[GetOwnProperty]] internal method of O passing P as the argument.
    var desc = @GetOwnProperty(O, P);
    // 4. If desc is undefined, return false.
    if (desc === undefined) return false;
    // 5. Return the value of desc.[[Enumerable]].
    return desc.enumerable;
  }
  \\],
  16: [\\
  function Object (value) {
    if (value === null || value === undefined) return {};
    else return @ToObject(value);
  }
  \\],
  17: [\\
  function Object (value) {
    if (value === null || value === undefined) return {};
    else return @ToObject(value);
  }
  \\],
  18: [\\
  function getPrototypeOf (O) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. Return the value of the [[Prototype]] internal property of O.
    return @Prototype(O);
  }
  \\],
  19: [\\
  function getOwnPropertyDescriptor (O, P) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. Let name be ToString(P).
    var name = @ToString(P);
    // 3. Let desc be the result of calling the [[GetOwnProperty]] internal method of O with argument name.
    // 4. Return the result of calling FromPropertyDescriptor(desc) (8.10.4).
    return @GetOwnProperty(O, name);
  }
  \\],
  20: [\\
  function getOwnPropertyNames (O) {
    return @getOwnPropertyNames(O)
  }
  \\],
  21: [\\
  function create (O, Properties) {
    // 1. If Type(O) is not Object or Null throw a TypeError exception.
    if (typeof O !== 'object') throw new TypeError();
    // 2. Let obj be the result of creating a new object as if by the expression new Object() where Object is the
    // standard built-in constructor with that name
    var obj = new Object();
    // 3. Set the [[Prototype]] internal property of obj to O.
    @Prototype(obj, O);
    // 4. If the argument Properties is present and not undefined, add own properties to obj as if by calling the
    // standard built-in function Object.defineProperties with arguments obj and Properties.
    if (Properties !== undefined) Object.defineProperties(obj, Properties);
    // 5. Return obj.
    return obj;
  }
  \\],
  22: [\\
  function defineProperty (O, P, Attributes) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. Let name be ToString(P).
    var name = @ToString(P);
    // 3. Let desc be the result of calling ToPropertyDescriptor with Attributes as the argument.
    // 4. Call the [[DefineOwnProperty]] internal method of O with arguments name, desc, and true.
    @DefineOwnProperty(O, name, Attributes);
    // 5. Return O.
    return O;
  }
  \\],
  23: [\\
  function defineProperties (O, Properties) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. Let props be ToObject(Properties).
    var props = @ToObject(Properties);
    // 3. Let names be an internal list containing the names of each enumerable own property of props.
    // 4. Let descriptors be an empty internal List.
    // 5. For each element P of names in list order,
      //   a. Let descObj be the result of calling the [[Get]] internal method of props with P as the argument.
      //   b. Let desc be the result of calling ToPropertyDescriptor with descObj as the argument.
      //   c. Append the pair (a two element List) consisting of P and desc to the end of descriptors.
    // 6. For each pair from descriptors in list order,
    //   a. Let P be the first element of pair.
    //   b. Let desc be the second element of pair.
    //   c. Call the [[DefineOwnProperty]] internal method of O with arguments P, desc, and true.
    var names = @getOwnPropertyNames(props);
    for (var i = 0; i < names.length; i++) {
      var P = names[i];
      var p_desc = @GetOwnProperty(props, P);
      if (p_desc.enumerable) {
        var desc = props[P];
        @DefineOwnProperty(O, P, desc);
      }
    }
    // 7. Return O.
    return O;
  }
  \\],
  24: [\\
  function seal (O) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. For each named own property name P of O,
    var names = @getOwnPropertyNames(O)
    for (var i = 0; i < names.length; i++) {
      var P = names[i];
      // a. Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.
      var desc = @GetOwnProperty(O, P);
      // b. If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.
      if (desc.configurable) desc.configurable = false;
      // c. Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as arguments.
      @DefineOwnProperty(O, P, desc);
    }
    // 3. Set the [[Extensible]] internal property of O to false.
    @Extensible(O, false);
    // 4. Return O.
    return O;
  }
  \\],
  25: [\\
  function freeze (O) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. For each named own property name P of O,
    var names = @getOwnPropertyNames(O);
    for (var i = 0; i < names.length; i++) {
      var P = names[i];
      // a. Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.
      var desc = @GetOwnProperty(O, P);
      // b. If IsDataDescriptor(desc) is true, then
      // i. If desc.[[Writable]] is true, set desc.[[Writable]] to false.
      desc.writable = false;
      // c. If desc.[[Configurable]] is true, set desc.[[Configurable]] to false.
      desc.configurable = false;
      // d. Call the [[DefineOwnProperty]] internal method of O with P, desc, and true as arguments.
      @DefineOwnProperty(O, P, desc);
    }
    // 3. Set the [[Extensible]] internal property of O to false.
    @Extensible(O, false);
    // 4. Return O.
    return O;
  }
  \\],
  26: [\\
  function preventExtensions (O) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. Set the [[Extensible]] internal property of O to false.
    @Extensible(O, false);
    // 3. Return O.
    return O;
  }
  \\],
  27: [\\
  function isSealed (O) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. For each named own property name P of O,
    var names = @getOwnPropertyNames(O);
    for (var i = 0; i < names.length; i++) {
      var P = names[i];
      // a. Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.
      var desc = @GetOwnProperty(O, P);
      // b. If desc.[[Configurable]] is true, then return false.
      if (desc.configurable) return false;
    }
    // 3. If the [[Extensible]] internal property of O is false, then return true.
    if (@Extensible(O) === false) return true;
    // 4. Otherwise, return false.
    else return false;
  }
  \\],
  28: [\\
  function isFrozen (O) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. For each named own property name P of O,
    var names = @getOwnPropertyNames(O);
    for (var i = 0; i < names.length; i++) {
      var P = names[i];
      // a. Let desc be the result of calling the [[GetOwnProperty]] internal method of O with P.
      var desc = @GetOwnProperty(O, P);
      // b. If IsDataDescriptor(desc) is true then
      // i. If desc.[[Writable]] is true, return false. c. If desc.[[Configurable]] is true, then return false.
      if (desc.writable || desc.configurable) return false;
    }
    // 3. If the [[Extensible]] internal property of O is false, then return true.
    if (@Extensible(O) === false) return true;
    // 4. Otherwise, return false.
    else return false;
  }
  \\],
  29: [\\
  function isExtensible (O) {
    // 1. If Type(O) is not Object throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. Return the Boolean value of the [[Extensible]] internal property of O.
    return @Extensible(O);
  }
  \\],
  30: [\\
  function keys (O) {
    // 1. If the Type(O) is not Object, throw a TypeError exception.
    if (typeof O !== 'object' || O === null) throw new TypeError();
    // 2. Let n be the number of own enumerable properties of O
    var names = @getOwnPropertyNames(O);
    // 3. Let array be the result of creating a new Object as if by the expression new Array(n) where Array is
    //    the standard built-in constructor with that name.
    var array = [];
    var n = 0;
    // 4. Let index be 0.
    // 5. For each own enumerable property of O whose name String is P
    // a. Call the [[DefineOwnProperty]] internal method of array with arguments ToString(index), the PropertyDescriptor {[[Value]]: P, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
    // b. Increment index by 1.
    for (var i = 0; i < names.length; i++) {
      var P = names[i];
      var desc = @GetOwnProperty(O, P);
      if (desc.enumerable) {
        @DefineOwnProperty(array, @ToString(n), {
          value: P,
          writable: true,
          enumerable: true,
          configurable: true
        });
        n++;
      }
    }
    array.length = n;
    // 6. Return array.
    return array;
  }
  \\],
  31: [\\
  function () {
  }
  \\],
  32: [\\
  function toString() {
    if (typeof this !== 'function') throw new TypeError();
    return @StrTop;
  }
  \\],
  33: [\\
  function apply (thisArg, argArray) {
    // 1. If IsCallable(func) is false, then throw a TypeError exception.
    if (@IsCallable(this) === false) throw new TypeError();
    // 2. If argArray is null or undefined, then
      // a. Return the result of calling the [[Call]] internal method of func, providing thisArg as the this value and an empty list of arguments.
    if (argArray === null || argArray === undefined) return @Call(this, thisArg, []);
    // 3. If Type(argArray) is not Object, then throw a TypeError exception.
    if (typeof argArray !== 'object' || argArray === null) throw new TypeError();
    // 4. Let len be the result of calling the [[Get]] internal method of argArray with argument "length".
    var len = argArray.length;
    // 5. Let n be ToUint32(len).
    var n = @ToUint32(len);
    // 6. Let argList be an empty List.
    var argList = [];
    // 7. Let index be 0.
    // 8. Repeat while index < n
    for (var index = 0; index < n; index++) {
      // a. Let indexName be ToString(index).
      // b. Let nextArg be the result of calling the [[Get]] internal method of argArray with indexName as the argument.
      // c. Append nextArg as the last element of argList.
      // d. Set index to index + 1.
      argList[index] = argArray[index];
    }
    // 9. Return the result of calling the [[Call]] internal method of func, providing thisArg as the this value and argList as the list of arguments.
    return @Call(this, thisArg, argList);
  }
  \\],
  34: [\\
  function call (thisArg) {
    // 1. If IsCallable(func) is false, then throw a TypeError exception.
    if (@IsCallable(this) === false) throw new TypeError();
    // 2. Let argList be an empty List.
    var argList = [];
    // 3. If this method was called with more than one argument then in left to right order starting with arg1 append each argument as the last element of argList
    for (var i = 1; i < arguments.length; i++) {
      argList[i-1] = arguments[i];
    }
    // 4. Return the result of calling the [[Call]] internal method of func, providing thisArg as the this value and argList as the list of arguments.
    return @Call(this, thisArg, argList);
  }
  \\],
  35: [\\
  function () {
  }
  \\],
  36: [\\
  function () {
  }
  \\],
  37: [\\
  function () {
  }
  \\],
  38: [\\
  function toString() {
    // 1. Let array be the result of calling ToObject on the this value.
    var array = @ToObject(this);
    // 2. Let func be the result of calling the [[Get]] internal method of array with argument "join".
    var func = array.join;
    // 3. If IsCallable(func) is false, then let func be the standard built-in method Object.prototype.toString (15.2.4.2).
    if (!@IsCallable(func)) func = Object.prototype.toString;
    // 4. Return the result of calling the [[Call]] internal method of func providing array as the this value and an empty arguments list.
    return @Call(func, array, []);
  }
  \\],
  39: [\\
  function toLocaleString () {
    // 1. Let array be the result of calling ToObject on the this value.
    var array = @ToObject(this);
    // 2. Let func be the result of calling the [[Get]] internal method of array with argument "join".
    var func = array.join;
    // 3. If IsCallable(func) is false, then let func be the standard built-in method Object.prototype.toString (15.2.4.2).
    if (!@IsCallable(func)) func = Object.prototype.toString;
    // 4. Return the result of calling the [[Call]] internal method of func providing array as the this value and an empty arguments list.
    return @Call(func, array, []);
  }
  \\],
  40: [\\
  function concat () {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let A be a new array created as if by the expression new Array() where Array is the standard built-in constructor with that name.
    var A = new Array();
    //3. Let n be 0.
    var n = 0;
    // for O
    var E = O;
    if(typeof E === 'object' && E !== null && @Class(E) === "Array"){
      var k = 0;
      var len = E.length;
      while(k<len){
        var P = @ToString(k);
        var exists = (P in E);
        if (exists) {
          var subElement = E[P];
          @DefineOwnProperty(A,@ToString(n),{value:subElement, writable:true, enumerable:true,       configurable:true});
        }
        n += 1;
        k += 1;
      }
    }
    else {
      Object.defineProperty(A,@ToString(n),{value:E,writable:true,enumerable:true,configurable:      true});
      n += 1;
    }
    // 4. Let items be an internal List whose first element is O and whose subsequent elements are, in left to right order, the arguments that were passed to this function invocation.
    var items = arguments;
    // 5. Repeat, while items is not empty
    for (var i = 0; i < items.length; i++) {
      // a. Remove the first element from items and let E be the value of the element.
      var E = items[i];
      // b. If the value of the [[Class]] internal property of E is "Array", then
      if(typeof E === 'object' && E !== null && @Class(E) === "Array"){
        // i. Let k be 0.
        var k = 0;
        // ii. Let len be the result of calling the [[Get]] internal method of E with argument "length".
        var len = E.length;
        // iii. Repeat, while k < len
        while(k<len){
          // 1. Let P be ToString(k).
          var P = @ToString(k);
          // 2. Let exists be the result of calling the [[HasProperty]] internal method of E with P.
          var exists = (P in E);
          // 3. If exists is true, then
          if (exists) {
            // a Let subElement be the result of calling the [[Get]] internal method of E with         argument P.
            var subElement = E[P];
            // b Call the [[DefineOwnProperty]] internal method of A with arguments ToString(n),       Property Descriptor {[[Value]]: subElement, [[Writable]]: true, [[Enumerable]]: true,                  [[Configurable]]: true}, and false.
            @DefineOwnProperty(A,@ToString(n),{value:subElement, writable:true, enumerable:true,       configurable:true});
          }
          // 4. Increase n by 1.
          n += 1;
          // 5. Increase k by 1.
          k += 1;
        }
      }
      // c. Else, E is not an Array
      else {
        // i. Call the [[DefineOwnProperty]] internal method of A with arguments ToString(n), Property Descriptor {[[Value]]: E, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
        Object.defineProperty(A,@ToString(n),{value:E,writable:true,enumerable:true,configurable:      true});
        // ii. Increase n by 1.
        n += 1;
      }
    }
    A.length = n;
    // 6. Return A.
    return A;
  }
  \\],
  41: [\\
  function join (separator) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 3. Let len be ToUint32(lenVal).
    var len = @ToUint32(lenVal);
    // 4. If separator is undefined, let separator be the single-character String ",".
    if (arguments.length === 0){
        var separator = ",";
    }
    // 5. Let sep be ToString(separator).
    var sep = @ToString(separator);
    // 6. If len is zero, return the empty String.
    if (len === 0){
        return "";
    }
    // 7. Let element0 be the result of calling the [[Get]] internal method of O with argument "0".
    var element0 = O[0];
    // 8. If element0 is undefined or null, let R be the empty String; otherwise, Let R be ToString(element0).
    if (@SameValue(element0,undefined) || @SameValue(element0,null)){
        var R = "";
    }else {
        var R = @ToString(element0);
    }
    // 9. Let k be 1.
    var k = 1;
    // 10. Repeat, while k < len
    while (k < len) {
      // a. Let S be the String value produced by concatenating R and sep.
      var S = R + sep;
      // b. Let element be the result of calling the [[Get]] internal method of O with argument ToString(k).
      var element = O[@ToString(k)];
      // c. If element is undefined or null, Let next be the empty String; otherwise, let next be ToString(element).
      if (@SameValue(element,undefined) || @SameValue(element,null)) {
        var next = "";
      }else {
        var next = @ToString(element);
      }
      // d. Let R be a String value produced by concatenating S and next.
      var R = S + next;
      // e. Increase k by 1.
      k += 1;
    }
    //11. Return R.
    return R;
  }
  \\],
  42: [\\
  function pop () {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 3. Let len be ToUint32(lenVal).
    var len = @ToUint32(lenVal);
    // 4. If len is zero,
    if (@SameValue(len,0)) {
      // a. Call the [[Put]] internal method of O with arguments "length", 0, and true.
      O.length = 0;
      // b. Return undefined.
      return undefined;
    }
    // 5. Else, len > 0
    else {
      // a. Let indx be ToString(len–1).
      var indx = len-1;
      // b. Let element be the result of calling the [[Get]] internal method of O with argument indx.
      var element = O[indx];
      // c. Call the [[Delete]] internal method of O with arguments indx and true.
      delete O[indx];
      // d. Call the [[Put]] internal method of O with arguments "length", indx, and true.
      O.length = indx;
      // e. Return element.
      return element;
    }
  }
  \\],
  43: [\\
  function push () {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 3. Let n be ToUint32(lenVal).
    var n = @ToUint32(lenVal);
    // 4. Let items be an internal List whose elements are, in left to right order,
    // the arguments that were passed to this function invocation.
    var items = arguments;
    // 5. Repeat, while items is not empty
    for (var i = 0; i < items.length; i++) {
      // a. Remove the first element from items and let E be the value of the element.
      var E = items[i];
      // b. Call the [[Put]] internal method of O with arguments ToString(n), E, and true.
      O[@ToString(n)] = E
      // c. Increase n by 1.
      n++;
    }
    // 6. Call the [[Put]] internal method of O with arguments "length", n, and true.
    O.length = n
    // 7. Return n.
    return n;
  }
  \\],
  44: [\\
  function reverse () {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 3. Let len be ToUint32(lenVal).
    var len = @ToUint32(lenVal);
    // 4. Let middle be floor(len/2).
    var middle = @floor(len/2);
    // 5. Let lower be 0.
    var lower = 0;
    // 6. Repeat, while lower !=  middle
    while(lower != middle){
      // a. Let upper be len-lower-1.
      var upper = len-lower-1;
      // b. Let upperP be ToString(upper).
      var upperP = @ToString(upper);
      // c. Let lowerP be ToString(lower).
      var lowerP = @ToString(lower);
      // d. Let lowerValue be the result of calling the [[Get]] internal method of O with argument lowerP.
      var lowerValue = O[lowerP];
      // e. Let upperValue be the result of calling the [[Get]] internal method of O with argument upperP .
      var upperValue = O[upperP];
      // f. Let lowerExists be the result of calling the [[HasProperty]] internal method of O with argument lowerP.
      var lowerExists = (lowerP in O);
      // g. Let upperExists be the result of calling the [[HasProperty]] internal method of O with argument upperP.
      var upperExists = (upperP in O);
      // h. If lowerExists is true and upperExists is true, then
      if(lowerExists && upperExists){
        // i. Call the [[Put]] internal method of O with arguments lowerP, upperValue, and true .
        O[lowerP] = upperValue;
        // ii. Call the [[Put]] internal method of O with arguments upperP, lowerValue, and true .
        O[upperP] = lowerValue;
      }
      // i. Else if lowerExists is false and upperExists is true, then
      else if(!lowerExists && upperExists){
        // i. Call the [[Put]] internal method of O with arguments lowerP, upperValue, and true .
        O[lowerP] = upperValue;
        // ii. Call the [[Delete]] internal method of O, with arguments upperP and true.
        delete O[upperP];
      }
      // j. Else if lowerExists is true and upperExists is false, then
      else if (lowerExists && !upperExists){
        // i. Call the [[Delete]] internal method of O, with arguments lowerP and true .
        delete O[lowerP];
         // ii. Call the [[Put]] internal method of O with arguments upperP, lowerValue, and true .
         O[upperP] = lowerValue;
      }
      // k. Else both lowerExists and upperExists are false
        // i. No action is required.
      // l. Increase lower by 1.
      lower += 1;
    }
    // 7. Return O .
    return O;
  }
  \\],
  45: [\\
  function shift () {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 3. Let len be ToUint32(lenVal).
    var len = @ToUint32(lenVal);
    // 4. If len is zero, then
    if(@SameValue(len,0)){
      // a. Call the [[Put]] internal method of O with arguments "length", 0, and true.
      O.length = 0;
      // b. Return undefined.
      return undefined;
    }
    // 5. Let first be the result of calling the [[Get]] internal method of O with argument "0".
    var first = O[0];
    // 6. Let k be 1.
    var k = 1;
    // 7. Repeat, while k < len
    while (k < len) {
      // a. Let from be ToString(k).
      var from = @ToString(k);
      // b. Let to be ToString(k–1).
      var to = @ToString(k-1);
      // c. Let fromPresent be the result of calling the [[HasProperty]] internal method of O with argument from.
      var fromPresent = (from in O);
      // d. If fromPresent is true, then
      if(fromPresent){
        // i. Let fromVal be the result of calling the [[Get]] internal method of O with argument from.
        var fromVal = O[from];
        // ii. Call the [[Put]] internal method of O with arguments to, fromVal, and true.
        O[to] = fromVal;
      }
      // e. Else, fromPresent is false
      else{
        // i. Call the [[Delete]] internal method of O with arguments to and true.
        delete O[to];
      }
      // f. Increase k by 1.
      k += 1;
    }
    // 8. Call the [[Delete]] internal method of O with arguments ToString(len–1) and true.
    delete O[@ToString(len-1)];
    // 9. Call the [[Put]] internal method of O with arguments "length", (len–1) , and true.
    O.length = len-1;
    // 10. Return first.
    return first;
  }
  \\],
  46: [\\
  function slice (start, end) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let A be a new array created as if by the expression new Array() where Array is the standard built-in constructor with that name.
    var A = new Array();
    // 3. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 4. Let len be ToUint32(lenVal).
    var len = @ToUint32(lenVal);
    // 5. Let relativeStart be ToInteger(start).
    var relativeStart = @ToInteger(start);
    // 6. If relativeStart is negative, let k be max((len + relativeStart),0); else let k be           min(relativeStart, len).
    if(relativeStart<0){
      var k = Math.max(len+relativeStart,0);
    }else{
      var k = Math.min(relativeStart,len);
    }
    // 7. If end is undefined, let relativeEnd be len; else let relativeEnd be ToInteger(end).
    if(@SameValue(end,undefined)){
      var relativeEnd = len;
    }else{
      var relativeEnd = @ToInteger(end);
    }
    // 8. If relativeEnd is negative, let final be max((len + relativeEnd),0); else let final be       min(relativeEnd, len).
    if(relativeEnd<0){
      var final = Math.max(len+relativeEnd,0);
    }else{
      var final = Math.min(relativeEnd,len);
    }
    // 9. Let n be 0.
    var n = 0;
    // 10. Repeat, while k < final
    while(k<final){
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with        argument Pk.
      var kPresent = Pk in O;
      // c. If kPresent is true, then
      if(kPresent){
        // i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Call the [[DefineOwnProperty]] internal method of A with arguments ToString(n),         Property Descriptor {[[Value]]: kValue, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]:    true}, and false.
        @DefineOwnProperty(A,@ToString(n),{value:kValue,writable:true,enumerable:true,configurable:    true});
      }
      // d. Increase k by 1.
      k += 1;
      // e. Increase n by 1.
      n += 1;
    }
    A.length = n;
    // 11. Return A.
    return A;
  }
  \\],
  47: [\\
  function sort (comparefn) {
    // modeled using bubble sort (http://en.wikipedia.org/wiki/Bubble_sort)
    var O = @ToObject(this);
    var len = O.length;
    if (@SameValue(comparefn,undefined)) {
      comparefn = function (left,right) {
        if (left < right) {
          return -1;
        }else if (left == right) {
          return 0;
        }else if (left > right) {
          return 1;
        }
      }
    }
    do {
      var newn = 0;
      for (var i = 1; i< n; i++) {
        var result = compare(a[i-1],a[i]);
        // a[i-1] > a[i]
        if (result === 1) {
          var temp = a[-1];
          a[i-1] = a[i];
          a[i] = temp;
          newn = i;
        }
      }
      n = newn;
    }while (n != 0);
    return O;
  }
  \\],
  48: [\\
  function splice (start, deleteCount) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let A be a new array created as if by the expression new Array()where Array is the standard  built-in constructor with that name.
    var A = new Array();
    // 3. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 4. Let len be ToUint32(lenVal).
    var len = @ToUint32(lenVal);
    // 5. Let relativeStart be ToInteger(start).
    var relativeStart = @ToInteger(start);
    // 6. If relativeStart is negative, let actualStart be max((len + relativeStart),0); else let actualStart be min(relativeStart, len).
    if (relativeStart < 0) {
      var actualStart = Math.max(len + relativeStart, 0);
    }else {
      var actualStart = Math.min(relativeStart, len);
    }
    // 7. Let actualDeleteCount be min(max(ToInteger(deleteCount),0), len – actualStart).
    var actualDeleteCount = Math.min(Math.max(@ToInteger(deleteCount), 0),len - actualStart);
    // 8. Let k be 0.
    var k = 0;
    // 9. Repeat, while k < actualDeleteCount
    while (k < actualDeleteCount) {
      // a. Let from be ToString(actualStart+k).
      var from = @ToString(actualStart + k);
      // b. Let fromPresent be the result of calling the [[HasProperty]] internal method of O with     argument from.
      var fromPresent = (from in O);
      // c. If fromPresent is true, then
      if (fromPresent) {
        // i. Let fromValue be the result of calling the [[Get]] internal method of O with argument    from.
        var fromValue = O[from];
        // ii. Call the [[DefineOwnProperty]] internal method of A with arguments ToString(k),         Property Descriptor {[[Value]]: fromValue, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
        @DefineOwnProperty(A,@ToString(k),{value : fromValue, writable : true, enumerable : true,      configurable : true});
      }
      // d. Increment k by 1.
      k += 1;
    }
    // 10. Let items be an internal List whose elements are, in left to right order, the portion of    the actual argument list starting with item1. The list will be empty if no such items are present.
    items = new Array();
    for (var i = 0;i < arguments.length - 2;i++) {
      items[i] = arguments[i+2];
    }
    // 11. Let itemCount be the number of elements in items.
    var itemCount = items.length;
    // 12. If itemCount < actualDeleteCount, then
    if ( itemCount < actualDeleteCount) {
      // a. Let k be actualStart.
      var k = actualStart;
      // b. Repeat, while k < (len – actualDeleteCount)
      while ( k < (len - actualDeleteCount)) {
        // i. Let from be ToString(k+actualDeleteCount).
        var from = @ToString(k + actualDeleteCount);
        // ii. Let to be ToString(k+itemCount).
        var to = @ToString(k + itemCount);
        // iii. Let fromPresent be the result of calling the [[HasProperty]] internal method of O with argument from.
        var fromPresent = (from in O);
        // iv If fromPresent is true, then
        if (fromPresent) {
          // 1. Let fromValue be the result of calling the [[Get]] internal method of O with argument  from.
          var fromValue = O[from];
          // 2. Call the [[Put]] internal method of O with arguments to, fromValue, and true.
          O[to] = fromValue;
        }
        // v. Else, fromPresent is false
        else {
          // 1. Call the [[Delete]] internal method of O with arguments to and true.
          delete O[to];
        }
        // vi. Increase k by 1.
        k += 1;
      }
      //c. Let k be len.
      var k = len;
      // d. Repeat, while k > (len – actualDeleteCount + itemCount)
      while ( k > (len - actualDeleteCount + itemCount)) {
        // i. Call the [[Delete]] internal method of O with arguments ToString(k–1) and true.
       delete O[@ToString(k-1)];
       // ii. Decrease k by 1.
       k -= 1;
      }
    }
    // 13. Else if itemCount > actualDeleteCount, then
    else {
      // a. Let k be (len – actualDeleteCount).
      var k = len - actualDeleteCount;
      // b. Repeat, while k > actualStart
      while ( k > actualStart) {
        // i. Let from be ToString(k + actualDeleteCount – 1).
        var from = @ToString(k + actualDeleteCount - 1);
        // ii. Let to be ToString(k + itemCount – 1)
        var to = @ToString(k + itemCount - 1);
        // iii. Let fromPresent be the result of calling the [[HasProperty]] internal method of O with argument from.
        var fromPresent = (from in O);
        // iv. If fromPresent is true, then
        if (fromPresent) {
          // 1. Let fromValue be the result of calling the [[Get]] internal method of O with argument  from.
          var fromValue = O[from];
          // 2. Call the [[Put]] internal method of O with arguments to, fromValue, and true.
          O[to] = fromValue;
        }
        // v. Else, fromPresent is false
        else {
          // 1. Call the [[Delete]] internal method of O with argument to and true.
          delete O[to];
        }
        // vi. Decrease k by 1.
        k -= 1;
      }
    }
    // 14. Let k be actualStart.
    var k = actualStart;
    // 15. Repeat, while items is not empty
    for (var i = 0; i < items.length; i++) {
      // a. Remove the first element from items and let E be the value of that element.
      var E = items[i];
      // b. Call the [[Put]] internal method of O with arguments ToString(k), E, and true.
      O[@ToString(k)] = E;
      // c. Increase k by 1.
      k += 1;
    }
    // 16. Call the [[Put]] internal method of O with arguments "length", (len – actualDeleteCount +   itemCount), and true.
    O.length = len - actualDeleteCount + itemCount;
    A.length = actualDeleteCount;
    // 17. Return A.
    return A;
  }
  \\],
  49: [\\
  function unshift () {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenVal be the result of calling the [[Get]] internal method of O with argument "length".
    var lenVal = O.length;
    // 3. Let len be ToUint32(lenVal).
    var len = @ToUint32(lenVal);
    // 4. Let argCount be the number of actual arguments.
    var argCount = arguments.length;
    // 5. Let k be len.
    var k = len;
    // 6. Repeat, while k > 0,
    while (k > 0) {
      // a. Let from be ToString(k–1).
      var from = @ToString(k-1);
      // b. Let to be ToString(k+argCount –1).
      var to = @ToString(k + argCount - 1);
      // c. Let fromPresent be the result of calling the [[HasProperty]] internal method of O with argument from.
      var fromPresent = (from in O);
      // d. If fromPresent is true, then
      if (fromPresent) {
        // i. Let fromValue be the result of calling the [[Get]] internal method of O with argument from.
        var fromValue = O[from];
        // ii. Call the [[Put]] internal method of O with arguments to, fromValue, and true.
        O[to] = fromValue;
      }
      // e. Else, fromPresent is false
      else {
        // i. Call the [[Delete]] internal method of O with arguments to, and true.
        delete O[to];
      }
      // f. Decrease k by 1.
      k -= 1;
    }
    // 7. Let j be 0.
    var j = 0;
    // 8. Let items be an internal List whose elements are, in left to right order, the arguments that were passed to this function invocation.
    var items = arguments;
    // 9. Repeat, while items is not empty
    for (var i = 0; i < items.length; i++) {
      // a. Remove the first element from items and let E be the value of that element.
      var E = items[i];
      // b. Call the [[Put]] internal method of O with arguments ToString(j), E, and true.
      O[@ToString(j)] = E;
      // c. Increase j by 1.
      j += 1;
    }
    // 10. Call the [[Put]] internal method of O with arguments "length", len+argCount, and true.
    O.length = len + argCount;
    // 11. Return len+argCount.
    return len + argCount;
  }
  \\],
  50: [\\
  function indexOf (searchElement,fromIndex) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If len is 0, return -1.
    if (@SameValue(len,0)){
      return -1;
    }
    // 5. If argument fromIndex was passed let n be ToInteger(fromIndex); else let n be 0.
    if (arguments.length >1){
      var n = @ToInteger(fromIndex);
    }else{
      var n = 0;
    }
    // 6. If n ≥ len, return -1.
    if (n>=len){
      return -1;
    }
    // 7. Ifn≥0,then
    if (n>=0){
      // a. Let k be n.
      var k = n;
    }
    // 8. Else, n<0
    else{
      // a. Let k be len - abs(n).
      var k = len - @abs(n);
      // b. If k is less than 0,then let k be 0.
      if (k<0){
        var k = 0;
      }
    }
    // 9. Repeat, while k<len
    while (k<len){
      // a. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument ToString(k).
      var kPresent = (@ToString(k) in O);
      // b. If kPresent is true, then
      if (kPresent){
        // i. Let elementK be the result of calling the [[Get]] internal method of O with the argument ToString(k).
        var elementK = O[@ToString(k)];
        // ii. Let same be the result of applying the Strict Equality Comparison Algorithm to searchElement and elementK.
        var same = (searchElement === elementK);
        // iii. If same is true, return k.
        if (same) {
          return k;
        }
      }
      // c. Increase k by 1.
      k +=1;
    }
    // 10. Return -1.
    return -1;
  }
  \\],
  51: [\\
  function lastIndexOf (searchElement,fromIndex) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument        "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If len is 0, return -1.
    if (@SameValue(len,0)) {
      return -1;
    }
    // 5. If argument fromIndex was passed let n be ToInteger(fromIndex); else let n be len-1.
    if(arguments.length>1){
      var n = @ToInteger(fromIndex);
    }else {
      var n = len-1;
    }
    // 6. If n ≥ 0, then let k be min(n,len–1).
    if (n>=0){
      var k = Math.min(n,len-1);
    }
    // 7. Else,n<0
    else {
      // a. Let k be len - abs(n).
      var k = len - @abs(n);
    }
    // 8. Repeat, while k≥ 0
    while (k>=0) {
      // a. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument  ToString(k).
      var kPresent = (@ToString(k) in O);
      // b. If kPresent is true, then
      if (kPresent) {
        // i. Let elementK be the result of calling the [[Get]] internal method of O with the argument    ToString(k).
        var elementK = O[@ToString(k)];
        // ii. Let same be the result of applying the Strict Equality Comparison Algorithm to             searchElement and elementK.
        var same = (searchElement === elementK);
        // iii. If same is true, return k.
        if (same) {
          return k;
        }
      }
      // c. Decrease k by 1.
      k -= 1;
    }
    // 9. Return -1.
    return -1;
  }
  \\],
  52: [\\
  function every (callbackfn, thisArg) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.
    if (@IsCallable(callbackfn) === false) {
      throw new TypeError();
    }
    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if (arguments.length > 1) {
      var T = thisArg;
    }else {
      var T = undefined;
    }
    // 6. Let k be 0.
    var k = 0;
    // 7. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
      var kPresent = (Pk in O);
      // c. If kPresent is true, then
      if (kPresent) {
        // i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Let testResult be the result of calling the [[Call]] internal method of callbackfn with T as the this value and argument list containing kValue, k, and O.
        var testResult = @Call(callbackfn,T,[kValue,k,O]);
        // iii. If ToBoolean(testResult) is false, return false.
        if (@ToBoolean(testResult) === false) {
          return false;
        }
      }
      // d. Increase k by 1.
      k += 1;
    }
    //8. Return true.
    return true;
  }
  \\],
  53: [\\
  function some (callbackfn, thisArg) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.
    if (@IsCallable(callbackfn) === false) {
      throw new TypeError();
    }
    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if (arguments.length > 1) {
      var T = thisArg;
    }else {
      var T = undefined;
    }
    // 6. Let k be 0.
    var k = 0; 
    // 7. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
      var kPresent = (Pk in O);
      // c. If kPresent is true, then
      if (kPresent) {
        // i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Let testResult be the result of calling the [[Call]] internal method of callbackfn with T as the this value and argument list containing kValue, k, and O.
        var testResult = @Call(callbackfn,T,[kValue,k,O]);
        // iii. If ToBoolean(testResult) is true, return true.
        if (@ToBoolean(testResult) === true) {
          return true;
        }
      }
      // d. Increase k by 1.
      k += 1;
    }
    // 8. Return false.
    return false;
  }
  \\],
  54: [\\
  function forEach (callbackfn, thisArg) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.
    if (@IsCallable(callbackfn) === false) {
      throw new TypeError();
    }
    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if (arguments.length > 1){
      var T = thisArg;
    }else {
      var T = undefined;
    }
    // 6. Let k be 0.
    var k = 0;
    // 7. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
      var kPresent = (Pk in O);
      // c. If kPresent is true, then
      if (kPresent) {
        // i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Call the [[Call]] internal method of callbackfn with T as the this value and argument list containing kValue, k, and O.
        @Call(callbackfn,T,[kValue,k,O])
      }
      // d. Increase k by 1.
      k += 1;
    }
    // 8. Return undefined.
    return undefined;
  }
  \\],
  55: [\\
  function map (callbackfn, thisArg) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.
    if (@IsCallable(callbackfn) === false) {
      throw new TypeError();
    }
    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if (arguments.length > 1){
      var T = thisArg;
    }else {
      var T = undefined;
    }
    // 6. Let A be a new array created as if by the expression new Array(len) where Array is the standard built-in constructor with that name and len is the value of len.
    var A = new Array(len);
    // 7. Let k be 0.
    var k = 0;
    // 8. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
      var kPresent = (Pk in O);
      // c. If kPresent is true, then
      if (kPresent) {
        // i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Let mappedValue be the result of calling the [[Call]] internal method of callbackfn with T as the this value and argument list containing kValue, k, and O.
        var mappedValue = @Call(callbackfn,T,[kValue,k,O]);
        // iii. Call the [[DefineOwnProperty]] internal method of A with arguments Pk, Property Descriptor {[[Value]]: mappedValue, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
        @DefineOwnProperty(A,Pk,{value:mappedValue,writable:true,enumerable:true,configurable:true});
      }
      // d. Increase k by 1.
      k += 1;
    }
    //9. Return A.
    return A;
  }
  \\],
  56: [\\
  function filter (callbackfn, thisArg) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.
    if (@IsCallable(callbackfn) === false) {
      throw new TypeError();
    }
    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if (arguments.length >1) {
      var T = thisArg;
    }else {
      var T = undefined;
    }
    // 6. Let A be a new array created as if by the expression new Array() where Array is the standard built-in constructor with that name.
    var A = new Array();
    // 7. Letk be 0.
    var k = 0;
    // 8. Let to be 0.
    var to = 0;
    // 9. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
      var kPresent = (Pk in O);
      // c. If kPresent is true, then
      if (kPresent) {
        // i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Let selected be the result of calling the [[Call]] internal method of callbackfn with T as the this value and argument list containing kValue, k, and O.
        var selected = @Call(callbackfn,T,[kValue,k,O]);
        // iii. If ToBoolean(selected) is true, then
        if (@ToBoolean(selected) === true) {
          // 1. Call the [[DefineOwnProperty]] internal method of A with arguments ToString(to), Property Descriptor {[[Value]]: kValue, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
          @DefineOwnProperty(A,@ToString(to),{value:kValue,writable:true,enumerable:true,configurable:true});
          // 2. Increase to by 1.
          to += 1;
        }
      }
      // d. Increase k by 1.
      k += 1;
    }
    // 10. Return A.
    return A;
  }
  \\],
  57: [\\
  function reduce(callbackfn, initialValue) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.
    if (@IsCallable(callbackfn) === false) {
      throw new TypeError();
    }
    // 5. If len is 0 and initialValue is not present, throw a TypeError exception.
    if (len === 0 && arguments.length < 2) {
      throw new TypeError();
    }
    // 6. Let k be 0.
    var k = 0;
    // 7. If initialValue is present, then
    if (arguments.length > 1) {
      // a. Set accumulator to initialValue.
      var accumulator = initialValue;
    }
    // 8. Else, initialValue is not present
    else {
      // a. Let kPresent be false.
      var kPresent = false;
      // b. Repeat, while kPresent is false and k < len
      while (kPresent === false && k < len) {
        // i. Let Pk be ToString(k).
        var Pk = @ToString(k);
        //ii. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
        var kPresent = (Pk in O);
        // iii. If kPresent is true, then
        if (kPresent) {
          // 1. Let accumulator be the result of calling the [[Get]] internal method of O with argument Pk.
          var accumulator = O[Pk];
        }
        // iv. Increase k by 1.
        k += 1;
      }
      // c. If kPresent is false, throw a TypeError exception.
      if (!kPresent) {
        throw new TypeError();
      }
    }
    // 9. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
      var kPresent = (Pk in O);
      // c. If kPresent is true, then
      if (kPresent) {
        // i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Let accumulator be the result of calling the [[Call]] internal method of callbackfn with undefined as the this value and argument list containing accumulator, kValue, k, and O.
        var accumulator = @Call(callbackfn,undefined,[accumulator,kValue,k,O]);
      }
      // d. Increase k by 1.
      k += 1;
    }
    // 10. Return accumulator.
    return accumulator;
  }
  \\],
  58: [\\
  function reduceRight (callbackfn, initialValue) {
    // 1. Let O be the result of calling ToObject passing the this value as the argument.
    var O = @ToObject(this);
    // 2. Let lenValue be the result of calling the [[Get]] internal method of O with the argument "length".
    var lenValue = O.length;
    // 3. Let len be ToUint32(lenValue).
    var len = @ToUint32(lenValue);
    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.
    if (@IsCallable(callbackfn) === false) {
      throw new TypeError();
    }
    // 5. If len is 0 and initialValue is not present, throw a TypeError exception.
    if (len === 0 && arguments.length < 2) {
      throw new TypeError();
    }
    // 6. Let k be len-1.
    var k = len - 1;
    // 7. If initialValue is present, then
    if (arguments.length > 1) {
      // a. Set accumulator to initialValue.
      var accumulator = initialValue;
    }
    // 8. Else, initialValue is not present
    else {
      // a. Let kPresent be false.
      var kPresent = false;
      // b. Repeat, while kPresent is false and k ≥ 0
      while (kPresent === false && k >= 0) {
        // i. Let Pk be ToString(k).
        var Pk = @ToString(k);
        // ii. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
        var kPresent = (Pk in O);
        // iii. If kPresent is true, then
        if (kPresent) {
          // 1. Let accumulator be the result of calling the [[Get]] internal method of O with argument Pk.
          var accumulator = O[Pk]
        }
        // iv. Decrease k by 1.
        k -= 1;
      }
      // c. If kPresent is false, throw a TypeError exception.
      if (!kPresent) {
        throw new TypeError();
      }
    }
    // 9. Repeat, while k ≥ 0
    while (k >= 0) {
      // a. Let Pk be ToString(k).
      var Pk = @ToString(k);
      // b. Let kPresent be the result of calling the [[HasProperty]] internal method of O with argument Pk.
      var kPresent = (Pk in O);
      // c. If kPresent is true, then
      if (kPresent) {
        //i. Let kValue be the result of calling the [[Get]] internal method of O with argument Pk.
        var kValue = O[Pk];
        // ii. Let accumulator be the result of calling the [[Call]] internal method of callbackfn with undefined as the this value and argument list containing accumulator, kValue, k, and O.
        var accumulator = @Call(callbackfn,undefined,[accumulator,kValue,k,O]);
      }
      // d. Decrease k by 1.
      k -= 1;
    }
    // 10. Return accumulator.
    return accumulator;
  }
  \\],
  59: [\\
  function Array (len) {
    var arr = [];
    if (arguments.length === 1) {
      if (typeof len === 'number') {
        if (@SameValue(@ToUint32(len), len)) arr.length = len;
        else throw new RangeError();
      } else {
        arr.length = 1;
        arr[0] = len;
      }
    } else {
      for (var i = 0; i < arguments.length; i++) {
        arr[i] = arguments[i];
      }
      arr.length = arguments.length;
    }
    return arr;
  }
  \\],
  60: [\\
  function Array (len) {
    var arr = [];
    if (arguments.length === 1) {
      if (typeof len === 'number') {
        if (@SameValue(@ToUint32(len), len)) arr.length = len;
        else throw new RangeError();
      } else {
        arr.length = 1;
        arr[0] = len;
      }
    } else {
      for (var i = 0; i < arguments.length; i++) {
        arr[i] = arguments[i];
      }
      arr.length = arguments.length;
    }
    return arr;
  }
  \\],
  61: [\\
  function isArray (arg) {
    // 1. If Type(arg) is not Object, return false.
    if (typeof arg !== "object" || arg === null) return false;
    // 2. If the value of the [[Class]] internal property of arg is "Array", then return true.
    if (@SameValue(@Class(arg), "Array")) return true;
    // 3. Return false.
    return false;
  }
  \\],
  62: [\\
  function () {
  }
  \\],
  63: [\\
  function toString () {
    // it throws a TypeError exception if its this value is not a String or a String object.
    if (typeof this === "string") return this;
    else if (typeof this === "object" && this !== null && @Class(this) === "String") return @PrimitiveValue(this);
    else throw new TypeError();
  }
  \\],
  64: [\\
  function valueOf () {
    // it throws a TypeError exception if its this value is not a String or String object.
    // Returns this String value.
    if (typeof this === "string") return this;
    else if (typeof this === "object" && this !== null && @Class(this) === "String") return @PrimitiveValue(this);
    else throw new TypeError();
  }
  \\],
  65: [\\
  function charAt (pos) {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if((@SameValue(undefined,this)) || (@SameValue(null,this))){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let position be ToInteger(pos).
    var position = @ToInteger(pos);
    // 4. Let size be the number of characters in S.
    var size = S.length;
    // 5. If position < 0 or position ≥ size, return empty String.
    if((position<0) || (position>=size)){
      return "";
    }
    // 6. Return a String of length 1, containing one character from S, namely the character at position position, where the first (leftmost) character in S is considered to be at position 0, the next one at position 1, and so on.
    return S[position];
  }
  \\],
  66: [\\
  function charCodeAt (pos) {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if((@SameValue(undefined,this)) || (@SameValue(null,this))){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let position be ToInteger(pos).
    var position = @ToInteger(pos);
    // 4. Let size be the number of characters in S.
    var size = S.length;
    // 5. If position < 0 or position ≥ size, return NaN.
    if((position<0) || (position>=size)){
      return NaN;
    }
    // 6. Return a value of Number type, whose value is the code unit value of the character at position position in the String S, where the first (leftmost) character in S is considered to be at position 0, the next one at position 1, and so on.
    // TODO implement @ToUint16
    // Need char -> Unicode-16
    // return @ToUint16(S[position]);
    return @ToNumber(S[position]);
  }
  \\],
  67: [\\
  function concat () {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if (@SameValue(this,undefined) || @SameValue(this,null)){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let args be an internal list that is a copy of the argument list passed to this function.
    var args = arguments;
    // 4. Let R be S.
    var R = S;
    // 5. Repeat, while args is not empty
    for (var i = 0; i < args.length; i++) {
      // a. Remove the first element from args and let next be the value of that element.
      var next = args[i];
      // b. Let R be the String value consisting of the characters in the previous value of R followed by the characters of ToString(next).
      var R = R + @ToString(next);
    }
    // 6. Return R.
    return R;
  }
  \\],
  68: [\\
  function indexOf (searchString,position) {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if (@SameValue(this,undefined) || @SameValue(this,null)){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let searchStr be ToString(searchString).
    var searchStr = @ToString(searchString);
    // 4. Let pos be ToInteger(position). (If position is undefined, this step produces the value 0).
    var pos = @ToInteger(position);
    // 5. Let len be the number of characters in S.
    var len = S.length;
    // 6. Let start be min(max(pos, 0), len).
    var start = Math.min(Math.max(pos,0),len);
    // 7. Let searchLen be the number of characters in searchStr.
    var searchLen = searchStr.length;
    //8. Return the smallest possible integer k not smaller than start such that k+ searchLen is not      greater than len,and for all nonnegative integers j less than searchLen, the character at position k+j of S is the same as the character at position j of searchStr; but if there is no such integer k, then return the value -1.
    var k = start;
    while (k+searchLen<=len) {
      var p = 0;
      for (var j=0;j<searchLen;j++) {
        if (S[k+j] !== searchStr[j]) break;
        p+=1;
      }
      if (p === searchLen){
        return k;
      }
      k += 1;
    }
    return -1;
  }
  \\],
  69: [\\
  function lastIndexOf (searchString,position) {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if(@SameValue(undefined,this) || @SameValue(null,this)){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let searchStr be ToString(searchString).
    var searchStr = @ToString(searchString);
    // 4. Let numPos be ToNumber(position). (If position is undefined, this step produces the value NaN).
    var numPos = @ToNumber(position);
    // 5. If numPos is NaN, let pos be + ; otherwise, let pos be ToInteger(numPos).
    if (@SameValue(NaN,numPos)){
      var pos = Infinity;
    }else {
      var pos = @ToInteger(numPos);
    }
    // 6. Let len be the number of characters in S.
    var len = S.length;
    // 7. Let start min(max(pos, 0), len).
    var start = Math.min(Math.max(pos,0),len);
    // 8. Let searchLen be the number of characters in searchStr.
    var searchLen = searchStr.length;
    // 9. Return the largest possible nonnegative integer k not larger than start such that k+ searchLen  is not greater than len, and for all nonnegative integers j less than searchLen, the character at         position k+j of S is the same as the character at position j of searchStr; but if there is no such        integer k, then return the value -1.
    var k = start;
    while (k>=0){
      if ((k+searchLen) <= len){
        var p = 0;
        for (var j=0;j<searchLen;j++) {
          if (S[k+j] !== searchStr[j]) {
            break;
          }
          p += 1;
        }
        if (p === searchLen){
          return k;
        }
      }
    }
    return -1;
  }
  \\],
  70: [\\
  function localeCompare (that) {
    /*
    // 1. Call CheckObjectCoercible passing the this value as its argument.
     if (@SameValue(undefined,this) || @SameValue(null,this)){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let That be ToString(that).
    var that = @ToString(that);
    */
    // TODO char -> Unicode-16 translation
    return @NumTop;
  }
  \\],
  71: [\\
  function () {
  }
  \\],
  72: [\\
  function () {
  }
  \\],
  73: [\\
  function () {
  }
  \\],
  74: [\\
  function slice (start,end) {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if (@SameValue(undefined,this) || @SameValue(null,this)){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let len be the number of characters in S.
    var len = S.length;
    // 4. Let intStart be ToInteger(start).
    var intStart = @ToInteger(start);
    // 5. If end is undefined, let intEnd be len; else let intEnd be ToInteger(end).
    if (@SameValue(end,undefined)){
      var intEnd = len;
    }else {
      var intEnd = @ToInteger(end);
    }
    // 6. If intStart is negative, let from be max(len + intStart,0); else let from be min(intStart, len).
    if (intStart < 0) {
      var from = Math.max(len+intStart,0);
    }else {
      var from = Math.min(intStart,len);
    }
    // 7. If intEnd is negative, let to be max(len + intEnd,0); else let to be min(intEnd, len).
    if (intEnd < 0){
      var to = Math.max(len + intEnd,0);
    }else {
      var to = Math.min(intEnd,len);
    }
    // 8. Let span be max(to – from,0).
    var span = Math.max(to-from,0);
    // 9. Return a String containing span consecutive characters from S beginning with the character at   position from.
    var Str = "";
    for (var i = 0;i<span;i++) {
      Str = Str + S[from+i];
    }
    return Str;
  }
  \\],
  75: [\\
  function () {
  }
  \\],
  76: [\\
  function substring (start,end ) {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if(@SameValue(this,undefined) || @SameValue(this,null)) {
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let len be the number of characters in S.
    var len = S.length;
    // 4. Let intStart be ToInteger(start).
    var intStart = @ToInteger(start);
    // 5. If end is undefined, let intEnd be len; else let intEnd be ToInteger(end).
    if (@SameValue(end,undefined)){
      var intEnd = len;
    }else {
      var intEnd = @ToInteger(end);
    }
    // 6. Let finalStart be min(max(intStart, 0), len).
    var finalStart = Math.min(Math.max(intStart,0),len);
    // 7. Let finalEnd be min(max(intEnd, 0), len).
    var finalEnd = Math.min(Math.max(intEnd,0),len);
    // 8. Let from be min(finalStart, finalEnd).
    var from = Math.min(finalStart,finalEnd);
    // 9. Let to be max(finalStart, finalEnd).
    var to = Math.max(finalStart,finalEnd);
    // 10. Return a String whose length is to - from, containing characters from S, namely the characters with indices from through to -1, in ascending order.
    var Str = "";
    for (var i = 0; i<(to-from);i++){
      Str = Str + S[from+i];
    }
    return Str;
  }
  \\],
  77: [\\
  function toLowerCase () {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if(@SameValue(this,undefined) || @SameValue(this,null)) {
      throw new TypeError();
    }
    //2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    //3. Let L be a String where each character of L is either the Unicode lowercase equivalent of the corresponding character of S or the actual corresponding character of S if no Unicode lowercase equivalent exists.
    alpha = {"A":"a","B":"b","C":"c","D":"d","E":"e","F":"f","G":"g","H":"h","I":"i","J":"j","K":"k","L":"l","M":"m","N":"n","O":"o","P":"p","Q":"q","R":"r","S":"s","T":"t","U":"u","V":"v","W":"w","X":"x","Y":"y","Z":"z"}
    L = "";
    for (var i = 0; i < S.length; i++){
      if (S[i] in alpha) {
        L += alpha[S[i]];
      }else {
        L += S[i];
      }
    }
    //4. Return L.
    return L;
  }
  \\],
  78: [\\
  function toLocaleLowerCase () {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if(@SameValue(this,undefined) || @SameValue(this,null)) {
      throw new TypeError();
    }
    //2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    //3. Let L be a String where each character of L is either the Unicode lowercase equivalent of the corresponding character of S or the actual corresponding character of S if no Unicode lowercase equivalent exists.
    alpha = {"A":"a","B":"b","C":"c","D":"d","E":"e","F":"f","G":"g","H":"h","I":"i","J":"j","K":"k","L":"l","M":"m","N":"n","O":"o","P":"p","Q":"q","R":"r","S":"s","T":"t","U":"u","V":"v","W":"w","X":"x","Y":"y","Z":"z"}
    L = "";
    for (var i = 0; i < S.length; i++){
      if (S[i] in alpha) {
        L += alpha[S[i]];
      }else {
        L += S[i];
      }
    }
    //4. Return L.
    return L;
  }
  \\],
  79: [\\
  function toUpperCase () {
    // This function behaves in exactly the same way as String.prototype.toLowerCase, except that characters are mapped to their uppercase equivalents as specified in the Unicode Character Database.
    if(@SameValue(this,undefined) || @SameValue(this,null)) {
      throw new TypeError();
    }
    var S = @ToString(this);
    alpha = {"a":"A","b":"B","c":"C","d":"D","e":"E","f":"F","g":"G","h":"H","i":"I","j":"J","k":"K","l":"L","m":"M","n":"N","o":"O","p":"P","q":"Q","r":"R","s":"S","t":"T","u":"U","v":"V","w":"W","x":"X","y":"Y","z":"Z"}
    L = "";
    for (var i = 0; i < S.length; i++){
      if (S[i] in alpha) {
        L += alpha[S[i]];
      }else {
        L += S[i];
      }
    }
    return L;
  }
  \\],
  80: [\\
  function toLocaleUpperCase () {
    // This function behaves in exactly the same way as String.prototype.toLowerCase, except that characters are mapped to their uppercase equivalents as specified in the Unicode Character Database.
    if(@SameValue(this,undefined) || @SameValue(this,null)) {
      throw new TypeError();
    }
    var S = @ToString(this);
    alpha = {"a":"A","b":"B","c":"C","d":"D","e":"E","f":"F","g":"G","h":"H","i":"I","j":"J","k":"K","l":"L","m":"M","n":"N","o":"O","p":"P","q":"Q","r":"R","s":"S","t":"T","u":"U","v":"V","w":"W","x":"X","y":"Y","z":"Z"}
    L = "";
    for (var i = 0; i < S.length; i++){
      if (S[i] in alpha) {
        L += alpha[S[i]];
      }else {
        L += S[i];
      }
    }
    return L;
  }
  \\],
  81: [\\
  function trim () {
    // 1. Call CheckObjectCoercible passing the this value as its argument.
    if (@SameValue(undefined,this) || @SameValue(null,this)){
      throw new TypeError();
    }
    // 2. Let S be the result of calling ToString, giving it the this value as its argument.
    var S = @ToString(this);
    // 3. Let T be a String value that is a copy of S with both leading and trailing white space removed. The definition of white space is the union of WhiteSpace and LineTerminator.
    var f = 0;
    while (S[f] === " "){
      f += 1;
    }
    var t = S.length - 1;
    while (S[t] === " "){
      t -= 1;
    }
    t +=1;
    var T = S.substring(f,t);
    // 4. Return T.
    return T;
  }
  \\],
  82: [\\
  function String (value) {
    // Returns a String value (not a String object) computed by ToString(value). If value is not supplied, the empty String "" is returned.
    if(arguments.length === 0){
      return "";
    }else{
      return @ToString(value);
    }
  }
  \\],
  83: [\\
  function String (value) {
    if (arguments.length === 0) {
      return @StrObj("");
    } else {
      return @StrObj(value);
    }
  }
  \\],
  84: [\\
  function fromCharCode () {
    // Returns a String value containing as many characters as the number of arguments. Each argument specifies one character of the resulting String, with the first argument specifying the first character, and so on, from left to right. An argument is converted to a character by applying the operation ToUint16 (9.7) and regarding the resulting 16-bit integer as the code unit value of a character. If no arguments are supplied, the result is the empty String.
    // Need ToUint16;
    // Need unicode-16 -> char translation
    return @StrTop
  }
  \\],
  85: [\\
  function toString () {
    // 1. Let B be the this value.
    var B = this;
    var b;
    // 2. If Type(B) is Boolean, then let b be B.
    if (typeof B === "Boolean") b = B;
    // 3. Else if Type(B) is Object and the value of the [[Class]] internal property of B is "Boolean",
    //    then let b be the value of the [[PrimitiveValue]] internal property of B.
    else if (typeof B === "object" && B !== null && @Class(B) === "Boolean") b = @PrimitiveValue(B);
    // 4. Else throw a TypeError exception.
    else throw new TypeError();
    // 5. If b is true, then return "true"; else return "false".
    if (b) return "true";
    else return "false";
  }
  \\],
  86: [\\
  function valueOf () {
    // 1. Let B be the this value.
    var B = this;
    var b;
    // 2. If Type(B) is Boolean, then let b be B.
    if (typeof B === "boolean") b = B;
    // 3. Else if Type(B) is Object and the value of the [[Class]] internal property of B is "Boolean",
    //    then let b be the value of the [[PrimitiveValue]] internal property of B.
    else if (typeof B === "object" && B !== null && @Class(B) === "Boolean") b = @PrimitiveValue(B);
    // 4. Else throw a TypeError exception.
    else throw new TypeError();
    // 5. Return b.
    return b;
  }
  \\],
  87: [\\
  function Boolean (value) {
    return @ToBoolean(value);
  }
  \\],
  88: [\\
  function Boolean (value) {
    return @BoolObj(value);
  }
  \\],
  89: [\\
  function () {
  }
  \\],
  90: [\\
  function toString (radix) {
    // The toString function is not generic; it throws a TypeError exception if its this value is not a Number or a Number object.
    if (!@SameValue(typeof this,'number') && !@SameValue(@Class(this), 'Number')){
      throw new TypeError();
    }
    // If radix not present or is undefined the Number 10 is used as the value of radix.
    if (arguments.length === 0 || @SameValue(radix,undefined)){
      var radix = 10;
    }
    else {
      radix = @ToInteger(radix);
    }
    // If ToInteger(radix) is the Number 10 then this Number value is given as an argument to the ToString abstract operation; the resulting String value is returned.
    if (radix === 10) {
      return @ToString(this);
    }
    // If ToInteger(radix) is not an integer between 2 and 36 inclusive throw a RangeError exception.
    else if (radix < 2 || radix > 36){
      throw new RangeError();
    }
    // If ToInteger(radix) is an integer from 2 to 36, but not 10, the result is a String representation of this Number value using the specified radix. Letters a-z are used for digits with values 10 through 35. The precise algorithm is implementation-dependent if the radix is not 10, however the algorithm should be a generalisation of that specified in 9.8.1.
    else if (radix >= 2 && radix <= 36) {
      var S = "";
      var n = this;
      var alpha = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
      while (n > 0){
        if(n%radix >= 10){
          S = alpha[n%radix - 10] + S;
        }else {
          S = @ToString(n%radix) + S;
        }
        n = @floor(n / radix);
      }
      return S;
    }
  }
  \\],
  91: [\\
  function toLocaleString () {
    if (!@SameValue(typeof this,'number') && !@SameValue(@Class(this), 'Number')){
      throw new TypeError();
    }
    return @ToString(this);
  }
  \\],
  92: [\\
  function valueOf () {
    // The valueOf function is not generic; it throws a TypeError exception if its this value is not a Number or a Number object. Therefore, it cannot be transferred to other kinds of objects for use as a method.
    if (typeof this === "number") return this;
    else if (typeof this === "object" && this !== null && @Class(this) === "Number") return @PrimitiveValue(this);
    else throw new TypeError();
  }
  \\],
  93: [\\
  function toFixed (fractionDigits){
    // 1. Let f be ToInteger(fractionDigits). (If fractionDigits is undefined, this step produces the value 0).
    var f = @ToInteger(fractionDigits);
    // 2. If f < 0 or f > 20, throw a RangeError exception.
    if (f < 0 || f > 20) {
      throw new RangeError();
    }
    // 3. Let x be this Number value.
    var x = this;
    // 4. If x is NaN, return the String "NaN".
    if (@SameValue(x,NaN)) {
      return "NaN";
    }
    // 5. Let s be the empty String.
    var s = "";
    // 6. Ifx<0,then
    if ( x < 0) {
      // a. Let s be "-".
      var s = "-";
      // b. Letx=–x.
      x = -x;
    }
    // 7. If x >= 10^21, then
    if (x >= 10e+21) {
      // a. Let m = ToString(x).
      var m = @ToString(x);
    }
    // 8. Else, x < 10^21
    else {
      // a. Let n be an integer for which the exact mathematical value of n/10^f – x is as close to zero as possible. If there are two such n, pick the larger n.
      var diff = Infinity;
      var pre_diff = Infinity;
      var n = 0;
      do{
        pre_diff = diff;
        diff = @abs(n / (@pow(10,f)) - x);
        n += 1;
      }while(diff < pre_diff);
      n -= 2;
      // b. If n = 0, let m be the String "0". Otherwise, let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).
      if (n === 0) {
        var m = "0";
      }else {
        var m = @ToString(n);
      }
      // c. If f!=0,then
      if (f != 0) {
        // i. Let k be the number of characters in m.
        var k = m.length;
        // ii. If k ≤ f, then
        if ( k <= f) {
          // 1. Let z be the String consisting of f+1–k occurrences of the character  ̳0‘.
          var z = "";
          for ( var i = 0; i < f + 1 - k; i++) {
            z = z + "0";
          }
          // 2. Let m be the concatenation of Strings z and m.
          var m = z + m;
          // 3. Letk=f+1.
          var k = f + 1;
        }
        // iii. Let a be the first k–f characters of m, and let b be the remaining f characters of m.
        var a = m.slice(0,k-f);
        var b = m.slice(k-f);
        // iv. Let m be the concatenation of the three Strings a, ".", and b.
        var m = a + "." + b;
      }
    }
    // 9. Return the concatenation of the Strings s and m.
    return s + m;
  }
  \\],
  94: [\\
  function toExponential (fractionDigits) {
    // 1. Let x be this Number value.
    var x = this;
    // 2. Let f be ToInteger(fractionDigits).
    var f = @ToInteger(fractionDigits);
    // 3. If x is NaN, return the String "NaN".
    if (@SameValue(x,NaN)) {
      return "NaN"
    }
    // 4. Let s be the empty String.
    var s = "";
    // 5. Ifx<0,then
    if (x < 0) {
      // a. Let s be "-".
      var s = "-";
      // b. Letx=–x.
      x = -x;
    }
    // 6. Ifx=Infinity,then
    if (@SameValue(x,Infinity)) {
      // a. Return the concatenation of the Strings s and "Infinity".
      return s + "Infinity";
    }
    // 7. If fractionDigits is not undefined and (f < 0 or f > 20), throw a RangeError exception.
    if ((!@SameValue(fractionDigits,undefined)) && (f < 0 || f > 20)) {
      throw new RangeError();
    }
    // 8. Ifx=0,then
    if (x === 0) {
      // a. Letf=0.
      var f = 0;
      // b. Let m be the String consisting of f+1 occurrences of the character  ̳0‘.
      m = "";
      for (var i = 0; i < f+1; i++) {
        m += "0";
      }
      // c. Lete=0.
      var e = 0;
    }
    // 9. Else,x!=0
    else {
      // a. If fractionDigits is not undefined, then
      if (!@SameValue(fractionDigits,undefined)) {
        // i. Let e and n be integers such that 10f   n < 10f+1 and for which the exact mathematical value of n 10e–f –x is as close to zero as possible. If there are two such sets of e and n, pick the e and n for which n   10e–f is larger.
        x_num = @ToString(x);
        // Get e
        if (x_num[0] === "0"){
          var i = 2;
          while (x_num[i] === "0") {
            i += 1;
          }
          var e = -i + 1;
        }
        else {
          var i = 0;
          while (x_num[i] !== ".") {
            i += 1;
          }
          e = i - 1;
        }
        // Get n
        var diff = Infinity;
        var pre_diff = Infinity;
        var n = @pow(10,f);
        do{
          pre_diff = diff;
          diff = @abs(n * (@pow(10,e-f)) - x);
          n += 1;
        }while((diff < pre_diff) && (n < @pow(10,f+1)));
        n -= 2;
      }
      // b. Else, fractionDigits is undefined
      else {
        // i. Lete,n,andfbeintegerssuchthatf 0,10f  n<10f+1,thenumbervalueforn 10e–f is x,and f is as small as possible. Note that the decimal representation of n has f+1 digits, n is not divisible by 10, and the least significant digit of n is not necessarily uniquely determined by these criteria.
        x_num = @ToString(x);
        // Get f
        if (x_num[0] === 0) {
          var i = 2;
          while (x_num[i] === "0") {
            i += 1;
          }
          f = x_num.length - i - 1;
        }else {
          f = x_num.length - 2;
        }
        // Get e
        if (x_num[0] === "0"){
          var i = 2;
          while (x_num[i] === "0") {
            i += 1;
          }
          var e = -i + 1;
        }
        else {
          var i = 0;
          while (x_num[i] !== ".") {
            i += 1;
          }
          e = i - 1;
        }
        // Get n
        var diff = Infinity;
        var pre_diff = Infinity;
        var n = @pow(10,f);
        do{
          pre_diff = diff;
          diff = @abs(n * (@pow(10,e-f)) - x);
          n += 1;
        }while((diff < pre_diff) && (n < @pow(10,f+1)));
        n -= 2;
      }
      // c. Let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).
      var m = @ToString(n);
    }
    // 10. If f!=0,then
    if (f != 0) {
      // a. Let a be the first character of m, and let b be the remaining f characters of m.
      var a = m.slice(0,1);
      var b = m.slice(1);
      // b. Let m be the concatenation of the three Strings a, ".", and b.
      m = a + "." + b;
    }
    // 11. Ife=0,then
    if (e === 0) {
      // a. Letc="+".
      var c = "+";
      // b. Letd="0".
      var d = 0;
    }
    // 12. Else
    else {
      // a. Ife>0,thenletc="+".
      if (e > 0) {
        var c = "+";
      }
      // b. Else,e≤0
      else {
        // i. Let c = "-".
        c = "-";
        // ii. Let e = –e.
        e = -e;
      }
      // c. Let d be the String consisting of the digits of the decimal representation of e (in order, with no leading zeroes).
      d = @ToString(e);
    }
    // 13. Let m be the concatenation of the four Strings m, "e", c, and d.
    var m = m + "e" + c + d;
    // 14. Return the concatenation of the Strings s and m.
    return m;
  }
  \\],
  95: [\\
  function toPrecision (precision) {
    // 1. Let x be this Number value.
    var x = this;
    // 2. If precision is undefined, return ToString(x).
    if (@SameValue(precision,undefined)) {
      return @ToString(x);
    }
    // 3. Let p be ToInteger(precision).
    var p = @ToInteger(precision);
    // 4. If x is NaN, return the String "NaN".
    if (@SameValue(NaN,x)) {
      return "NaN";
    }
    // 5. Let s be the empty String.
    var s = "";
    // 6. Ifx<0,then
    if (x < 0) {
      // a. Let s be "-".
      var s = "-";
      // b. Letx=–x.
      x = -x;
    }
    // 7. Ifx=+Infinity ,then
    if (@SameValue(x,Infinity)) {
      // a. Return the concatenation of the Strings s and "Infinity".
      return s + "Infinity";
    }
    // 8. If p < 1 or p > 21, throw a RangeError exception.
    if (p < 1 || p > 21) {
      throw new RangeError();
    }
    // 9. Ifx=0,then
    if (x === 0) {
      // a. Let m be the String consisting of p occurrences of the character  ̳0‘.
      var m = "";
      for (var i = 0; i < p; i++) {
        m += "0";
      }
      // b. Lete=0.
      var e = 0
    }
    //10. Else x !=  0,
    else {
      //a. Let e and n be integers such that 10p–1   n < 10p and for which the exact mathematical value of n   10e–p+1 – x is as close to zero as possible. If there are two such sets of e and n, pick the e and n for which n   10e–p+1 is larger.
      // Get e
      if (x_num[0] === "0"){
        var i = 2;
        while (x_num[i] === "0") {
          i += 1
        }
        var e = -i + 1;
      }
      else {
        var i = 0;
        while (x_num[i] !== ".") {
          i += 1;
        }
        e = i - 1;
      }
      // Get n
      var diff = Infinity;
      var pre_diff = Infinity;
      var n = @pow(10,p-1);
      do{
        pre_diff = diff;
        diff = @abs(n * (@pow(10,e-p+1)) - x);
        n += 1;
      }while((diff < pre_diff) && (n < @pow(10,p)))
      n -= 2;
      // b. Let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).
      var m = @ToString(n);
      // c. Ife < –6 or e>= p,then
      if (e < -6 || e >= p) {
        // i. Let a be the first character of m, and let b be the remaining p–1 characters of m.
        var a = m[0];
        var b = m.slice(1);
        // ii. Let m be the concatenation of the three Strings a, ".", and b.
        m = a + "." + b;
        // iii. If e = 0, then
        if (e === 0) {
          // 1. Let c ="+"and d ="0".
          var c = "+";
          var d = "0";
        }
        //iv. Else e!= 0,
        else {
          // 1. Ife>0, then
          if (e > 0) {
            // a Let c = "+".
            var c = "+";
          }
          // 2. Elsee<0,
          else {
            // a Let c = "-".
            var c = "-";
            // b Let e = –e.
            e = -e;
          }
          // 3. Let d be the String consisting of the digits of the decimal representation of e (in order, with no leading zeroes).
          var d = @ToString(e);
        }
      // v. Let m be the concatenation of the five Strings s, m, "e", c, and d.
      var m = s + m + "e" + c + d;
      }
    }
    // 11. If e = p–1, then return the concatenation of the Strings s and m.
    if (e === p-1) {
      return s + m;
    }
    // 12. If e>= 0,then
    if (e >= 0) {
      // a. Let m be the concatenation of the first e+1 characters of m, the character  ̳.‘, and the remaining p– (e+1) characters of m.
      var m = m.slice(0,e+1) + "." + m.slice(e+1,p);
    }
    // 13. Else e < 0,
    else {
      // a. Let m be the concatenation of the String "0.", –(e+1) occurrences of the character  ̳0‘, and the String m.
      var m = "0.";
      for (var i = 0; i < -(e+1); i++) {
        m += "0";
      }
    }
    // 14. Return the concatenation of the Strings s and m.
    return s + m;
  }
  \\],
  96: [\\
  function Number (value) {
    if(arguments.length === 0){
      return +0;
    }else{
      return @ToNumber(value);
    }
  }
  \\],
  97: [\\
  function Number (value) {
    if (arguments.length === 0) {
      return @NumObj(+0);
    } else {
      return @NumObj(value);
    }
  }
  \\],
  98: [\\
  function () {
  }
  \\],
  99: [\\
  function toString () {
    // This function returns a String value. The contents of the String are implementation-dependent, but are intended to represent the Date in the current time zone in a convenient, human-readable form.
    return @ToString(this);
  }
  \\],
  100: [\\
  function toDateString () {
    // This function returns a String value. The contents of the String are implementation-dependent, but are intended to represent the ―date‖ portion of the Date in the current time zone in a convenient, human-readable form.
    var S = @ToString(this);
    b = 0;
    for (var i = 0; i < S.length; i++) {
      if (S[i] === " ") {
        b += 1;
      }
      if (b === 3) {
        break;
      }
    }
    return S.slice(0,i);
  }
  \\],
  101: [\\
  function toTimeString () {
    // This function returns a String value. The contents of the String are implementation-dependent, but are intended to represent the ―time‖ portion of the Date in the current time zone in a convenient, human-readable form.
    var S = @ToString(this);
    b = 0;
    for (var i = 0; i < S.length; i++) {
      if (S[i] === " ") {
        b += 1;
      }
      if (b === 3) {
        break;
      }
    }
    return S.slice(i);
  }
  \\],
  102: [\\
  function toLocaleString () {
    return @ToString(this);
  }
  \\],
  103: [\\
  function toLocaleDateString() {
    var S = @ToString(this);
    b = 0;
    for (var i = 0; i < S.length; i++) {
      if (S[i] === " ") {
        b += 1;
      }
      if (b === 3) {
        break;
      }
    }
    return S.slice(0,i);
  }
  \\],
  104: [\\
  function toLocaleTimeString () {
    var S = @ToString(this);
    b = 0;
    for (var i = 0; i < S.length; i++) {
      if (S[i] === " ") {
        b += 1;
      }
      if (b === 3) {
        break;
      }
    }
    return S.slice(i);
  }
  \\],
  105: [\\
  function valueOf () {
    // The valueOf function returns a Number, which is this time value.
    return @PrimitiveValue(this);
  }
  \\],
  106: [\\
  function getTime () {
    // 1. Return this time value.
    return @PrimitiveValue(this);
  }
  \\],
  107: [\\
  function getFullYear () {
    // Need LocalTime(t)
    return @NumTop;
  }
  \\],
  108: [\\
  function getUTCFullYear () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return YearFromTime(t).
    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var msPerDay = 86400000;
    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;
    return YearFromTime_t;
  }
  \\],
  109: [\\
  function getMonth() {
    // Need LocalTime(t)
    return @NumTop;
  }
  \\],
  110: [\\
  function getUTCMonth () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return MonthFromTime(t).
    var msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);

    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;

    var y = YearFromTime_t;

    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var DayWithinYear_t = Day_t - DayFromYear_y

    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var msPerDay = 86400000;
    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;

    var y = YearFromTime_t;

    if (y % 4 !== 0) {
      var DaysInYear_y = 365;
    }else if (y % 4 === 0 && y % 100 !== 0) {
      var DaysInYear_y = 366;
    }else if (y % 100 === 0 && y % 400 !== 0) {
      var DaysInYear_y = 365;
    }else if (y % 400 === 0) {
      var DaysInYear_y = 366;
    }

    if (DaysInYear_y === 365) {
      var InLeapYear_t = 0;
    }else {
      var InLeapYear_t = 1;
    }

    if (0 <= DayWithinYear_t < 31) {
      var MonthFromTime_t = 0;
    }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
      var MonthFromTime_t = 1;
    }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
      var MonthFromTime_t = 2;
    }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
      var MonthFromTime_t = 3;
    }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
      var MonthFromTime_t = 4;
    }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
      var MonthFromTime_t = 5;
    }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
      var MonthFromTime_t = 6;
    }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
      var MonthFromTime_t = 7;
    }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
      var MonthFromTime_t = 8;
    }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
      var MonthFromTime_t = 9;
    }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
      var MonthFromTime_t = 10;
    }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
      var MonthFromTime_t = 11;
    }
    return MonthFromTime_t;
  }
  \\],
  111: [\\
  function getDate () {
    // Need LocalTime(t);
    return @NumTop;
  }
  \\],
  112: [\\
  function getUTCDate () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return DateFromTime(t).

    var msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);

    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;

    var y = YearFromTime_t;

    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var DayWithinYear_t = Day_t - DayFromYear_y

    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var msPerDay = 86400000;
    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;

    var y = YearFromTime_t;

    if (y % 4 !== 0) {
      var DaysInYear_y = 365;
    }else if (y % 4 === 0 && y % 100 !== 0) {
      var DaysInYear_y = 366;
    }else if (y % 100 === 0 && y % 400 !== 0) {
      var DaysInYear_y = 365;
    }else if (y % 400 === 0) {
      var DaysInYear_y = 366;
    }

    if (DaysInYear_y === 365) {
      var InLeapYear_t = 0;
    }else {
      var InLeapYear_t = 1;
    }

    if (0 <= DayWithinYear_t < 31) {
      var MonthFromTime_t = 0;
    }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
      var MonthFromTime_t = 1;
    }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
      var MonthFromTime_t = 2;
    }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
      var MonthFromTime_t = 3;
    }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
      var MonthFromTime_t = 4;
    }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
      var MonthFromTime_t = 5;
    }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
      var MonthFromTime_t = 6;
    }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
      var MonthFromTime_t = 7;
    }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
      var MonthFromTime_t = 8;
    }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
      var MonthFromTime_t = 9;
    }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
      var MonthFromTime_t = 10;
    }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
      var MonthFromTime_t = 11;
    }

    if (MonthFromTime_t === 0) {
      var DateFromTime = DayWithinYear_t + 1;
    }else if (MonthFromTime_t === 1) {
      var DateFromTime = DayWithinYear_t - 30;
    }else if (MonthFromTime_t === 2) {
      var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
    }else if (MonthFromTime_t === 3) {
      var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
    }else if (MonthFromTime_t === 4) {
      var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
    }else if (MonthFromTime_t === 5) {
      var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
    }else if (MonthFromTime_t === 6) {
      var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
    }else if (MonthFromTime_t === 7) {
      var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
    }else if (MonthFromTime_t === 8) {
      var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
    }else if (MonthFromTime_t === 9) {
      var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
    }else if (MonthFromTime_t === 10) {
      var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
    }else if (MonthFromTime_t === 11) {
      var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
    }
    return DateFromTime;
  }
  \\],
  113: [\\
  function getDay () {
    // Need Localtime(t);
    return @NumTop;
  }
  \\],
  114: [\\
  function getUTCDay () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return WeekDay(t).
    var msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);

    var WeekDay_t = (Day_t + 4) % 7;
    return WeekDay_t;
  }
  \\],
  115: [\\
  function getHours () {
    // Need Local(t)
    return @NumTop;
  }
  \\],
  116: [\\
  function getUTCHours () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return HourFromTime(t).
    var HoursPerDay = 24;
    var msPerHour = 3600000;
    var HourFromTime_t = @floor(t / msPerHour) % HoursPerDay;
    return HourFromTime_t;
  }
  \\],
  117: [\\
  function getMinutes () {
    // Need LocalTime(t)
    return @NumTop;
  }
  \\],
  118: [\\
  function getUTCMinutes () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return MinFromTime(t).
    var MinutesPerHour = 60;
    var msPerMinute = 60000;
    var MinFromTime_t = @floor(t / msPerMinute) % MinutesPerHour;
    return MinFromTime_t;
  }
  \\],
  119: [\\
  function getSeconds () {
    // Need LocalTime(t);
    return @NumTop;
  }
  \\],
  120: [\\
  function getUTCSeconds () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return SecFromTime(t).
    var SecondsPerMinute= 60;
    var msPerSecond = 1000;
    var SecFromTime_t  = @floor(t / msPerSecond) % SecondsPerMinute;
    return SecFromTime_t;
  }
  \\],
  121: [\\
  function getMilliseconds () {
    // Need LocalTime(t)
    return @NumTop;
  }
  \\],
  122: [\\
  function getUTCMilliseconds () {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. If t is NaN, return NaN.
    if (@SameValue(t,NaN)) {
      return NaN;
    }
    // 3. Return msFromTime(t).
    var msPerSecond = 1000;
    var msFromTime_t = t % msPerSecond;
    return msFromTime_t;
  }
  \\],
  123: [\\
  function getTimezoneOffset () {
    // Need LocalTime(t)
    return @NumTop;
  }
  \\],
  124: [\\
  function setTime (time) {
    // 1. Let v be TimeClip(ToNumber(time)).
    var time = @ToNumber(time);
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    var v = return_val;
    //  2. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    // 3. Return v.
    return v;
  }
  \\],
  125: [\\
  function setMilliseconds (ms) {
    // Need LocalTime(t)
    @PrimitiveValue(this,@NumTop);
    return @NumTop;
  }
  \\],
  126: [\\
  function setUTCMilliseconds (ms) {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. Let time be MakeTime(HourFromTime(t), MinFromTime(t), SecFromTime(t), ToNumber(ms)).
    var arg1;
    var arg2;
    var arg3;
    var arg4;
    // HourFromTime(t)
    var HoursPerDay = 24;
    var msPerHour = 3600000;
    var HourFromTime_t = @floor(t / msPerHour) % HoursPerDay;
    arg1 = HourFromTime_t;
    // MinFromTime(t)
    var MinutesPerHour = 60;
    var msPerMinute = 60000;
    var MinFromTime_t = @floor(t / msPerMinute) % MinutesPerHour;
    arg2 = MinFromTime_t;
    // SecFromTime(t)
    var SecondsPerMinute= 60;
    var msPerSecond = 1000;
    var SecFromTime_t  = @floor(t / msPerSecond) % SecondsPerMinute;
    arg3 = SecFromTime_t;
    arg4 = @ToNumber(ms);
    // MakeTime
    var hour = arg1;
    var min = arg2;
    var sec = arg3;
    var ms = arg4;
    var return_val;

    var HoursPerDay = 24;
    var MinutesPerHour = 60;
    var SecondsPerMinute= 60;
    var msPerSecond = 1000;
    var msPerMinute = 60000;
    var msPerHour = 3600000;

    if (hour === Infinity || min === Infinity || sec === Infinity || ms === Infinity) {
      return_val = NaN;
    }else {
      var h = @ToInteger(hour);
      var m = @ToInteger(min);
      var s = @ToInteger(sec);
      var milli = @ToInteger(ms);
      var t = h * msPerHour + m * msPerMinute + s * msPerSecond + milli;
      return_val = t;
    }
    var time = return_val;
    // 3. Let v be TimeClip(MakeDate(Day(t), time)).
    var arg1;
    var arg2 = time;
    var arg3;
    // Day(t)
    var t = @PrimitiveValue(this);
    var msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);
    arg1 = Day_t;
    // MakeDate
    var day = arg1;
    var time = arg2;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
      return_val = day * msPerDay + time;
    }
    arg3 = return_val;
    // TimeClip
    var time = arg3;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      var v = return_val;
    }
    // 4. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    // 5. Return v.
    return v;
  }
  \\],
  127: [\\
  function setSeconds (sec,ms) {
    // Need LocalTime(t);
    @PrimitiveValue(this,@NumTop);
    return @NumTop;
  }
  \\],
  128: [\\
  function setUTCSeconds (set,ms) {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. Let s be ToNumber(sec).
    var s = @ToNumber(sec);
    // 3. If ms is not specified, then let milli be msFromTime(t); otherwise, let milli be ToNumber(ms).
    if (!(arguments.length > 1)) {
      var msPerSecond = 1000;
      var msFromTime_t = t % msPerSecond;
      var milli = msFromTime_t;
    }else {
      var milli = @ToNumber(ms);
    }
    // 4. Let date be MakeDate(Day(t), MakeTime(HourFromTime(t), MinFromTime(t), s, milli)).
    var arg1;
    var arg2;
    var arg3;
    var arg4;
    // HourFromTime(t)
    var HoursPerDay = 24;
    var msPerHour = 3600000;
    var HourFromTime_t = @floor(t / msPerHour) % HoursPerDay;
    arg1 = HourFromTime_t;
    // MinFromTime(t);
    var MinutesPerHour = 60;
    var msPerMinute = 60000;
    var MinFromTime_t = @floor(t / msPerMinute) % MinutesPerHour;
    arg2 = MinFromTime_t;
    // Day(t)
    msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);
    arg3 = Day_t;
    // MakeTime
    var hour = arg1;
    var min = arg2;
    var sec = s;
    var ms = milli;
    var return_val;

    var HoursPerDay = 24;
    var MinutesPerHour = 60;
    var SecondsPerMinute= 60;
    var msPerSecond = 1000;
    var msPerMinute = 60000;
    var msPerHour = 3600000;

    if (hour === Infinity || min === Infinity || sec === Infinity || ms === Infinity) {
      return_val = NaN;
    }else {
      var h = @ToInteger(hour);
      var m = @ToInteger(min);
      var s = @ToInteger(sec);
      var milli = @ToInteger(ms);
      var t = h * msPerHour + m * msPerMinute + s * msPerSecond + milli;
      return_val = t;
    }
    arg4 = return_val;
    // MakeDate(t)
    var day = arg3;
    var time = arg4;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
      return_val = day * msPerDay + time;
    }
    var date = return_val;
    // 5. Let v be TimeClip(date).
    var time = date;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if(@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    var v = return_val;
    // 6. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    // 7. Return v.
    return v;
  }
  \\],
  129: [\\
  function setMinutes (min,sec,ms) {
    // Need LocalTime(t)
    @PrimitiveValue(this,@NumTop);
    return @NumTop;
  }
  \\],
  130: [\\
  function setUTCMinutes (min,sec,ms) {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    //2. Let m be ToNumber(min).
    var m = @ToNumber(min);
    // 3. If sec is not specified, then let s be SecFromTime(t); otherwise, let s be ToNumber(sec).
    if (!(arguments.length > 1)) {
      var SecondsPerMinute= 60;
      var msPerSecond = 1000;
      var SecFromTime_t  = @floor(t / msPerSecond) % SecondsPerMinute;
      var sec = SecFromTime_t;
    }else {
      var s = @ToNumber(sec);
    }
    // 4. If ms is not specified, then let milli be msFromTime(t); otherwise, let milli be ToNumber(ms).
    if (!(arguments.length > 2)) {
      var msPerSecond = 1000;
      var msFromTime_t = t % msPerSecond;
      var milli = msFromTime_t;
    }else {
      var milli = @ToNumber(ms);
    }
    // 5. Let date be MakeDate(Day(t), MakeTime(HourFromTime(t), m, s, milli)).
    var arg1;
    var arg2;
    var arg3;
    // HourFromTime(t)
    var HoursPerDay = 24;
    var msPerHour = 3600000;
    var HourFromTime_t = @floor(t / msPerHour) % HoursPerDay;
    arg1 = HourFromTime_t;
    // Day(t)
    var msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);
    arg2 = Day_t;
    // MakeTime
    var hour = arg1;
    var min = m;
    var sec = s;
    var ms = milli;
    var return_val;

    var HoursPerDay = 24;
    var MinutesPerHour = 60;
    var SecondsPerMinute= 60;
    var msPerSecond = 1000;
    var msPerMinute = 60000;
    var msPerHour = 3600000;


    if (hour === Infinity || min === Infinity || sec === Infinity || ms === Infinity) {
      return_val = NaN;
    }else {
      var h = @ToInteger(hour);
      var m = @ToInteger(min);
      var s = @ToInteger(sec);
      var mlli = @ToInteger(ms);
      var t = h * msPerHour + m * msPerMinute + s * msPerSecond + milli;
      return_val = t;
    }
    arg3 = return_val;
    // MakeDate
    var day = arg2;
    var time = arg3;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
    return_val = day * msPerDay + time;
    }
    var date = return_val;
    // 6. Let v be TimeClip(date).
    // TimeClip
    var time = date;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    var v = return_val;
    // 7. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    //8. Return v.
    return v;
  }
  \\],
  131: [\\
  function setHours (hour,min,sec,ms) {
    // Need LocalTime(t)
    @PrimitiveValue(this,@NumTop);
    return @NumTop;
  }
  \\],
  132: [\\
  function setUTCHours (hour,min,sec,ms) {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. Let h be ToNumber(hour).
    var h = @ToNumber(hour);
    // 3. If min is not specified, then let m be MinFromTime(t); otherwise, let m be ToNumber(min).
    if (!(arguments.length > 1)) {
      var MinutesPerHour = 60;
      var msPerMinute = 60000;
      var MinFromTime_t = @floor(t / msPerMinute) % MinutesPerHour;
      var m = MinFromTime_t;
    }else {
      var m = @ToNumber(min);
    }
    // 4. If sec is not specified, then let s be SecFromTime(t); otherwise, let s be ToNumber(sec).
    if (!(arguments.length > 2)) {
      var SecondsPerMinute= 60;
      var msPerSecond = 1000;
      var SecFromTime_t  = @floor(t / msPerSecond) % SecondsPerMinute;
      var s = SecFromTime_t;
    }else {
      var s = @ToNumber(sec);
    }
    // 5. If ms is not specified, then let milli be msFromTime(t); otherwise, let milli be ToNumber(ms).
    if (!(arguments.length > 3)) {
      var msPerSecond = 1000;
      var msFromTime_t = t % msPerSecond;
      var ms = msFromTime_t;
    }else {
      var milli = @ToNumber(ms);
    }
    // 6. Let newDate be MakeDate(Day(t), MakeTime(h, m, s, milli)).
    var arg1;
    var arg2;
    // Day(t)
    var msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);
    arg1 = Day_t;
    // MakeTime
    var hour = h;
    var min = m;
    var sec = s;
    var ms = milli;
    var return_val;

    var HoursPerDay = 24;
    var MinutesPerHour = 60;
    var SecondsPerMinute= 60;
    var msPerSecond = 1000;
    var msPerMinute = 60000;
    var msPerHour = 3600000;


    if (hour === Infinity || min === Infinity || sec === Infinity || ms === Infinity) {
      return_val = NaN;
    }else {
      var h = @ToInteger(hour);
      var m = @ToInteger(min);
      var s = @ToInteger(sec);
      var milli = @ToInteger(ms);
      var t = h * msPerHour + m * msPerMinute + s * msPerSecond + milli;
      return_val = t;
    }
    arg2 = return_val;
    // MakeDate
    var day = arg1;
    var time = arg2;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
      return_val = day * msPerDay + time;
    }
    var newDate = return_val;
    // 7. Let v be TimeClip(newDate).
    var time = newDate;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    var v = return_val;
    // 8. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    // 9. Return v.
    return v;
  }
  \\],
  133: [\\
  function setDate (date) {
    // Need LocalTime(t)
    @PrimitiveValue(this,@NumTop);
    return @NumTop;
  }
  \\],
  134: [\\
  function setUTCDate (date) {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. Let dt be ToNumber(date).
    var dt = @ToNumber(date);
    // 3. Let newDate be MakeDate(MakeDay(YearFromTime(t), MonthFromTime(t), dt), TimeWithinDay(t)).
    var arg1;
    var arg2;
    var arg3;
    var arg4;
    // YearFromTime(t);
    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var msPerDay = 86400000;
    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;
    arg1 = YearFromTime_t;
    // MonthFromTime(t)
    var msPerDay = 86400000;
    var Day_t = @floor(t/msPerDay);

    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;

    var y = YearFromTime_t;

    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var DayWithinYear_t = Day_t - DayFromYear_y

    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var msPerDay = 86400000;
    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;

    var y = YearFromTime_t;

    if (y % 4 !== 0) {
      var DaysInYear_y = 365;
    }else if (y % 4 === 0 && y % 100 !== 0) {
      var DaysInYear_y = 366;
    }else if (y % 100 === 0 && y % 400 !== 0) {
      var DaysInYear_y = 365;
    }else if (y % 400 === 0) {
      var DaysInYear_y = 366;
    }

    if (DaysInYear_y === 365) {
      var InLeapYear_t = 0;
    }else {
      var InLeapYear_t = 1;
    }

    if (0 <= DayWithinYear_t < 31) {
      var MonthFromTime_t = 0;
    }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
      var MonthFromTime_t = 1;
    }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
      var MonthFromTime_t = 2;
    }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
      var MonthFromTime_t = 3;
    }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
      var MonthFromTime_t = 4;
    }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
      var MonthFromTime_t = 5;
    }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
      var MonthFromTime_t = 6;
    }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
      var MonthFromTime_t = 7;
    }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
      var MonthFromTime_t = 8;
    }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
      var MonthFromTime_t = 9;
    }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
      var MonthFromTime_t = 10;
    }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
      var MonthFromTime_t = 11;
    }
    arg2 = MonthFromTime_t;
    // TimeWithinDay(t)
    var msPerDay = 86400000;
    var TimeWithinDay_t = t % msPerDay;
    arg3 = TimeWithinDay_t;
    // MakeDay
    var year = arg1;
    var month = arg2;
    var date = dt;
    var return_val;
    if (year === Infinity || month === Infinity || date === Infinity) {
      return_val = NaN;
    }else {
      var y = @ToInteger(year);
      var m = @ToInteger(month);
      var dt = @ToInteger(date);
      var ym = y + @floor(m/12);
      var mn = m % 12;
      var t = 0;
      while (t < 8.64e+15) {
        // YearFromTime(t)
        var y = 0;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;

        while (TimeFromYear_y <= t) {
          y += 1;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;
        }
        y -= 1;
        var YearFromTime_t = y;
        if (YearFromTime_t === ym) {
          // MonthFromTime(t)
          var msPerDay = 86400000;
          var Day_t = @floor(t/msPerDay);

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var DayWithinYear_t = Day_t - DayFromYear_y

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var msPerDay = 86400000;
          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          if (y % 4 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 4 === 0 && y % 100 !== 0) {
            var DaysInYear_y = 366;
          }else if (y % 100 === 0 && y % 400 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 400 === 0) {
            var DaysInYear_y = 366;
          }

          if (DaysInYear_y === 365) {
            var InLeapYear_t = 0;
          }else {
            var InLeapYear_t = 1;
          }

          if (0 <= DayWithinYear_t < 31) {
            var MonthFromTime_t = 0;
          }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
            var MonthFromTime_t = 1;
          }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
            var MonthFromTime_t = 2;
          }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
            var MonthFromTime_t = 3;
          }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
            var MonthFromTime_t = 4;
          }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
            var MonthFromTime_t = 5;
          }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
            var MonthFromTime_t = 6;
          }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
            var MonthFromTime_t = 7;
          }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
            var MonthFromTime_t = 8;
          }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
            var MonthFromTime_t = 9;
          }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
            var MonthFromTime_t = 10;
          }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
            var MonthFromTime_t = 11;
          }
          if (MonthFromTime_t === mn) {
            // DateFromTime(t)
            var msPerDay = 86400000;
            var Day_t = @floor(t/msPerDay);

            var y = 0;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;

            while (TimeFromYear_y <= t) {
              y += 1;
              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var TimeFromYear_y = msPerDay * DayFromYear_y;
            }
            y -= 1;
            var YearFromTime_t = y;

            var y = YearFromTime_t;

            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var DayWithinYear_t = Day_t - DayFromYear_y

            if (0 <= DayWithinYear_t < 31) {
              var MonthFromTime_t = 0;
            }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
              var MonthFromTime_t = 1;
            }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
              var MonthFromTime_t = 2;
            }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
              var MonthFromTime_t = 3;
            }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
              var MonthFromTime_t = 4;
            }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
              var MonthFromTime_t = 5;
            }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
              var MonthFromTime_t = 6;
            }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
              var MonthFromTime_t = 7;
            }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
              var MonthFromTime_t = 8;
            }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
              var MonthFromTime_t = 9;
            }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
              var MonthFromTime_t = 10;
            }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
              var MonthFromTime_t = 11;
            }

            if (MonthFromTime_t === 0) {
              var DateFromTime = DayWithinYear_t + 1;
            }else if (MonthFromTime_t === 1) {
              var DateFromTime = DayWithinYear_t - 30;
            }else if (MonthFromTime_t === 2) {
              var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
            }else if (MonthFromTime_t === 3) {
              var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
            }else if (MonthFromTime_t === 4) {
              var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
            }else if (MonthFromTime_t === 5) {
              var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
            }else if (MonthFromTime_t === 6) {
              var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
            }else if (MonthFromTime_t === 7) {
              var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
            }else if (MonthFromTime_t === 8) {
              var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
            }else if (MonthFromTime_t === 9) {
              var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
            }else if (MonthFromTime_t === 10) {
              var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
            }else if (MonthFromTime_t === 11) {
              var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
            }
            if (DateFromTime === 1){
              break;
            }
          }
        }
        t += 1;
      }
      if (t === 8.64e+15) {
        return_val = NaN;
      }else {
      var msPerDay = 86400000;
      var Day_t = @floor(t/msPerDay);
      return_val = Day_t + dt - 1;
      }
    }
    arg4 = return_val;
    // Makedate
    var day = arg4;
    var time = arg3;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
      return_val = day * msPerDay + time;
    }
    var newDate = return_val;
    // 4. Let v be TimeClip(newDate).
    var time = newDate;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    var v = return_val;
    // 5. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    // 6. Return v.
    return v;
  }
  \\],
  135: [\\
  function setMonth (month,date) {
    // Need LocalTime(t);
    @PrimitiveValue(this ,@NumTop);
    return @NumTop;
  }
  \\],
  136: [\\
  function setUTCMonth (month,date) {
    // 1. Let t be this time value.
    var t = @PrimitiveValue(this);
    // 2. Let m be ToNumber(month).
    var m = @ToNumber(month);
    // 3. If date is not specified, then let dt be DateFromTime(t); otherwise, let dt be ToNumber(date).
    if (!(arguments.length > 1)) {
      var msPerDay = 86400000;
      var Day_t = @floor(t/msPerDay);

      var y = 0;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;

      while (TimeFromYear_y <= t) {
        y += 1;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;
      }
      y -= 1;
      var YearFromTime_t = y;

      var y = YearFromTime_t;

      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var DayWithinYear_t = Day_t - DayFromYear_y

      var y = 0;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var msPerDay = 86400000;
      var TimeFromYear_y = msPerDay * DayFromYear_y;

      while (TimeFromYear_y <= t) {
        y += 1;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;
      }
      y -= 1;
      var YearFromTime_t = y;

      var y = YearFromTime_t;

      if (y % 4 !== 0) {
        var DaysInYear_y = 365;
      }else if (y % 4 === 0 && y % 100 !== 0) {
        var DaysInYear_y = 366;
      }else if (y % 100 === 0 && y % 400 !== 0) {
        var DaysInYear_y = 365;
      }else if (y % 400 === 0) {
        var DaysInYear_y = 366;
      }

      if (DaysInYear_y === 365) {
        var InLeapYear_t = 0;
      }else {
        var InLeapYear_t = 1;
      }

      if (0 <= DayWithinYear_t < 31) {
        var MonthFromTime_t = 0;
      }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
        var MonthFromTime_t = 1;
      }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
        var MonthFromTime_t = 2;
      }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
        var MonthFromTime_t = 3;
      }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
        var MonthFromTime_t = 4;
      }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
        var MonthFromTime_t = 5;
      }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
        var MonthFromTime_t = 6;
      }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
        var MonthFromTime_t = 7;
      }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
        var MonthFromTime_t = 8;
      }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
        var MonthFromTime_t = 9;
      }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
        var MonthFromTime_t = 10;
      }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
        var MonthFromTime_t = 11;
      }

      if (MonthFromTime_t === 0) {
        var DateFromTime = DayWithinYear_t + 1;
      }else if (MonthFromTime_t === 1) {
        var DateFromTime = DayWithinYear_t - 30;
      }else if (MonthFromTime_t === 2) {
        var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
      }else if (MonthFromTime_t === 3) {
        var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
      }else if (MonthFromTime_t === 4) {
        var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
      }else if (MonthFromTime_t === 5) {
        var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
      }else if (MonthFromTime_t === 6) {
        var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
      }else if (MonthFromTime_t === 7) {
        var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
      }else if (MonthFromTime_t === 8) {
        var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
      }else if (MonthFromTime_t === 9) {
        var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
      }else if (MonthFromTime_t === 10) {
        var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
      }else if (MonthFromTime_t === 11) {
        var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
      }
      var dt = DateFromTime;
    }else {
      @ToNumber(date);
    }
    // 4. Let newDate be MakeDate(MakeDay(YearFromTime(t), m, dt), TimeWithinDay(t)).
    var arg1;
    var arg2;
    var arg3;
    // YearFromTime(t)
    var y = 0;
    var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

    var msPerDay = 86400000;
    var TimeFromYear_y = msPerDay * DayFromYear_y;

    while (TimeFromYear_y <= t) {
      y += 1;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;
    }
    y -= 1;
    var YearFromTime_t = y;
    arg1 = YearFromTime_t;
    // TimeWithinDay(t)
    var msPerDay = 86400000;
    var TimeWithinDay_t = t % msPerDay;
    arg2 = TimeWithinDay_t;
    // MakeDay
    var year = arg1;
    var month = m;
    var date = dt;
    var return_val;
    if (year === Infinity || month === Infinity || date === Infinity) {
      return_val = NaN;
    }else {
      var y = @ToInteger(year);
      var m = @ToInteger(month);
      var dt = @ToInteger(date);
      var ym = y + @floor(m/12);
      var mn = m % 12;
      var t = 0;
      while (t < 8.64e+15) {
        // YearFromTime(t)
        var y = 0;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;

        while (TimeFromYear_y <= t) {
          y += 1;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;
        }
        y -= 1;
        var YearFromTime_t = y;
        if (YearFromTime_t === ym) {
          // MonthFromTime(t)
          var msPerDay = 86400000;
          var Day_t = @floor(t/msPerDay);

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var DayWithinYear_t = Day_t - DayFromYear_y

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var msPerDay = 86400000;
          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          if (y % 4 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 4 === 0 && y % 100 !== 0) {
            var DaysInYear_y = 366;
          }else if (y % 100 === 0 && y % 400 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 400 === 0) {
            var DaysInYear_y = 366;
          }

          if (DaysInYear_y === 365) {
            var InLeapYear_t = 0;
          }else {
            var InLeapYear_t = 1;
          }

          if (0 <= DayWithinYear_t < 31) {
            var MonthFromTime_t = 0;
          }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
            var MonthFromTime_t = 1;
          }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
            var MonthFromTime_t = 2;
          }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
            var MonthFromTime_t = 3;
          }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
            var MonthFromTime_t = 4;
          }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
            var MonthFromTime_t = 5;
          }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
            var MonthFromTime_t = 6;
          }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
            var MonthFromTime_t = 7;
          }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
            var MonthFromTime_t = 8;
          }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
            var MonthFromTime_t = 9;
          }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
            var MonthFromTime_t = 10;
          }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
            var MonthFromTime_t = 11;
          }
          if (MonthFromTime_t === mn) {
            // DateFromTime(t)
            var msPerDay = 86400000;
            var Day_t = @floor(t/msPerDay);

            var y = 0;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;

            while (TimeFromYear_y <= t) {
              y += 1;
              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var TimeFromYear_y = msPerDay * DayFromYear_y;
            }
            y -= 1;
            var YearFromTime_t = y;

            var y = YearFromTime_t;

            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var DayWithinYear_t = Day_t - DayFromYear_y

            if (0 <= DayWithinYear_t < 31) {
              var MonthFromTime_t = 0;
            }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
              var MonthFromTime_t = 1;
            }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
              var MonthFromTime_t = 2;
            }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
              var MonthFromTime_t = 3;
            }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
              var MonthFromTime_t = 4;
            }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
              var MonthFromTime_t = 5;
            }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
              var MonthFromTime_t = 6;
            }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
              var MonthFromTime_t = 7;
            }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
              var MonthFromTime_t = 8;
            }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
              var MonthFromTime_t = 9;
            }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
              var MonthFromTime_t = 10;
            }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
              var MonthFromTime_t = 11;
            }

            if (MonthFromTime_t === 0) {
              var DateFromTime = DayWithinYear_t + 1;
            }else if (MonthFromTime_t === 1) {
              var DateFromTime = DayWithinYear_t - 30;
            }else if (MonthFromTime_t === 2) {
              var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
            }else if (MonthFromTime_t === 3) {
              var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
            }else if (MonthFromTime_t === 4) {
              var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
            }else if (MonthFromTime_t === 5) {
              var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
            }else if (MonthFromTime_t === 6) {
              var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
            }else if (MonthFromTime_t === 7) {
              var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
            }else if (MonthFromTime_t === 8) {
              var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
            }else if (MonthFromTime_t === 9) {
              var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
            }else if (MonthFromTime_t === 10) {
              var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
            }else if (MonthFromTime_t === 11) {
              var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
            }
            if (DateFromTime === 1){
              break;
            }
          }
        }
        t += 1;
      }
      if (t === 8.64e+15) {
        return_val = NaN;
      }
      else {
      var msPerDay = 86400000;
      var Day_t = @floor(t/msPerDay);
      return_val = Day_t + dt - 1;
      }
    }
    arg3 = return_val;
    // MakeDate
    var day = arg3;
    var time = arg2;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
      return_val = day * msPerDay + time;
    }
    var newDate = return_val;
    // 5. Let v be TimeClip(newDate).
    var time = newDate;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    var v = return_val;
    // 6. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    // 7. Return v.
    return v;
  }
  \\],
  137: [\\
  function setFullYear (year,month,date) {
    // Need LocalTime(t);
    @PrimitiveValue(this,@NumTop);
    return @NumTop;
  }
  \\],
  138: [\\
  function setUTCFullYear (year,month,date) {
    // 1. Let t be this time value; but if this time value is NaN, let t be +0.
    var t = @PrimitiveValue(this);
    if (@SameValue(t,NaN)) {
      var t = 0;
    }
    // 2. Let y be ToNumber(year).
    var y = @ToNumber(year);
    // 3. If month is not specified, then let m be MonthFromTime(t); otherwise, let m be ToNumber(month).
    if (!(arguments.length > 1)) {
      var msPerDay = 86400000;
      var Day_t = @floor(t/msPerDay);

      var y = 0;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;

      while (TimeFromYear_y <= t) {
        y += 1;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;
      }
      y -= 1;
      var YearFromTime_t = y;

      var y = YearFromTime_t;

      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var DayWithinYear_t = Day_t - DayFromYear_y

      var y = 0;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var msPerDay = 86400000;
      var TimeFromYear_y = msPerDay * DayFromYear_y;

      while (TimeFromYear_y <= t) {
        y += 1;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;
      }
      y -= 1;
      var YearFromTime_t = y;

      var y = YearFromTime_t;

      if (y % 4 !== 0) {
        var DaysInYear_y = 365;
      }else if (y % 4 === 0 && y % 100 !== 0) {
        var DaysInYear_y = 366;
      }else if (y % 100 === 0 && y % 400 !== 0) {
        var DaysInYear_y = 365;
      }else if (y % 400 === 0) {
        var DaysInYear_y = 366;
      }

      if (DaysInYear_y === 365) {
        var InLeapYear_t = 0;
      }else {
        var InLeapYear_t = 1;
      }

      if (0 <= DayWithinYear_t < 31) {
        var MonthFromTime_t = 0;
      }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
        var MonthFromTime_t = 1;
      }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
        var MonthFromTime_t = 2;
      }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
        var MonthFromTime_t = 3;
      }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
        var MonthFromTime_t = 4;
      }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
        var MonthFromTime_t = 5;
      }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
        var MonthFromTime_t = 6;
      }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
        var MonthFromTime_t = 7;
      }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
        var MonthFromTime_t = 8;
      }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
        var MonthFromTime_t = 9;
      }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
        var MonthFromTime_t = 10;
      }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
        var MonthFromTime_t = 11;
      }
      var m = MonthFromTime_t;
    }else {
      var m = @ToNumber(m);
    }
    // 4. If date is not specified, then let dt be DateFromTime(t); otherwise, let dt be ToNumber(date).
    if (!(arguments.length > 0)) {
      var msPerDay = 86400000;
      var Day_t = @floor(t/msPerDay);

      var y = 0;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var TimeFromYear_y = msPerDay * DayFromYear_y;

      while (TimeFromYear_y <= t) {
        y += 1;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;
      }
      y -= 1;
      var YearFromTime_t = y;

      var y = YearFromTime_t;

      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var DayWithinYear_t = Day_t - DayFromYear_y

      var y = 0;
      var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

      var msPerDay = 86400000;
      var TimeFromYear_y = msPerDay * DayFromYear_y;

      while (TimeFromYear_y <= t) {
        y += 1;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;
      }
      y -= 1;
      var YearFromTime_t = y;

      var y = YearFromTime_t;

      if (y % 4 !== 0) {
        var DaysInYear_y = 365;
      }else if (y % 4 === 0 && y % 100 !== 0) {
        var DaysInYear_y = 366;
      }else if (y % 100 === 0 && y % 400 !== 0) {
        var DaysInYear_y = 365;
      }else if (y % 400 === 0) {
        var DaysInYear_y = 366;
      }

      if (DaysInYear_y === 365) {
        var InLeapYear_t = 0;
      }else {
        var InLeapYear_t = 1;
      }

      if (0 <= DayWithinYear_t < 31) {
        var MonthFromTime_t = 0;
      }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
        var MonthFromTime_t = 1;
      }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
        var MonthFromTime_t = 2;
      }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
        var MonthFromTime_t = 3;
      }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
        var MonthFromTime_t = 4;
      }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
        var MonthFromTime_t = 5;
      }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
        var MonthFromTime_t = 6;
      }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
        var MonthFromTime_t = 7;
      }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
        var MonthFromTime_t = 8;
      }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
        var MonthFromTime_t = 9;
      }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
        var MonthFromTime_t = 10;
      }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
        var MonthFromTime_t = 11;
      }

      if (MonthFromTime_t === 0) {
        var DateFromTime = DayWithinYear_t + 1;
      }else if (MonthFromTime_t === 1) {
        var DateFromTime = DayWithinYear_t - 30;
      }else if (MonthFromTime_t === 2) {
        var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
      }else if (MonthFromTime_t === 3) {
        var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
      }else if (MonthFromTime_t === 4) {
        var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
      }else if (MonthFromTime_t === 5) {
        var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
      }else if (MonthFromTime_t === 6) {
        var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
      }else if (MonthFromTime_t === 7) {
        var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
      }else if (MonthFromTime_t === 8) {
        var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
      }else if (MonthFromTime_t === 9) {
        var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
      }else if (MonthFromTime_t === 10) {
        var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
      }else if (MonthFromTime_t === 11) {
        var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
      }
      var dt = DateFromTime;
    }else {
      var dt = @ToNumber(dt);
    }
    // 5. Let newDate be MakeDate(MakeDay(y, m, dt), TimeWithinDay(t)).
    var arg1;
    var arg2;
    // TimeWithinDay(t)
    var msPerDay = 86400000;
    var TimeWithinDay_t = t % msPerDay;
    arg1 = TimeWithinDay_t;
    // MakeDay
    var year = y;
    var month = m;
    var date = dt;
    var return_val;
    if (year === Infinity || month === Infinity || date === Infinity) {
      return_val = NaN;
    }else {
      var y = @ToInteger(year);
      var m = @ToInteger(month);
      var dt = @ToInteger(date);
      var ym = y + @floor(m/12);
      var mn = m % 12;
      var t = 0;
      while (t < 8.64e+15) {
        // YearFromTime(t)
        var y = 0;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;

        while (TimeFromYear_y <= t) {
          y += 1;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;
        }
        y -= 1;
        var YearFromTime_t = y;
        if (YearFromTime_t === ym) {
          // MonthFromTime(t)
          var msPerDay = 86400000;
          var Day_t = @floor(t/msPerDay);

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var DayWithinYear_t = Day_t - DayFromYear_y

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var msPerDay = 86400000;
          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          if (y % 4 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 4 === 0 && y % 100 !== 0) {
            var DaysInYear_y = 366;
          }else if (y % 100 === 0 && y % 400 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 400 === 0) {
            var DaysInYear_y = 366;
          }

          if (DaysInYear_y === 365) {
            var InLeapYear_t = 0;
          }else {
            var InLeapYear_t = 1;
          }

          if (0 <= DayWithinYear_t < 31) {
            var MonthFromTime_t = 0;
          }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
            var MonthFromTime_t = 1;
          }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
            var MonthFromTime_t = 2;
          }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
            var MonthFromTime_t = 3;
          }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
            var MonthFromTime_t = 4;
          }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
            var MonthFromTime_t = 5;
          }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
            var MonthFromTime_t = 6;
          }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
            var MonthFromTime_t = 7;
          }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
            var MonthFromTime_t = 8;
          }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
            var MonthFromTime_t = 9;
          }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
            var MonthFromTime_t = 10;
          }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
            var MonthFromTime_t = 11;
          }
          if (MonthFromTime_t === mn) {
            // DateFromTime(t)
            var msPerDay = 86400000;
            var Day_t = @floor(t/msPerDay);

            var y = 0;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;

            while (TimeFromYear_y <= t) {
              y += 1;
              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var TimeFromYear_y = msPerDay * DayFromYear_y;
            }
            y -= 1;
            var YearFromTime_t = y;

            var y = YearFromTime_t;

            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var DayWithinYear_t = Day_t - DayFromYear_y

            if (0 <= DayWithinYear_t < 31) {
              var MonthFromTime_t = 0;
            }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
              var MonthFromTime_t = 1;
            }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
              var MonthFromTime_t = 2;
            }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
              var MonthFromTime_t = 3;
            }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
              var MonthFromTime_t = 4;
            }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
              var MonthFromTime_t = 5;
            }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
              var MonthFromTime_t = 6;
            }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
              var MonthFromTime_t = 7;
            }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
              var MonthFromTime_t = 8;
            }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
              var MonthFromTime_t = 9;
            }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
              var MonthFromTime_t = 10;
            }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
              var MonthFromTime_t = 11;
            }

            if (MonthFromTime_t === 0) {
              var DateFromTime = DayWithinYear_t + 1;
            }else if (MonthFromTime_t === 1) {
              var DateFromTime = DayWithinYear_t - 30;
            }else if (MonthFromTime_t === 2) {
              var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
            }else if (MonthFromTime_t === 3) {
              var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
            }else if (MonthFromTime_t === 4) {
              var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
            }else if (MonthFromTime_t === 5) {
              var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
            }else if (MonthFromTime_t === 6) {
              var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
            }else if (MonthFromTime_t === 7) {
              var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
            }else if (MonthFromTime_t === 8) {
              var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
            }else if (MonthFromTime_t === 9) {
              var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
            }else if (MonthFromTime_t === 10) {
              var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
            }else if (MonthFromTime_t === 11) {
              var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
            }
            if (DateFromTime === 1){
              break;
            }
          }
        }
        t += 1;
      }
      if (t === 8.64e+15) {
        return_val = NaN;
      }
      else {
      var msPerDay = 86400000;
      var Day_t = @floor(t/msPerDay);
      return_val = Day_t + dt - 1;
      }
    }
    arg2 = return_val;
    // MakeDate
    var day = arg2;
    var time = arg1;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
      return_val = day * msPerDay + time;
    }
    var newDate = return_val;
    // 6. Let v be TimeClip(newDate).
    var time = newDate;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    var v = return_val;
    // 7. Set the [[PrimitiveValue]] internal property of this Date object to v.
    @PrimitiveValue(this,v);
    // 8. Return v.
    return v;
  }
  \\],
  139: [\\
  function toUTCString () {
    // Need to know internal structure of Date object
    return @StrTop;
  }
  \\],
  140: [\\
  function toISOString () {
    // Need to know internal structure of Date object
    var t = @PrimitiveValue(this);
    if (@SameValue(t,Infinity) || @SameValue(t,-Infinity) || @SameValue(t,NaN)) {
      throw new RangeError();
    }
    return @StrTop;
  }
  \\],
  141: [\\
  function () {
  }
  \\],
  142: [\\
  function Date (year,month,date,hours,minutes,seconds,ms) {
    // All of the arguments are optional; any arguments supplied are accepted but are completely ignored. A String is created and returned as if by the expression (new Date()).toString()
    return (new Date()).toString();
  }
  \\],
  143: [\\
  function Date () {
    if (arguments.length === 0) {
      var obj = {};
      @Prototype(obj, Date.prototype);
      @Class(obj, "Date");
      @Extensible(obj, true);
      @PrimitiveValue(obj, @NumTop);
      return obj;
    }else if (arguments.length === 1) {
      var value = arguments[0];
      // 1. Let v be ToPrimitive(value).
      var v = @ToPrimitive(value);
      // 2. If Type(v) is String, then
      if (@SameValue(typeof v,"string")) {
        // a. Parse v as a date, in exactly the same manner as for the parse method (15.9.4.2); let V be the time value for this date.
        var V = Date.parse(v)
      }
      // 3. Else, let V be ToNumber(v).
      else {
        var V = @ToNumber(v);
      }
      // 4. Set the [[PrimitiveValue]] internal property of the newly constructed object to TimeClip(V) and return.
      var time = V;
      var return_val;
      if (time === Infinity) {
        return_val = NaN;
      }
      else if (@abs(time) > 8.64e+15) {
        return_val = NaN;
      }else {
        return_val = @ToInteger(time);
      }
      var obj = {};
      @Prototype(obj, Date.prototype);
      @Class(obj, "Date");
      @Extensible(obj, true);
      @PrimitiveValue(obj, return_val);
      return obj;
    }else if (arguments.length > 1) {
      var year = arguments[0];
      var month = arguments[1];
      // 1. Let y be ToNumber(year).
      var y = @ToNumber(year);
      // 2. Let m be ToNumber(month).
      var m = @ToNumber(month);
      // 3. If date is supplied then let dt be ToNumber(date); else let dt be 1.
      if (arguments.length > 2) {
        var dt = @ToNumber(arguments[2]);
      }else {
        var dt = 1;
      }
      // 4. If hours is supplied then let h be ToNumber(hours); else let h be 0.
      if (arguments.length > 3) {
        var h = @ToNumber(arguments[3]);
      }else {
        var h = 0;
      }
      // 5. If minutes is supplied then let min be ToNumber(minutes); else let min be 0.
      if (arguments.length > 4) {
        var min = @ToNumber(arguments[4]);
      }else {
        var min = 0;
      }
      // 6. If seconds is supplied then let s be ToNumber(seconds); else let s be 0.
      if (arguments.length > 5) {
        var s = @ToNumber(arguments[5]);
      }else {
        var s = 0;
      }
      // 7. If ms is supplied then let milli be ToNumber(ms); else let milli be 0.
      if (arguments.length > 6) {
        var milli = @ToNumber(arguments[6]);
      }else {
        milli = 0;
      }
      // 8. If y is not NaN and 0   ToInteger(y)   99, then let yr be 1900+ToInteger(y); otherwise, let yr be y.
      if (!@SameValue(y,NaN) && (0 <= @ToInteger(y) && @ToInteger(y) <= 99)) {
        var yr = 1900 + @ToInteger(t);
      }else {
        var yr = y;
      }
      // 9. Let finalDate be MakeDate(MakeDay(yr, m, dt), MakeTime(h, min, s, milli)).
      var arg1;
      var arg2;
      // MakeDay
      var year = yr;
      var month = m;
      var date = dt;
      var return_val;
      if (year === Infinity || month === Infinity || date === Infinity) {
        return_val = NaN;
      }else {
        var y = @ToInteger(year);
        var m = @ToInteger(month);
        var dt = @ToInteger(date);
        var ym = y + @floor(m/12);
        var mn = m % 12;
        var t = 0;
        while (t < 8.64e+15) {
          // YearFromTime(t)
          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;
          if (YearFromTime_t === ym) {
            // MonthFromTime(t)
            var msPerDay = 86400000;
            var Day_t = @floor(t/msPerDay);

            var y = 0;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;

            while (TimeFromYear_y <= t) {
              y += 1;
              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var TimeFromYear_y = msPerDay * DayFromYear_y;
            }
            y -= 1;
            var YearFromTime_t = y;

            var y = YearFromTime_t;

            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var DayWithinYear_t = Day_t - DayFromYear_y

            var y = 0;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var msPerDay = 86400000;
            var TimeFromYear_y = msPerDay * DayFromYear_y;

            while (TimeFromYear_y <= t) {
              y += 1;
              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var TimeFromYear_y = msPerDay * DayFromYear_y;
            }
            y -= 1;
            var YearFromTime_t = y;

            var y = YearFromTime_t;

            if (y % 4 !== 0) {
              var DaysInYear_y = 365;
            }else if (y % 4 === 0 && y % 100 !== 0) {
              var DaysInYear_y = 366;
            }else if (y % 100 === 0 && y % 400 !== 0) {
              var DaysInYear_y = 365;
            }else if (y % 400 === 0) {
              var DaysInYear_y = 366;
            }

            if (DaysInYear_y === 365) {
              var InLeapYear_t = 0;
            }else {
              var InLeapYear_t = 1;
            }

            if (0 <= DayWithinYear_t < 31) {
              var MonthFromTime_t = 0;
            }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
              var MonthFromTime_t = 1;
            }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
              var MonthFromTime_t = 2;
            }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
              var MonthFromTime_t = 3;
            }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
              var MonthFromTime_t = 4;
            }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
              var MonthFromTime_t = 5;
            }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
              var MonthFromTime_t = 6;
            }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
              var MonthFromTime_t = 7;
            }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
              var MonthFromTime_t = 8;
            }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
              var MonthFromTime_t = 9;
            }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
              var MonthFromTime_t = 10;
            }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
              var MonthFromTime_t = 11;
            }
            if (MonthFromTime_t === mn) {
              // DateFromTime(t)
              var msPerDay = 86400000;
              var Day_t = @floor(t/msPerDay);

              var y = 0;
              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var TimeFromYear_y = msPerDay * DayFromYear_y;

              while (TimeFromYear_y <= t) {
                y += 1;
                var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

                var TimeFromYear_y = msPerDay * DayFromYear_y;
              }
              y -= 1;
              var YearFromTime_t = y;

              var y = YearFromTime_t;

              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var DayWithinYear_t = Day_t - DayFromYear_y

              if (0 <= DayWithinYear_t < 31) {
                var MonthFromTime_t = 0;
              }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
                var MonthFromTime_t = 1;
              }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
                var MonthFromTime_t = 2;
              }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
                var MonthFromTime_t = 3;
              }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
                var MonthFromTime_t = 4;
              }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
                var MonthFromTime_t = 5;
              }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
                var MonthFromTime_t = 6;
              }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
                var MonthFromTime_t = 7;
              }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
                var MonthFromTime_t = 8;
              }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
                var MonthFromTime_t = 9;
              }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
                var MonthFromTime_t = 10;
              }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
                var MonthFromTime_t = 11;
              }

              if (MonthFromTime_t === 0) {
                var DateFromTime = DayWithinYear_t + 1;
              }else if (MonthFromTime_t === 1) {
                var DateFromTime = DayWithinYear_t - 30;
              }else if (MonthFromTime_t === 2) {
                var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
              }else if (MonthFromTime_t === 3) {
                var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
              }else if (MonthFromTime_t === 4) {
                var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
              }else if (MonthFromTime_t === 5) {
                var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
              }else if (MonthFromTime_t === 6) {
                var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
              }else if (MonthFromTime_t === 7) {
                var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
              }else if (MonthFromTime_t === 8) {
                var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
              }else if (MonthFromTime_t === 9) {
                var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
              }else if (MonthFromTime_t === 10) {
                var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
              }else if (MonthFromTime_t === 11) {
                var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
              }
              if (DateFromTime === 1){
                break;
              }
            }
          }
          t += 1;
        }
        if (t === 8.64e+15) {
          return_val = NaN;
        }
        else {
        var msPerDay = 86400000;
        var Day_t = @floor(t/msPerDay);
        return_val = Day_t + dt - 1;
        }
      }
      arg1 = return_val;
      //  MakeTime
      var hour = h;
      var sec = s;
      var ms = milli;
      var return_val;

      var HoursPerDay = 24;
      var MinutesPerHour = 60;
      var SecondsPerMinute= 60;
      var msPerSecond = 1000;
      var msPerMinute = 60000;
      var msPerHour = 3600000;


      if (hour === Infinity || min === Infinity || sec === Infinity || ms === Infinity) {
        return_val = NaN;
      }else {
        var h = @ToInteger(hour);
        var m = @ToInteger(min);
        var s = @ToInteger(sec);
        var milli = @ToInteger(ms);
        var t = h * msPerHour + m * msPerMinute + s * msPerSecond + milli;
        return_val = t;
      }
      arg2 = return_val;
      // MakeDate
      var day = arg1;
      var time = arg2;
      var return_val;
      var msPerDay = 86400000;
      if (day === Infinity || time === Infinity) {
        return_val = NaN;
      }else {
        return_val = day * msPerDay + time;
      }
      var finalDate = return_val;
      // 10. Set the [[PrimitiveValue]] internal property of the newly constructed object to TimeClip(UTC(finalDate)
      // TODO Need UTC(t) -> Need LocalTZA
      var time = finalDate;
      var return_val;
      if (time === Infinity || time === -Infinity || @SameValue(time,NaN)) {
        return_val = NaN;
      }else if (@abs(time) > 8.64e+15) {
        return_val = NaN;
      }else {
        return_val = @ToInteger(time);
      }
      var obj = {};
      @Prototype(obj, Date.prototype);
      @Class(obj, "Date");
      @Extensible(obj, true);
      @PrimitiveValue(obj, return_val);
      return obj;
    }
  }
  \\],
  144: [\\
  function parse () {
    // TODO
    return @NumTop;
  }
  \\],
  145: [\\
  function UTC (year,month,date,hours,minutes,seconds,ms) {
    // 1. Let y be ToNumber(year).
    var y = @ToNumber(year);
    // 2. Let m be ToNumber(month).
    var m = @ToNumber(month);
    // 3. If date is supplied then let dt be ToNumber(date); else let dt be 1.
    if (arguments.length > 2) {
      var dt = @ToNumber(date);
    }else {
      var dt = 1;
    }
    // 4. If hours is supplied then let h be ToNumber(hours); else let h be 0.
    if (arguments.length > 3) {
      var h = @ToNumber(hours);
    }else {
      var h = 0;
    }
    // 5. If minutes is supplied then let min be ToNumber(minutes); else let min be 0.
    if (arguments.length > 4) {
      var min = @ToNumber(minutes);
    }else {
      var min = 0;
    }
    // 6. If seconds is supplied then let s be ToNumber(seconds); else let s be 0.
    if (arguments.length > 5) {
      var s = @ToNumber(seconds);
    }else {
      var s = 0;
    }
    // 7. If ms is supplied then let milli be ToNumber(ms); else let milli be 0.
    if (arguments. length > 6) {
      var milli = @ToNumber(ms);
    }else {
      var milli = 0;
    }
    // 8. If y is not NaN and 0   ToInteger(y)   99, then let yr be 1900+ToInteger(y); otherwise, let yr be y.
    if (!@SameValue(y,NaN) && (0 <= @ToInteger(y) && @ToInteger(y) <= 99)) {
      var yr = 1900 + @ToInteger(y);
    }else {
      var yr = y;
    }
    // 9. Return TimeClip(MakeDate(MakeDay(yr, m, dt), MakeTime(h, min, s, milli))).
    var arg1; // MakeDay(yr,m,dt)
    var arg2; // MakeTime(h, min, s, milli);
    var arg3; // MakeDate(arg1,arg2)
    // MakeDay(yr,m,dt);
    var year = yr;
    var month = m;
    var date = dt;
    var return_val;
    if (year === Infinity || month === Infinity || date === Infinity) {
      return_val = NaN;
    }else {
      var y = @ToInteger(year);
      var m = @ToInteger(month);
      var dt = @ToInteger(date);
      var ym = y + @floor(m/12);
      var mn = m % 12;
      var t = 0;
      while (t < 8.64e+15) {
        // YearFromTime(t)
        var y = 0;
        var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

        var TimeFromYear_y = msPerDay * DayFromYear_y;

        while (TimeFromYear_y <= t) {
          y += 1;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;
        }
        y -= 1;
        var YearFromTime_t = y;
        if (YearFromTime_t === ym) {
          // MonthFromTime(t)
          var msPerDay = 86400000;
          var Day_t = @floor(t/msPerDay);

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var DayWithinYear_t = Day_t - DayFromYear_y

          var y = 0;
          var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

          var msPerDay = 86400000;
          var TimeFromYear_y = msPerDay * DayFromYear_y;

          while (TimeFromYear_y <= t) {
            y += 1;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;
          }
          y -= 1;
          var YearFromTime_t = y;

          var y = YearFromTime_t;

          if (y % 4 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 4 === 0 && y % 100 !== 0) {
            var DaysInYear_y = 366;
          }else if (y % 100 === 0 && y % 400 !== 0) {
            var DaysInYear_y = 365;
          }else if (y % 400 === 0) {
            var DaysInYear_y = 366;
          }

          if (DaysInYear_y === 365) {
            var InLeapYear_t = 0;
          }else {
            var InLeapYear_t = 1;
          }

          if (0 <= DayWithinYear_t < 31) {
            var MonthFromTime_t = 0;
          }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
            var MonthFromTime_t = 1;
          }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
            var MonthFromTime_t = 2;
          }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
            var MonthFromTime_t = 3;
          }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
            var MonthFromTime_t = 4;
          }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
            var MonthFromTime_t = 5;
          }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
            var MonthFromTime_t = 6;
          }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
            var MonthFromTime_t = 7;
          }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
            var MonthFromTime_t = 8;
          }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
            var MonthFromTime_t = 9;
          }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
            var MonthFromTime_t = 10;
          }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
            var MonthFromTime_t = 11;
          }
          if (MonthFromTime_t === mn) {
            // DateFromTime(t)
            var msPerDay = 86400000;
            var Day_t = @floor(t/msPerDay);

            var y = 0;
            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var TimeFromYear_y = msPerDay * DayFromYear_y;

            while (TimeFromYear_y <= t) {
              y += 1;
              var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

              var TimeFromYear_y = msPerDay * DayFromYear_y;
            }
            y -= 1;
            var YearFromTime_t = y;

            var y = YearFromTime_t;

            var DayFromYear_y = 365 * (y - 1970) + @floor((y - 1969) / 4) - @floor((y - 1901) / 100) + @floor((y - 1601) / 400);

            var DayWithinYear_t = Day_t - DayFromYear_y

            if (0 <= DayWithinYear_t < 31) {
              var MonthFromTime_t = 0;
            }else if (31 <= DayWithinYear_t < 59 + InLeapYear_t) {
              var MonthFromTime_t = 1;
            }else if (59 + InLeapYear_t <= DayWithinYear_t < 90 + InLeapYear_t) {
              var MonthFromTime_t = 2;
            }else if (90 + InLeapYear_t <= DayWithinYear_t < 120 + InLeapYear_t) {
              var MonthFromTime_t = 3;
            }else if (120 + InLeapYear_t <= DayWithinYear_t < 151 + InLeapYear_t) {
              var MonthFromTime_t = 4;
            }else if (151 + InLeapYear_t <= DayWithinYear_t < 181 + InLeapYear_t) {
              var MonthFromTime_t = 5;
            }else if (181 + InLeapYear_t <= DayWithinYear_t < 212 + InLeapYear_t) {
              var MonthFromTime_t = 6;
            }else if (212 + InLeapYear_t <= DayWithinYear_t < 243 + InLeapYear_t) {
              var MonthFromTime_t = 7;
            }else if (243 + InLeapYear_t <= DayWithinYear_t < 273 + InLeapYear_t) {
              var MonthFromTime_t = 8;
            }else if (273 + InLeapYear_t <= DayWithinYear_t < 304 + InLeapYear_t) {
              var MonthFromTime_t = 9;
            }else if (304 + InLeapYear_t <= DayWithinYear_t < 334 + InLeapYear_t) {
              var MonthFromTime_t = 10;
            }else if (334 + InLeapYear_t <= DayWithinYear_t < 365 + InLeapYear_t) {
              var MonthFromTime_t = 11;
            }

            if (MonthFromTime_t === 0) {
              var DateFromTime = DayWithinYear_t + 1;
            }else if (MonthFromTime_t === 1) {
              var DateFromTime = DayWithinYear_t - 30;
            }else if (MonthFromTime_t === 2) {
              var DateFromTime = DayWithinYear_t - 58 - InLeapYear_t;
            }else if (MonthFromTime_t === 3) {
              var DateFromTime = DayWithinYear_t - 89 - InLeapYear_t;
            }else if (MonthFromTime_t === 4) {
              var DateFromTime = DayWithinYear_t - 119 - InLeapYear_t;
            }else if (MonthFromTime_t === 5) {
              var DateFromTime = DayWithinYear_t - 150 - InLeapYear_t;
            }else if (MonthFromTime_t === 6) {
              var DateFromTime = DayWithinYear_t - 180 - InLeapYear_t;
            }else if (MonthFromTime_t === 7) {
              var DateFromTime = DayWithinYear_t - 211 - InLeapYear_t;
            }else if (MonthFromTime_t === 8) {
              var DateFromTime = DayWithinYear_t - 242 - InLeapYear_t;
            }else if (MonthFromTime_t === 9) {
              var DateFromTime = DayWithinYear_t - 272 - InLeapYear_t;
            }else if (MonthFromTime_t === 10) {
              var DateFromTime = DayWithinYear_t - 303 - InLeapYear_t;
            }else if (MonthFromTime_t === 11) {
              var DateFromTime = DayWithinYear_t - 333 - InLeapYear_t;
            }
            if (DateFromTime === 1){
              break;
            }
          }
        }
        t += 1;
      }
      if (t === 8.64e+15) {
        return_val = NaN;
      }else {
      var msPerDay = 86400000;
      var Day_t = @floor(t/msPerDay);
      return_val = Day_t + dt - 1;
      }
    }
    arg1 = return_val;

    // MakeTime(h, min, s, milli)
    var hour = h;
    var min = min;
    var sec = s;
    var ms = milli;
    var return_val;

    var HoursPerDay = 24;
    var MinutesPerHour = 60;
    var SecondsPerMinute= 60;
    var msPerSecond = 1000;
    var msPerMinute = 60000;
    var msPerHour = 3600000;

    if (hour === Infinity || min === Infinity || sec === Infinity || ms === Infinity) {
      return_val = NaN;
    }else {
      var h = @ToInteger(hour);
      var m = @ToInteger(min);
      var s = @ToInteger(sec);
      var milli = @ToInteger(ms);
      var t = h * msPerHour + m * msPerMinute + s * msPerSecond + milli;
      return_val = t;
    }
    arg2 = return_val;

    // MakeDate(MakeDay(yr, m, dt), MakeTime(h, min, s, milli))
    var day = arg1;
    var time = arg2;
    var return_val;
    var msPerDay = 86400000;
    if (day === Infinity || time === Infinity) {
      return_val = NaN;
    }else {
      return_val = day * msPerDay + time;
    }
    arg3 = return_val;

    // TimeClip(MakeDate(MakeDay(yr, m, dt), MakeTime(h, min, s, milli)))
    var time = arg3;
    var return_val;
    if (time === Infinity) {
      return_val = NaN;
    }
    else if (@abs(time) > 8.64e+15) {
      return_val = NaN;
    }else {
      return_val = @ToInteger(time);
    }
    return return_val;
  }
  \\],
  146: [\\
  function now () {
    // TODO
    return @NumTop;
  }
  \\],
  147: [\\
  function () {
  }
  \\],
  148: [\\
  function () {
  }
  \\],
  149: [\\
  function () {
  }
  \\],
  150: [\\
  function RegExp () {
    return new RegExp();
  }
  \\],
  151: [\\
  function RegExp () {
    var obj = {};
    @Class(obj,"RegExp");
    @Prototype(obj,RegExp.prototype);
    obj.source = @StrTop;
    obj.global = @BoolTop;
    obj.ignoreCase = @BoolTop;
    obj.multiline = @BoolTop;
    obj.lastIndex = @NumTop;
    return obj;
  }
  \\],
  152: [\\
  function toString() {
    // 1. Let O be the this value.
    var O = this;
    // 2. If Type(O) is not Object, throw a TypeError exception.
    if (!@SameValue(typeof O,"object")){
      throw new TypeError();
    }
    // 3. Let name be the result of calling the [[Get]] internal method of O with argument "name".
    var name = O.name;
    // 4. If name is undefined, then let name be "Error"; else let name be ToString(name).
    if (@SameValue(name,undefined)) {
      var name = "Error";
    }else {
      var name = @ToString(name);
    }
    // 5. Let msg be the result of calling the [[Get]] internal method of O with argument "message".
    var msg = O.message;
    // 6. If msg is undefined, then let msg be the empty String; else let msg be ToString(msg).
    if (@SameValue(msg,undefined)) {
      var msg = "";
    }else {
      msg = @ToString(msg);
    }
    // 7. If name is the empty String, return msg.
    if (@SameValue(name,"")) {
      return msg;
    }
    // 8. If msg is the empty String, return name.
    if (@SameValue(msg,"")) {
      return name;
    }
    // 9. Return the result of concatenating name, ":", a single space character, and msg.
    return name + ": " + msg;
  }
  \\],
  153: [\\
  function Error (message) {
    var obj ={};
    @Prototype(obj,Error.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  154: [\\
  function Error (message) {
    var obj ={};
    @Prototype(obj,Error.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  155: [\\
  function EvalError (message) {
    var obj = {};
    @Prototype(obj,EvalError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  156: [\\
  function EvalError (message) {
    var obj = {};
    @Prototype(obj,EvalError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  157: [\\
  function RangeError (message) {
    var obj = {};
    @Prototype(obj,RangeError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  158: [\\
  function RangeError (message) {
    var obj = {};
    @Prototype(obj,RangeError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  159: [\\
  function ReferenceError (message) {
    var obj = {};
    @Prototype(obj,ReferenceError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  160: [\\
  function ReferenceError (message) {
    var obj = {};
    @Prototype(obj,ReferenceError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  161: [\\
  function SyntaxError (message) {
    var obj = {};
    @Prototype(obj,SyntaxError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  162: [\\
  function SyntaxError (message) {
    var obj = {};
    @Prototype(obj,SyntaxError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;

  }
  \\],
  163: [\\
  function TypeError (message) {
    var obj = {};
    @Prototype(obj,TypeError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  164: [\\
  function TypeError (message) {
    var obj = {};
    @Prototype(obj,TypeError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  165: [\\
  function URIError (message) {
    var obj = {};
    @Prototype(obj,URIError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  166: [\\
  function URIError (message) {
    var obj = {};
    @Prototype(obj,URIError.prototype);
    @Class(obj,"Error");
    @Extensible(obj,true);
    if (!@SameValue(message,undefined)) {
      obj.message = @ToString(message);
    }
    return obj;
  }
  \\],
  167: [\\
  function abs (x) {
    return @abs(x);
  }
  \\],
  168: [\\
  function acos (x) {
    return @acos(x);
  }
  \\],
  169: [\\
  function asin (x) {
    return @asin(x);
  }
  \\],
  170: [\\
  function atan (x) {
    return @atan(x);
  }
  \\],
  171: [\\
  function atan2 (x, y) {
    return @atan2(x, y);
  }
  \\],
  172: [\\
  function ceil (x) {
    return @ceil(x);
  }
  \\],
  173: [\\
  function cos (x) {
    return @cos(x);
  }
  \\],
  174: [\\
  function exp (x) {
    return @exp(x);
  }
  \\],
  175: [\\
  function floor (x) {
    return @floor(x);
  }
  \\],
  176: [\\
  function log (x) {
    return @log(x);
  }
  \\],
  177: [\\
  function max () {
    var i, n = arguments.length, v = -Infinity;
    for (i = 0; i < n; i++) {
      var cur = @ToNumber(arguments[i])
      if (@SameValue(cur, NaN)) return NaN;
      if (v < cur) v = cur;
      if (@SameValue(v, -0) && @SameValue(cur, +0)) v = +0;
    }
    return v;
  }
  \\],
  178: [\\
  function min () {
    var i, n = arguments.length, v = Infinity;
    for (i = 0; i < n; i++) {
      var cur = @ToNumber(arguments[i])
      if (@SameValue(cur, NaN)) return NaN;
      if (v > cur) v = cur;
      if (@SameValue(v, +0) && @SameValue(cur, -0)) v = -0;
    }
    return v;
  }
  \\],
  179: [\\
  function pow (x, y) {
    return @pow(x, y);
  }
  \\],
  180: [\\
  function random () {
    return @NumTop;
  }
  \\],
  181: [\\
  function round (x) {
    return @round(x);
  }
  \\],
  182: [\\
  function sin (x) {
    return @sin(x);
  }
  \\],
  183: [\\
  function sqrt (x) {
    return @sqrt(x);
  }
  \\],
  184: [\\
  function tan (x) {
    return @tan(x);
  }
  \\],
  185: [\\
  function () {
  }
  \\],
  186: [\\
  function () {
  }
  \\]
}
